No files changed, compilation skipped

Ran 1 test for test/pool-bin/libraries/BinPoolParameterHelper.t.sol:BinPoolParametersHelperTest
[PASS] testFuzz_SetBinStep(uint16) (runs: 5, μ: 5453, ~: 5453)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 287.21µs (201.96µs CPU time)

Ran 2 tests for test/pool-bin/types/BinSlot0.t.sol:BinSlot0Test
[PASS] test_fuzz_slot0_pack_unpack(uint24,uint24,uint24) (runs: 6, μ: 5824, ~: 5824)
[PASS] test_slot0_constants_masks() (gas: 3169)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 665.25µs (507.08µs CPU time)

Ran 15 tests for test/pool-bin/BinPoolManagerOwner.t.sol:BinPoolManagerOwnerTest
[PASS] test_PausePoolManager_NotOwnerOrPausableRoleMember() (gas: 15676)
[PASS] test_PausePoolManager_OnlyOwner() (gas: 45569)
[PASS] test_PausePoolManager_OnlyPausableRoleMember() (gas: 71013)
[PASS] test_SetMaxBinStep_NotOwner() (gas: 13067)
[PASS] test_SetMaxBinStep_OnlyOwner() (gas: 27079)
[PASS] test_SetMinBinSharesForDonate_NotOwner() (gas: 13476)
[PASS] test_SetMinBinSharesForDonate_OnlyOwner() (gas: 28975)
[PASS] test_SetProtocolFeeController_NotOwner() (gas: 15597)
[PASS] test_SetProtocolFeeController_OnlyOwner() (gas: 29633)
[PASS] test_TransferPoolManagerOwnership_NotOwner() (gas: 13440)
[PASS] test_TransferPoolManagerOwnership_NotPendingPoolManagerOwner() (gas: 37995)
[PASS] test_TransferPoolManagerOwnership_OnlyOwner() (gas: 45684)
[PASS] test_TransferPoolManagerOwnership_OverridePendingOwner() (gas: 52832)
[PASS] test_UnPausePoolManager_NotOwner() (gas: 72432)
[PASS] test_UnPausePoolManager_OnlyOwner() (gas: 34149)
Suite result: ok. 15 passed; 0 failed; 0 skipped; finished in 1.18ms (558.67µs CPU time)

Ran 5 tests for test/libraries/BipsLibrary.t.sol:BipsLibraryTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0e2270d70000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a2 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55]]] test_fuzz_calculatePortion(uint256,uint256) (runs: 1, μ: 6735, ~: 6735)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x9e6396d0000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] test_fuzz_gasLimit(uint256) (runs: 0, μ: 0, ~: 0)
[PASS] test_gasLimit_100_percent() (gas: 3292)
[PASS] test_gasLimit_1BP() (gas: 5423)
[PASS] test_gasLimit_1_percent() (gas: 5382)
Suite result: FAILED. 3 passed; 2 failed; 0 skipped; finished in 384.75µs (322.38µs CPU time)

Ran 2 tests for test/pool-cl/types/CLSlot0.t.sol:CLSlot0Test
[PASS] test_fuzz_slot0_pack_unpack(uint160,int24,uint24,uint24) (runs: 6, μ: 6785, ~: 6785)
[PASS] test_slot0_constants_masks() (gas: 3615)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 712.33µs (588.00µs CPU time)

Ran 11 tests for test/libraries/BalanceDelta.t.sol:TestBalanceDelta
[PASS] test_add() (gas: 6872)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_add_revertsOnOverflow() (gas: 3417)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x77a06f20000000000000000000000000000000000000000000006df87afecf92d16317c0fffffffffffffffffffffffffffffffffffffffffffffffff9c1d05a13ffcbd8000000000000000000000000000000007ffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeca args=[519321601912417493915584 [5.193e23], -449849402459173928 [-4.498e17], 170141183460469231731687303715884105726 [1.701e38], -310]] test_fuzz_add(int128,int128,int128,int128) (runs: 3, μ: 4515, ~: 4515)
[PASS] test_fuzz_amount0_amount1(int128,int128) (runs: 6, μ: 4070, ~: 4070)
[PASS] test_fuzz_eq(int128,int128,int128,int128) (runs: 6, μ: 3828, ~: 3828)
[PASS] test_fuzz_neq(int128,int128,int128,int128) (runs: 6, μ: 3369, ~: 3369)
[PASS] test_fuzz_sub(int128,int128,int128,int128) (runs: 7, μ: 4354, ~: 4354)
[PASS] test_fuzz_toBalanceDelta(int128,int128) (runs: 7, μ: 3809, ~: 3809)
[PASS] test_sub() (gas: 7175)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_sub_revertsOnUnderflow() (gas: 3593)
[PASS] test_toBalanceDelta() (gas: 7343)
Suite result: FAILED. 8 passed; 3 failed; 0 skipped; finished in 1.61ms (1.45ms CPU time)

Ran 4 tests for test/pool-cl/libraries/CLPool.t.sol:PoolTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x34b35fcc000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae00000000000000000000000000007affae7463b1f0eb923ef954520dbae07ce20000000000000000000000000000000000000000000001be160d5f7114d96abd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000002f64 args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), 10714702777239348061190258498855904408009954 [1.071e43], 8228836888057277409981 [8.228e21], 0, 18, 12132 [1.213e4]]] testDonate(uint160,(address,int24,int24,int128,int24,bytes32),uint256,uint256,uint24,uint16,uint16) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x2a11f438000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae0000000000000000000000000000000000000000000000000000000000003ce2000000000000000000000000000000000000000000000000000000000000003d args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), 15586 [1.558e4], 61]] testModifyPosition(uint160,(address,int24,int24,int128,int24,bytes32),uint24,uint24) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x818fd36c00000000000000000000000000000000000000000000000000000000000001950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c args=[405, 0, 108]] testPoolInitialize(uint160,uint24,uint24) (runs: 1, μ: 32216, ~: 32216)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4571e780000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae0000000000000000000000000000000000000000000000000000000000001ce200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000178ab981932dd6900000000000000000000000000000000013fd3d8e3b1f0375a4c2bc9d320434d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000660000000000000000000000000000000000000000000000000000000000000009 args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), SwapParams({ tickSpacing: 7394, zeroForOne: false, amountSpecified: 106023260989349225 [1.06e17], sqrtPriceLimitX96: 1660639470050295085608157845334803277 [1.66e36], lpFeeOverride: 0 }), 0, 102, 9]] testSwap(uint160,(address,int24,int24,int128,int24,bytes32),(int24,bool,int256,uint160,uint24),uint24,uint16,uint16) (runs: 0, μ: 0, ~: 0)
Suite result: FAILED. 0 passed; 4 failed; 0 skipped; finished in 1.34ms (1.21ms CPU time)

Ran 3 tests for test/pool-cl/libraries/CLPoolGetters.t.sol:CLPoolGettersTest
[PASS] testGetFeeGrowthGlobals() (gas: 35878)
[PASS] testGetPoolBitmapInfo() (gas: 18796)
[PASS] testGetPoolTickInfo() (gas: 196368)
Suite result: ok. 3 passed; 0 failed; 0 skipped; finished in 171.00µs (113.54µs CPU time)

Ran 15 tests for test/libraries/Currency.t.sol:TestCurrency
[PASS] testCurrency_balanceOfSelf_native() (gas: 5493)
[PASS] testCurrency_balanceOfSelf_token() (gas: 11160)
[PASS] testCurrency_balanceOf_native() (gas: 5913)
[PASS] testCurrency_balanceOf_token() (gas: 11013)
[PASS] testCurrency_fromId_native_returns0() (gas: 5357)
[PASS] testCurrency_fromId_token_returnsAddressAsUint160() (gas: 5637)
[PASS] testCurrency_isNative_native_returnsTrue() (gas: 5404)
[PASS] testCurrency_isNative_token_returnsFalse() (gas: 5182)
[PASS] testCurrency_toId_native_returns0() (gas: 5665)
[PASS] testCurrency_toId_token_returnsAddressAsUint160() (gas: 5624)
[PASS] testCurrency_transfer_native_insufficientBalance() (gas: 180004)
[PASS] testCurrency_transfer_native_successfullyTransfersFunds() (gas: 16176)
[PASS] testCurrency_transfer_native_unsuccessfullyTransfersFunds() (gas: 47919)
[PASS] testCurrency_transfer_token_insufficientBalance() (gas: 206076)
[PASS] testCurrency_transfer_token_successfullyTransfersFunds() (gas: 24892)
Suite result: ok. 15 passed; 0 failed; 0 skipped; finished in 1.40ms (1.22ms CPU time)

Ran 6 tests for test/pool-bin/libraries/BinPoolDonate.t.sol:BinPoolDonateTest
[PASS] testDonate() (gas: 372075)
[PASS] testDonateOverflow_BinReserve() (gas: 364455)
[PASS] testDonateOverflow_LiquidityOverflow() (gas: 361691)
[PASS] testDonatePoolNotInitialized() (gas: 24404)
[PASS] testDonate_InsufficientBinShareForDonate(uint256) (runs: 7, μ: 382887, ~: 382743)
[PASS] testFuzzDonate(uint128,uint128) (runs: 7, μ: 373662, ~: 374975)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 4.43ms (3.76ms CPU time)

Ran 7 tests for test/libraries/math/Encoded.t.sol:EncodedTest
[PASS] testFuzz_Decode(bytes32,uint256,uint256) (runs: 7, μ: 3553, ~: 3553)
[PASS] testFuzz_Set(bytes32,uint256,uint256,uint256) (runs: 7, μ: 3493, ~: 3493)
[PASS] testFuzz_SetAndDecode(bytes32,uint256,uint256,uint256) (runs: 7, μ: 3831, ~: 3831)
[PASS] testFuzz_decodeBool(bytes32,uint256) (runs: 7, μ: 3861, ~: 3861)
[PASS] testFuzz_decodeUint16(bytes32,uint256) (runs: 7, μ: 3424, ~: 3424)
[PASS] testFuzz_decodeUint24(bytes32,uint256) (runs: 7, μ: 3446, ~: 3446)
[PASS] testFuzz_decodeUint64(bytes32,uint256) (runs: 7, μ: 3605, ~: 3605)
Suite result: ok. 7 passed; 0 failed; 0 skipped; finished in 971.29µs (914.21µs CPU time)

Ran 14 tests for test/pool-cl/libraries/BitMath.t.sol:BitMathTest
[PASS] testLeastSignificantBit(uint256) (runs: 7, μ: 3937, ~: 3888)
[PASS] testLeastSignificantBitMaxUint256() (gas: 3177)
[PASS] testLeastSignificantBitOne() (gas: 3322)
[PASS] testLeastSignificantBitPowersOfTwo() (gas: 162291)
[PASS] testLeastSignificantBitTwo() (gas: 3603)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testLeastSignificantBitZero() (gas: 3475)
[PASS] testLsbGas() (gas: 5386)
[PASS] testMostSignificantBit(uint256) (runs: 7, μ: 14976, ~: 14154)
[PASS] testMostSignificantBitMaxUint256() (gas: 3424)
[PASS] testMostSignificantBitOne() (gas: 3564)
[PASS] testMostSignificantBitPowersOfTwo() (gas: 175850)
[PASS] testMostSignificantBitTwo() (gas: 3091)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testMostSignificantBitZero() (gas: 3321)
[PASS] testMsbGas() (gas: 5496)
Suite result: FAILED. 12 passed; 2 failed; 0 skipped; finished in 3.42ms (3.35ms CPU time)

Ran 2 tests for test/pool-bin/BinCustomCurveHook.t.sol:BinCustomCurveHookTest
[PASS] test_Swap_CustomCurve(uint256) (runs: 7, μ: 359212, ~: 359215)
[PASS] test_addLiquidity_removeLiquidity() (gas: 312054)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 3.63ms (2.82ms CPU time)

Ran 14 tests for test/pool-bin/libraries/BinPoolLiquidity.t.sol:BinPoolLiquidityTest
[PASS] test_BurnHalfTwice() (gas: 1087870)
[PASS] test_MintFuzz(uint128,uint128) (runs: 7, μ: 495014, ~: 348220)
[PASS] test_MintTwice() (gas: 1355055)
[PASS] test_MintWithDifferentBins() (gas: 1299171)
[PASS] test_Mint_CompositionFeeGoesToLp() (gas: 352445)
[PASS] test_SimpleBurn() (gas: 1043373)
[PASS] test_SimpleMintX() (gas: 1350698)
[PASS] test_revert_BurnEmptyArraysOrDifferent() (gas: 170798)
[PASS] test_revert_BurnForZeroAmounts() (gas: 365217)
[PASS] test_revert_BurnMoreThanBalance() (gas: 396148)
[PASS] test_revert_BurnZeroShares() (gas: 151609)
[PASS] test_revert_MintEmptyConfig() (gas: 152594)
[PASS] test_revert_MintMoreThanAmountSent() (gas: 500953)
[PASS] test_revert_MintZeroShares() (gas: 161289)
Suite result: ok. 14 passed; 0 failed; 0 skipped; finished in 8.09ms (7.34ms CPU time)

Ran 8 tests for test/pool-bin/BinHookReturnsDelta.t.sol:BinHookReturnsDelta
[PASS] testBurn_FeeCharge() (gas: 416547)
[PASS] testMint_MintMore() (gas: 469363)
[PASS] testSwap_noSwap_returnUnspecifiedInBeforeSwap() (gas: 451041)
[PASS] testSwap_noSwap_returnUnspecifiedInBeforeSwapAndAfterSwap() (gas: 460236)
[PASS] testSwap_noSwap_specifyInput() (gas: 427872)
[PASS] testSwap_noSwap_specifyOutput() (gas: 407578)
[PASS] testSwap_swapLess() (gas: 438763)
[PASS] testSwap_swapMore() (gas: 426326)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 9.41ms (7.09ms CPU time)

Ran 11 tests for test/pool-bin/libraries/BinHelper.t.sol:BinHelperTest
[PASS] testFuzz_BinIsEmpty(uint128,uint128) (runs: 7, μ: 4729, ~: 4729)
[PASS] testFuzz_GetAmountOutOfBin(uint128,uint128,uint256,uint256) (runs: 7, μ: 10216, ~: 10042)
[PASS] testFuzz_GetAmountsIn(uint128,uint128,bool,int16,uint128,uint24) (runs: 7, μ: 13571, ~: 13619)
[PASS] testFuzz_GetAmountsOutLessThanBin(uint128,uint128,bool,int16,uint128,uint24) (runs: 7, μ: 6813, ~: 5820)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x07b8855a00000000000000000000000000000000000000000394c5756e51148d0295b83e000000000000000000000000000000000000000008f6afc75f22cfee5dfa2a170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005db385afb10e73b15000000000000000000000000000000000000000000000000e95bd5f3803a6d4b0207e594effe76d7d8118316d09771b0d4b3eb2391f99a2082ddc2bf6fa8ef1f000000000000000000000000000000000000000000000000000b798d14b6ada8000000000000000000000000000000000000000000000000000000000000343a args=[1108308523182339681307441214 [1.108e27], 2774105922087802388386294295 [2.774e27], 0, 108030196095916653333 [1.08e20], 16815268875522960715 [1.681e19], 918578141879821466194885358171871211715318759207994419305144017121752706847 [9.185e74], 3229871588683176 [3.229e15], 13370 [1.337e4]]] testFuzz_GetCompositionFees(uint128,uint128,uint16,uint128,uint128,uint256,uint256,uint24) (runs: 4, μ: 15718, ~: 15687)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x8378969f00000000000000000000000000000000000000000000000000000000000022480000000000000000000000000000000000000000000000000000000000000b7b16692de900000000000000000000000000000000000000000000000000000001 args=[8776, 2939, 10136718470886769920288884483190441267021582373733824082092025187547018690561 [1.013e76]]] testFuzz_GetLiquidity(uint128,uint128,uint256) (runs: 3, μ: 4432, ~: 4432)
[PASS] testFuzz_TryExploitShares(uint128,uint128,uint128,uint128,uint256) (runs: 9, μ: 4150, ~: 1336)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6ba2eacd00000000000000000000000000000000000000000000edf87afecf92d16317c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000fa5000000000000000000000000000000000000000000000000000000000000000f args=[1123784511719732081268672 [1.123e24], 3, 4005, 15]] testFuzz_VerifyAmountsNeqIds(uint128,uint128,uint24,uint24) (runs: 0, μ: 0, ~: 0)
[PASS] testFuzz_VerifyAmountsOnActiveId(uint128,uint128,uint24) (runs: 9, μ: 685, ~: 685)
[PASS] testFuzz_getAmountsOutFullBin(uint128,uint128,bool,int16,uint128,uint24) (runs: 9, μ: 10771, ~: 14322)
[PASS] testFuzz_getSharesAndEffectiveAmountsIn(uint128,uint128,uint128,uint128,uint256,uint256) (runs: 9, μ: 8055, ~: 11103)
Suite result: FAILED. 8 passed; 3 failed; 0 skipped; finished in 4.21ms (4.08ms CPU time)

Ran 2 tests for test/pool-cl/CLCustomCurveHook.t.sol:CLCustomCurveHookTest
[PASS] test_Swap_CustomCurve(uint256) (runs: 8, μ: 365953, ~: 365986)
[PASS] test_addLiquidity_removeLiquidityXX() (gas: 311713)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 4.94ms (3.29ms CPU time)

Ran 11 tests for test/pool-bin/libraries/BinPoolFee.t.sol:BinPoolFeeTest
[PASS] testFuzz_Mint_WithDynamicFeeTooLarge(uint24) (runs: 7, μ: 226593, ~: 226560)
[PASS] testFuzz_SwapOutputMoreThanMint(uint24,uint256) (runs: 7, μ: 739423, ~: 739426)
[PASS] testFuzz_Swap_WithDynamicFeeTooLarge(uint24) (runs: 7, μ: 428192, ~: 428301)
[PASS] test_Burn_NoFee() (gas: 306154)
[PASS] test_MintCompositionFee_DynamicFee() (gas: 472160)
[PASS] test_MintCompositionFee_NoProtocolFee() (gas: 385592)
[PASS] test_MintCompositionFee_WithDynamicFee() (gas: 710304)
[PASS] test_MintCompositionFee_WithProtocolFee() (gas: 449277)
[PASS] test_Mint_WithDynamicFeeFromBeforeMintTooLarge() (gas: 485625)
[PASS] test_Swap_NoFee() (gas: 385196)
[PASS] test_Swap_WithDynamicFee(uint24) (runs: 9, μ: 442972, ~: 442924)
Suite result: ok. 11 passed; 0 failed; 0 skipped; finished in 11.34ms (10.56ms CPU time)

Ran 5 tests for test/pool-bin/BinHookReturnsFee.t.sol:BinHookReturnsFeeTest
[PASS] test_dynamicReturnSwapFee_initializeZeroSwapFee() (gas: 176778)
[PASS] test_dynamicReturnSwapFee_notStored() (gas: 487823)
[PASS] test_dynamicReturnSwapFee_notUsedIfPoolIsStaticFee() (gas: 477849)
[PASS] test_dynamicReturnSwapFee_revertIfFeeTooLarge() (gas: 55543)
[PASS] test_fuzz_dynamicReturnSwapFee(uint24) (runs: 9, μ: 118636, ~: 127075)
Suite result: ok. 5 passed; 0 failed; 0 skipped; finished in 3.49ms (2.58ms CPU time)

Ran 2 tests for test/pool-bin/BinHookRevertWithReason.t.sol:BinHookRevertWithReasonTest
[PASS] testRevertWithHookNotImplemented() (gas: 192419)
[PASS] testRevertWithNoReason() (gas: 171290)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 593.54µs (88.38µs CPU time)

Ran 15 tests for test/pool-bin/BinHook.t.sol:BinHookTest
[PASS] testAfterBurnInvalidReturn() (gas: 474717)
[PASS] testAfterDonateInvalidReturn() (gas: 601065)
[PASS] testAfterInitializeInvalidReturn() (gas: 321293)
[PASS] testAfterMintInvalidReturn() (gas: 483005)
[PASS] testAfterSwapInvalidReturn() (gas: 602182)
[PASS] testBeforeDonateInvalidReturn() (gas: 592788)
[PASS] testBeforeInitializeInvalidReturn() (gas: 184062)
[PASS] testBurnInvalidReturn() (gas: 544905)
[PASS] testBurnSucceedsWithHook() (gas: 583364)
[PASS] testDonateSucceedsWithHook() (gas: 652737)
[PASS] testInitializeSucceedsWithHook() (gas: 303718)
[PASS] testMintInvalidReturn() (gas: 337141)
[PASS] testMintSucceedsWithHook() (gas: 585672)
[PASS] testSwapInvalidReturn() (gas: 592822)
[PASS] testSwapSucceedsWithHook() (gas: 656568)
Suite result: ok. 15 passed; 0 failed; 0 skipped; finished in 4.79ms (4.17ms CPU time)

Ran 10 tests for test/pool-cl/CLHookReturnsDelta.t.sol:CLHookReturnsDeltaTest
[PASS] testModifyPosition_AddLess() (gas: 464139)
[PASS] testModifyPosition_AddMore() (gas: 461014)
[PASS] testModifyPosition_RemoveLess() (gas: 483800)
[PASS] testModifyPosition_RemoveMore() (gas: 475830)
[PASS] testSwap_SwapLess() (gas: 520880)
[PASS] testSwap_SwapMore() (gas: 508436)
[PASS] testSwap_noSwap_returnUnspecifiedInBeforeSwap() (gas: 503961)
[PASS] testSwap_noSwap_returnUnspecifiedInBeforeSwapAndAfterSwap() (gas: 513185)
[PASS] testSwap_noSwap_specifyInput() (gas: 480844)
[PASS] testSwap_noSwap_specifyOutput() (gas: 465444)
Suite result: ok. 10 passed; 0 failed; 0 skipped; finished in 4.77ms (4.04ms CPU time)

Ran 15 tests for test/pool-bin/libraries/BinPoolSwap.t.sol:BinPoolSwapTest
[PASS] testGas_exactOutputMultipleBin_WithEmptyBins() (gas: 1761638)
[PASS] test_SwapWithProtocolFee_ExactIn_SwapForX() (gas: 596383)
[PASS] test_SwapWithProtocolFee_ExactIn_SwapForY() (gas: 596896)
[PASS] test_SwapWithProtocolFee_ExactIn_SwapForY_MultipleBin() (gas: 2033106)
[PASS] test_SwapWithProtocolFee_ExactOut_SwapForY() (gas: 576320)
[PASS] test_exactInputMultipleBin() (gas: 1796118)
[PASS] test_exactInputSingleBin_SwapForX() (gas: 367558)
[PASS] test_exactInputSingleBin_SwapForY() (gas: 367762)
[PASS] test_exactOutputMultipleBin() (gas: 1776245)
[PASS] test_exactOutputSingleBin_SwapForX() (gas: 347480)
[PASS] test_exactOutputSingleBin_SwapForY() (gas: 347168)
[PASS] test_revert_SwapAmountSpecifiedIsZero() (gas: 7632285)
[PASS] test_revert_SwapInsufficientAmountOut() (gas: 7643080)
[PASS] test_revert_SwapOutOfLiquidity() (gas: 8255657)
[PASS] test_revert_swapMaxLiquidityPerBinfuzz(int128) (runs: 9, μ: 361824, ~: 361770)
Suite result: ok. 15 passed; 0 failed; 0 skipped; finished in 15.21ms (14.54ms CPU time)

Ran 8 tests for test/pool-bin/BinHookSkipCallback.t.sol:BinHookSkipCallbackTest
[PASS] testBurn_FromHook() (gas: 468573)
[PASS] testBurn_NotFromHook() (gas: 502076)
[PASS] testDonate_FromHook() (gas: 544059)
[PASS] testDonate_NotFromHook() (gas: 558443)
[PASS] testInitialize_FromHook() (gas: 171577)
[PASS] testInitialize_NotfromHook() (gas: 195427)
[PASS] testMint_FromHook() (gas: 509971)
[PASS] testMint_NotFromHook() (gas: 481437)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 2.61ms (1.78ms CPU time)

Ran 6 tests for test/pool-cl/libraries/CLPoolSwapFee.t.sol:CLPoolSwapFeeTest
[PASS] testCacheDynamicFeeAndSwap() (gas: 571701)
[PASS] testPoolInitializeFailsWithTooLargeFee() (gas: 29242)
[PASS] testRevertOnInitPoolWithDynamicFee() (gas: 22083)
[PASS] testSwapWorks() (gas: 576503)
[PASS] testSwapWorksWithStaticFee() (gas: 563898)
[PASS] testUpdateFailsWithTooLargeFee() (gas: 183771)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 1.75ms (1.10ms CPU time)

Ran 6 tests for test/pool-bin/libraries/BinPosition.t.sol:BinPositionTest
[PASS] testFuzz_AddShare(address,uint24,uint256) (runs: 9, μ: 26374, ~: 26374)
[PASS] testFuzz_AddShareMultiple(address,uint24,uint256,uint256) (runs: 9, μ: 31117, ~: 31183)
[PASS] testFuzz_CalculatePositionKey(address,uint24,bytes32) (runs: 9, μ: 3742, ~: 3742)
[PASS] testFuzz_GetPosition(address,uint24,bytes32,uint256) (runs: 9, μ: 26053, ~: 26053)
[PASS] testFuzz_SubShare(address,uint24,uint256) (runs: 9, μ: 16785, ~: 16791)
[PASS] testFuzz_SubShareMultiple(address,uint24,uint256,uint256) (runs: 9, μ: 30997, ~: 31063)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 1.40ms (1.33ms CPU time)

Ran 1 test for test/pool-cl/helpers/CLPoolParametersHelper.t.sol:CLPoolParametersHelperTest
[PASS] testFuzz_SetTickSpacing(int24) (runs: 9, μ: 5353, ~: 5353)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 184.79µs (139.29µs CPU time)

Ran 11 tests for test/pool-cl/CLPoolManagerOwner.t.sol:CLPoolManagerOwnerTest
[PASS] test_PausePoolManager_NotOwnerOrPausableRoleMember() (gas: 15610)
[PASS] test_PausePoolManager_OnlyOwner() (gas: 45573)
[PASS] test_PausePoolManager_OnlyPausableRoleMember() (gas: 70995)
[PASS] test_SetProtocolFeeController_NotOwner() (gas: 15553)
[PASS] test_SetProtocolFeeController_OnlyOwner() (gas: 46454)
[PASS] test_TransferPoolManagerOwnership_NotOwner() (gas: 13374)
[PASS] test_TransferPoolManagerOwnership_NotPendingPoolManagerOwner() (gas: 37907)
[PASS] test_TransferPoolManagerOwnership_OnlyOwner() (gas: 45609)
[PASS] test_TransferPoolManagerOwnership_OverridePendingOwner() (gas: 52692)
[PASS] test_UnPausePoolManager_NotOwner() (gas: 72395)
[PASS] test_UnPausePoolManager_OnlyOwner() (gas: 34150)
Suite result: ok. 11 passed; 0 failed; 0 skipped; finished in 2.85ms (1.54ms CPU time)

Ran 5 tests for test/pool-cl/libraries/CLPosition.t.sol:CLPositionTest
[PASS] test_MixFuzz(address,int24,int24,bytes32,int128) (runs: 9, μ: 35657, ~: 35873)
[PASS] test_fuzz_calculatePositionKey(address,int24,int24,bytes32) (runs: 9, μ: 3726, ~: 3726)
[PASS] test_get_emptyPosition() (gas: 10749)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xbc48a988ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffebffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a2 args=[-21, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77], 19571390754848919532304869803863391086042999602957394338 [1.957e55]]] test_set_updateEmptyPositionFuzz(int128,uint256,uint256) (runs: 1, μ: 72529, ~: 72529)
[PASS] test_set_updateNonEmptyPosition() (gas: 62882)
Suite result: FAILED. 4 passed; 1 failed; 0 skipped; finished in 840.71µs (765.00µs CPU time)

Ran 2 tests for test/pool-bin/BinMintBurnFeeHook.t.sol:BinMintBurnFeeHookTest
[PASS] test_Burn() (gas: 516934)
[PASS] test_Mint() (gas: 508525)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 1.35ms (695.50µs CPU time)

Ran 2 tests for test/libraries/SettlementGuard.t.sol:SettlementGuardTest
[PASS] testAccountDelta(address,address,int256,int256) (runs: 9, μ: 9476, ~: 9472)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x25b784dd0000000000000000000000003c2d28ca5f197831f2009ff4c092f847f5922eec000000000000000000000000aa3033f9bda5208128a52717788e35c99b5e3dab args=[0x3C2d28cA5f197831F2009ff4c092f847F5922eec, 0xAA3033f9BDa5208128A52717788e35C99b5e3Dab]] testSetLocker(address,address) (runs: 0, μ: 0, ~: 0)
Suite result: FAILED. 1 passed; 1 failed; 0 skipped; finished in 479.75µs (418.96µs CPU time)

Ran 3 tests for test/pool-cl/libraries/LiquidityMath.t.sol:LiquidityMathTest
[PASS] testAddDelta() (gas: 5801)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testAddDeltaOverflow() (gas: 3287)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testAddDeltaUnderflow() (gas: 3059)
Suite result: FAILED. 1 passed; 2 failed; 0 skipped; finished in 85.75µs (36.71µs CPU time)

Ran 5 tests for test/pool-cl/CLHookReturnsFee.t.sol:CLHookReturnsFeeTest
[PASS] test_dynamicReturnSwapFee_initializeZeroSwapFee() (gas: 174816)
[PASS] test_dynamicReturnSwapFee_notStored() (gas: 517780)
[PASS] test_dynamicReturnSwapFee_notUsedIfPoolIsStaticFee() (gas: 508048)
[PASS] test_dynamicReturnSwapFee_revertIfFeeTooLarge() (gas: 59749)
[PASS] test_fuzz_dynamicReturnSwapFee(uint24) (runs: 9, μ: 135722, ~: 158696)
Suite result: ok. 5 passed; 0 failed; 0 skipped; finished in 3.43ms (2.65ms CPU time)

Ran 41 tests for test/pool-cl/libraries/SqrtPriceMath.t.sol:SqrtPriceMathTest
[PASS] test_getAmount0Delta_gasCostForAmount0WhereRoundUpIsFalse() (gas: 4520)
[PASS] test_getAmount0Delta_gasCostForAmount0WhereRoundUpIsTrue() (gas: 4153)
[PASS] test_getAmount0Delta_returns0IfLiquidityIs0() (gas: 3973)
[PASS] test_getAmount0Delta_returns0IfPricesAreEqual() (gas: 4479)
[PASS] test_getAmount0Delta_returns0_1Amount1ForPriceOf1To1_21() (gas: 4404)
[PASS] test_getAmount0Delta_worksForPricesThatOverflow() (gas: 5108)
[PASS] test_getAmount1Delta_gasCostForAmount1WhereRoundUpIsFalse() (gas: 4528)
[PASS] test_getAmount1Delta_gasCostForAmount1WhereRoundUpIsTrue() (gas: 4695)
[PASS] test_getAmount1Delta_returns0IfLiquidityIs0() (gas: 3303)
[PASS] test_getAmount1Delta_returns0IfPricesAreEqual() (gas: 4328)
[PASS] test_getAmount1Delta_returns0_1Amount1ForPriceOf1To1_21() (gas: 5005)
[PASS] test_getNextSqrtPriceFromInput_amountInGreaterThanType_uint96_maxAndZeroForOneEqualsTrue() (gas: 4349)
[PASS] test_getNextSqrtPriceFromInput_anyInputAmountCannotUnderflowThePrice() (gas: 4597)
[PASS] test_getNextSqrtPriceFromInput_canReturn1WithEnoughAmountInAndZeroForOneEqualsTrue() (gas: 3911)
[PASS] test_getNextSqrtPriceFromInput_inputAmountOf0_1Currency0() (gas: 3865)
[PASS] test_getNextSqrtPriceFromInput_inputAmountOf0_1Currency1() (gas: 3928)
[PASS] test_getNextSqrtPriceFromInput_returnsInputPriceIfAmountInIsZeroAndZeroForOneEqualsFalse() (gas: 4220)
[PASS] test_getNextSqrtPriceFromInput_returnsInputPriceIfAmountInIsZeroAndZeroForOneEqualsTrue() (gas: 4005)
[PASS] test_getNextSqrtPriceFromInput_returnsTheMinimumPriceForMaxInputs() (gas: 3471)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfInputAmountOverflowsThePrice() (gas: 3782)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfLiquidityIsZero() (gas: 3299)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfPriceIsZero() (gas: 3629)
[PASS] test_getNextSqrtPriceFromInput_zeroForOneEqualsFalseGas() (gas: 4153)
[PASS] test_getNextSqrtPriceFromInput_zeroForOneEqualsTrueGas() (gas: 4442)
[PASS] test_getNextSqrtPriceFromOutput_outputAmountOf0_1Currency0() (gas: 4178)
[PASS] test_getNextSqrtPriceFromOutput_outputAmountOf0_1Currency1() (gas: 3545)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_puzzlingEchidnaTest() (gas: 3363)
[PASS] test_getNextSqrtPriceFromOutput_returnsInputPriceIfAmountInIsZeroAndZeroForOneEqualsFalse() (gas: 4046)
[PASS] test_getNextSqrtPriceFromOutput_returnsInputPriceIfAmountInIsZeroAndZeroForOneEqualsTrue() (gas: 4008)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfAmountOutIsImpossibleInOneForZeroDirection() (gas: 3760)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfAmountOutIsImpossibleInZeroForOneDirection() (gas: 3644)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfLiquidityIsZero() (gas: 3321)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsExactlyTheVirtualReservesOfCurrency0() (gas: 3803)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsExactlyTheVirtualReservesOfCurrency1() (gas: 4157)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsGreaterThanTheVirtualReservesOfCurrency0() (gas: 4222)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsGreaterThanTheVirtualReservesOfCurrency1() (gas: 3937)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfPriceIsZero() (gas: 3761)
[PASS] test_getNextSqrtPriceFromOutput_succeedsIfOutputAmountIsJustLessThanTheVirtualReservesOfCurrency1() (gas: 3518)
[PASS] test_getNextSqrtPriceFromOutput_zeroForOneEqualsFalseGas() (gas: 4205)
[PASS] test_getNextSqrtPriceFromOutput_zeroForOneEqualsTrueGas() (gas: 3787)
[PASS] test_swapComputation_sqrtPTimessqrtQOverflows() (gas: 5644)
Suite result: FAILED. 29 passed; 12 failed; 0 skipped; finished in 584.00µs (484.62µs CPU time)

Ran 2 tests for test/pool-cl/CLHookRevertWithReason.t.sol:CLHookRevertWithReasonTest
[PASS] testRevertWithHookNotImplemented() (gas: 192503)
[PASS] testRevertWithNoReason() (gas: 171337)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 559.96µs (91.58µs CPU time)

Ran 3 tests for test/pool-bin/libraries/FeeHelper.t.sol:FeeHelperTest
[PASS] testFuzz_GetCompositionFee(uint128,uint24) (runs: 9, μ: 7442, ~: 7394)
[PASS] testFuzz_GetFeeAmount(uint128,uint24) (runs: 9, μ: 7405, ~: 7309)
[PASS] testFuzz_GetFeeAmountFrom(uint128,uint24) (runs: 9, μ: 7257, ~: 7161)
Suite result: ok. 3 passed; 0 failed; 0 skipped; finished in 699.38µs (644.75µs CPU time)

Ran 18 tests for test/pool-cl/libraries/SwapMath.t.sol:SwapMathTest
[PASS] testComputeSwapTest_amountWantedOutEq1() (gas: 5929)
[PASS] testComputeSwapTest_gasSwapOneForZeroExactInCapped() (gas: 6468)
[PASS] testComputeSwapTest_gasSwapOneForZeroExactInPartial() (gas: 6608)
[PASS] testComputeSwapTest_gasSwapOneForZeroExactOutCapped() (gas: 6244)
[PASS] testComputeSwapTest_gasSwapOneForZeroExactOutPartial() (gas: 6740)
[PASS] testComputeSwapTest_gasSwapZeroForOneExactInCapped() (gas: 6181)
[PASS] testComputeSwapTest_gasSwapZeroForOneExactInPartial() (gas: 6697)
[PASS] testComputeSwapTest_gasSwapZeroForOneExactOutCapped() (gas: 5922)
[PASS] testComputeSwapTest_gasSwapZeroForOneExactOutPartial() (gas: 6455)
[PASS] testComputeSwapTest_insufficientAmountIntOneForZero() (gas: 8657)
[PASS] testComputeSwapTest_insufficientAmountOutOneForZero() (gas: 8407)
[PASS] testComputeSwapTest_insufficientLiquidityExactOutputInOneForZero() (gas: 5295)
[PASS] testComputeSwapTest_insufficientLiquidityExactOutputInZeroForOne() (gas: 5969)
[PASS] testComputeSwapTest_notEntireInputAmountTakenAsFee() (gas: 5968)
[PASS] testComputeSwapTest_partialInputToPriceEq1() (gas: 6300)
[PASS] testComputeSwapTest_sufficientAmountInOneForZero() (gas: 8262)
[PASS] testComputeSwapTest_sufficientAmountOutOneForZero() (gas: 8531)
[PASS] testFuzz_getSqrtPriceTarget(bool,uint160,uint160) (runs: 9, μ: 3862, ~: 3863)
Suite result: ok. 18 passed; 0 failed; 0 skipped; finished in 696.25µs (598.50µs CPU time)

Ran 20 tests for test/pool-cl/libraries/FullMath.t.sol:FullMathTest
[PASS] testResultOverflowsHelper() (gas: 7439)
[PASS] test_mulDivRounding(uint256,uint256,uint256) (runs: 8, μ: 4850, ~: 4716)
[PASS] test_mulDivRoundingUp_fuzz(uint256,uint256,uint256) (runs: 9, μ: 8593, ~: 8456)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDivRoundingUp_revertsIfMulDivOverflows256BitsAfterRoundingUp() (gas: 3953)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDivRoundingUp_revertsIfMulDivOverflows256BitsAfterRoundingUpCase2() (gas: 4019)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe82f688c000000000000000000000000000000187afecf92d16317c024b35af463da549f0000000000000000000000000000000000000000000000000000000000000003 args=[8330265675081252551678924324740433335455 [8.33e39], 3]] test_mulDivRoundingUp_revertsWith0Denominator(uint256,uint256) (runs: 0, μ: 0, ~: 0)
[PASS] test_mulDivRoundingUp_validWithAllMaxInputs() (gas: 3971)
[PASS] test_mulDivRoundingUp_validWithNoPhantomOverflow() (gas: 3580)
[PASS] test_mulDivRoundingUp_validWithPhantomOverflow() (gas: 3251)
[PASS] test_mulDivRoundingUp_validWithPhantomOverflowRepeatingDecimal() (gas: 3889)
[PASS] test_mulDiv_fuzz(uint256,uint256,uint256) (runs: 9, μ: 7759, ~: 7566)
[PASS] test_mulDiv_phantomOverflowRepeatingDecimal() (gas: 3239)
[PASS] test_mulDiv_recomputed(uint256,uint256,uint256) (runs: 8, μ: 7244, ~: 6751)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsIfOutputOverflows() (gas: 3289)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsOverflowWithAllMaxInputs() (gas: 3179)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x85d092b9000000000000000000000000000000187afecf92d16317c024b35af463da549f0000000000000000000000000000000000000000000000000000000000000003 args=[8330265675081252551678924324740433335455 [8.33e39], 3]] test_mulDiv_revertsWith0Denominator(uint256,uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsWithOverflowingNumeratorAndZeroDenominator() (gas: 3509)
[PASS] test_mulDiv_validAllMaxInputs() (gas: 3349)
[PASS] test_mulDiv_validWithPhantomOverflow() (gas: 3493)
[PASS] test_mulDiv_validWithoutPhantomOverflow() (gas: 3283)
Suite result: FAILED. 13 passed; 7 failed; 0 skipped; finished in 1.52ms (1.44ms CPU time)

Ran 19 tests for test/pool-bin/libraries/math/PackedUint128Math.t.sol:PackedUint128MathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4b5eeccb3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_Add(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)
[PASS] testFuzz_Decode(bytes32) (runs: 9, μ: 4654, ~: 4654)
[PASS] testFuzz_DecodeBool(bytes32,bool) (runs: 9, μ: 3820, ~: 3828)
[PASS] testFuzz_Encode(uint128,uint128) (runs: 9, μ: 4062, ~: 4062)
[PASS] testFuzz_EncodeBool(uint128,bool) (runs: 9, μ: 3773, ~: 3764)
[PASS] testFuzz_EncodeFirst(uint128) (runs: 9, μ: 3437, ~: 3437)
[PASS] testFuzz_EncodeSecond(uint128) (runs: 9, μ: 3624, ~: 3624)
[PASS] testFuzz_GreaterThan(bytes32,bytes32) (runs: 9, μ: 3906, ~: 3901)
[PASS] testFuzz_LessThan(bytes32,bytes32) (runs: 9, μ: 3605, ~: 3622)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x7466b8ac3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_Sub(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)
[PASS] testFuzz_decodeX(bytes32) (runs: 9, μ: 3827, ~: 3827)
[PASS] testFuzz_decodeY(bytes32) (runs: 9, μ: 3607, ~: 3607)
[PASS] testFuzz_getProtocolFeeAmt(bytes32,uint16,uint16,uint24) (runs: 9, μ: 9563, ~: 9611)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_AddOverflow() (gas: 3716)
[PASS] test_AddSelf() (gas: 3702)
[PASS] test_SubSelf() (gas: 3627)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_SubUnderflow() (gas: 5706)
[PASS] test_getProtocolFeeAmtX() (gas: 5626)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getProtocolFeeAmt_Overflow() (gas: 3672)
Suite result: FAILED. 14 passed; 5 failed; 0 skipped; finished in 2.74ms (2.66ms CPU time)

Ran 38 tests for test/pool-cl/libraries/Tick.t.sol:TickTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5053df700000000000000000000000000000000000000000000000000000000000001ff200000000000000000000000000000000000000000000000000000000007fffff args=[8178, 8388607 [8.388e6]]] testTickFuzz_checkTicks(int24,int24) (runs: 0, μ: 0, ~: 0)
[PASS] testTick_checkTicks_gasCost() (gas: 4042)
[PASS] testTick_clear_deletesAllTheDataInTheTick() (gas: 53522)
[PASS] testTick_cross_flipsTheGrowthVariables() (gas: 72431)
[PASS] testTick_cross_twoFlipsAreNoOp() (gas: 71396)
[PASS] testTick_getFeeGrowthInside_gasCost() (gas: 101694)
[PASS] testTick_getFeeGrowthInside_returns0ForTwoUninitializedTicksIfTickIsAbove() (gas: 78483)
[PASS] testTick_getFeeGrowthInside_returns0ForTwoUninitializedTicksIfTickIsBelow() (gas: 79227)
[PASS] testTick_getFeeGrowthInside_returnsAllForTwoUninitializedTicksIfTickIsInside() (gas: 58623)
[PASS] testTick_getFeeGrowthInside_subtractsLowerTickIfAbove() (gas: 101549)
[PASS] testTick_getFeeGrowthInside_subtractsUpperAndLowerTickIfInside() (gas: 144784)
[PASS] testTick_getFeeGrowthInside_subtractsUpperTickIfBelow() (gas: 102256)
[PASS] testTick_getFeeGrowthInside_worksCorrectlyWithOverflowOnInsideTick() (gas: 144516)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_gasCost10TickSpacing() (gas: 4328)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueFor1() (gas: 4765)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueFor2302() (gas: 4358)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueForEntireRange() (gas: 4380)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueForHighFee() (gas: 4314)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueForLowFee() (gas: 4589)
[PASS] testTick_tickSpacingToMaxLiquidityPerTick_returnsTheCorrectValueForMediumFee() (gas: 4754)
[PASS] testTick_tickSpacingToParametersInvariants_fuzz(int24) (runs: 9, μ: 10617, ~: 10738)
[PASS] testTick_update_assumesAllGrowthHappensBelowTicksLteCurrentTick() (gas: 138693)
[PASS] testTick_update_doesNotFlipFromNonzeroToGreaterNonzero() (gas: 38944)
[PASS] testTick_update_doesNotFlipFromNonzeroToLesserZero() (gas: 38520)
[PASS] testTick_update_doesNotSetAnyGrowthFieldsForTicksGtCurrentTick() (gas: 97444)
[PASS] testTick_update_doesNotSetAnyGrowthFieldsIfTickIsAlreadyInitialized() (gas: 139630)
[PASS] testTick_update_flipsFromNonzeroToZero() (gas: 26960)
[PASS] testTick_update_flipsFromZeroToNonzero() (gas: 38324)
[PASS] testTick_update_gasCost() (gas: 137280)
[PASS] testTick_update_liquidityParsing_parsesMaxInt128StoredLiquidityGrossAfterUpdate() (gas: 98420)
[PASS] testTick_update_liquidityParsing_parsesMaxInt128StoredLiquidityGrossBeforeUpdate() (gas: 98312)
[PASS] testTick_update_liquidityParsing_parsesMaxUint128StoredLiquidityGrossAfterUpdate() (gas: 98251)
[PASS] testTick_update_liquidityParsing_parsesMaxUint128StoredLiquidityGrossBeforeUpdate() (gas: 98905)
[PASS] testTick_update_netsTheLiquidityBasedOnUpperFlag() (gas: 41597)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnOverflowLiquidityNet() (gas: 38699)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnTickLiquidityOverflow() (gas: 12508)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnTickLiquidityOverflow2() (gas: 13430)
[PASS] test_fuzz_tickSpacingToMaxLiquidityPerTick(int24) (runs: 9, μ: 9349, ~: 9470)
Suite result: FAILED. 34 passed; 4 failed; 0 skipped; finished in 1.62ms (1.49ms CPU time)

Ran 7 tests for test/pool-bin/libraries/PriceHelper.t.sol:PriceHelperTest
[PASS] testFuzz_Convert128x128PriceToDecimal(uint256) (runs: 9, μ: 4032, ~: 4018)
[PASS] testFuzz_ConvertDecimalPriceTo128x128(uint256) (runs: 9, μ: 7132, ~: 7051)
[PASS] testFuzz_GetBase(uint16) (runs: 9, μ: 3700, ~: 3700)
[PASS] testFuzz_GetExponent(uint24) (runs: 9, μ: 3578, ~: 3578)
[PASS] testFuzz_Price(uint256,uint16) (runs: 9, μ: 44222, ~: 44026)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf007f551000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_revert_ConvertDecimalPriceTo128x128(uint256) (runs: 0, μ: 0, ~: 0)
[PASS] test_Price() (gas: 18192)
Suite result: FAILED. 6 passed; 1 failed; 0 skipped; finished in 2.25ms (2.17ms CPU time)

Ran 3 tests for test/libraries/Hooks/Hooks.t.sol:HooksTest
[PASS] testFuzzValidateHookConfig(uint16,bytes32) (runs: 9, μ: 67962, ~: 67962)
[PASS] testFuzzValidateHookConfig_noHook(bytes32,uint24) (runs: 9, μ: 4214, ~: 4846)
[PASS] testhasOffsetEnabled() (gas: 9692)
Suite result: ok. 3 passed; 0 failed; 0 skipped; finished in 598.29µs (541.58µs CPU time)

Ran 4 tests for test/base/PausableRole.t.sol:PausableRoleTest
[PASS] test_GrantPausableRole_NotOwner() (gas: 13666)
[PASS] test_GrantPausableRole_OnlyOwner() (gas: 40143)
[PASS] test_RevokePausableRole_NotOwner() (gas: 13534)
[PASS] test_RevokePausableRole_OnlyOwner() (gas: 29842)
Suite result: ok. 4 passed; 0 failed; 0 skipped; finished in 205.96µs (72.04µs CPU time)

Ran 8 tests for test/pool-cl/CLHookSkipCallback.t.sol:CLHookSkipCallbackTest
[PASS] testDonate_FromHook() (gas: 566213)
[PASS] testDonate_NotFromHook() (gas: 603435)
[PASS] testInitialize_FromHook() (gas: 169325)
[PASS] testInitialize_NotFromHook() (gas: 193122)
[PASS] testModifyPosition_FromHook() (gas: 418025)
[PASS] testModifyPosition_NotFromHook() (gas: 445222)
[PASS] testSwap_FromHook() (gas: 555315)
[PASS] testSwap_NotFromHook() (gas: 588825)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 2.58ms (1.88ms CPU time)

Ran 1 test for test/libraries/PoolIdLibrary.t.sol:PoolIdLibraryTest
[PASS] test_toId() (gas: 9190)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 242.08µs (190.54µs CPU time)

Ran 6 tests for test/libraries/LPFeeLibrary.t.sol:LPFeeLibraryTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xecc05dec0000000000000000000000000000000000000000000000000000000000003ff20000000000000000000000000000000000000000000000000000000000000000 args=[16370 [1.637e4], 0]] testFuzzRemoveOverrideAndValidate(uint24,uint24) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x75ae57240000000000000000000000000000000000000000000000000000000000003ff20000000000000000000000000000000000000000000000000000000000000000 args=[16370 [1.637e4], 0]] testFuzzValidate(uint24,uint24) (runs: 0, μ: 0, ~: 0)
[PASS] testGetInitialLPFee() (gas: 9367)
[PASS] testIsDynamicLPFee() (gas: 5433)
[PASS] testIsDynamicLPFeeFuzz(uint24) (runs: 9, μ: 3465, ~: 3465)
[PASS] testIsOverride() (gas: 6073)
Suite result: FAILED. 4 passed; 2 failed; 0 skipped; finished in 495.25µs (435.50µs CPU time)

Ran 3 tests for test/pool-bin/libraries/math/LiquidityConfigurations.t.sol:LiquidityConfigurationsTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0b5145eb3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717 args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717]] testFuzz_DecodeParams(bytes32) (runs: 0, μ: 0, ~: 0)
[PASS] testFuzz_EncodeParams(uint64,uint64,uint24) (runs: 9, μ: 3796, ~: 3796)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x581007883c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_GetAmountsAndId(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)
Suite result: FAILED. 1 passed; 2 failed; 0 skipped; finished in 388.38µs (338.79µs CPU time)

Ran 2 tests for test/pool-cl/CLMintBurnFeeHook.t.sol:CLMintBurnFeeHookTest
[PASS] test_Burn() (gas: 459449)
[PASS] test_Mint() (gas: 515279)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 1.29ms (633.92µs CPU time)

Ran 10 tests for test/libraries/math/UnsafeMath.t.sol:UnsafeMathTest
[PASS] test_divRoundingUp_RoundsUp() (gas: 3296)
[PASS] test_divRoundingUp_maxInput() (gas: 3450)
[PASS] test_divRoundingUp_zeroDoesNotRevert(uint256) (runs: 9, μ: 580, ~: 580)
[PASS] test_fuzz_divRoundingUp(uint256,uint256) (runs: 9, μ: 4201, ~: 4214)
[PASS] test_fuzz_simpleMulDiv_bounded(uint256,uint256) (runs: 9, μ: 7464, ~: 7222)
[PASS] test_fuzz_simpleMulDiv_succeeds(uint256,uint256,uint256) (runs: 9, μ: 3752, ~: 3752)
[PASS] test_invariant_divRoundingUp(uint256,uint256) (runs: 9, μ: 3883, ~: 3884)
[PASS] test_simpleMulDiv_noOverflow() (gas: 3340)
[PASS] test_simpleMulDiv_succeeds() (gas: 3318)
[PASS] test_simpleMulDiv_zeroDoesNotRevert(uint256,uint256) (runs: 9, μ: 519, ~: 519)
Suite result: ok. 10 passed; 0 failed; 0 skipped; finished in 1.13ms (1.07ms CPU time)

Ran 39 tests for test/pool-cl/libraries/TickBitmap.t.sol:TickBitmapTest
[PASS] testFuzz_compress(int24,int24) (runs: 9, μ: 8717, ~: 8601)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xac8fef420000000000000000000000000000000000000000000000000000000000001ff200000000000000000000000000000000000000000000000000000000007fffff args=[8178, 8388607 [8.388e6]]] testFuzz_flipTick(int24,int24) (runs: 0, μ: 0, ~: 0)
[PASS] testFuzz_position(int24) (runs: 9, μ: 4633, ~: 4633)
[PASS] test_flipTick_flipsOnlyTheSpecifiedTick() (gas: 19921)
[PASS] test_flipTick_gasCostOfFlippingATickThatResultsInDeletingAWord() (gas: 4124)
[PASS] test_flipTick_gasCostOfFlippingFirstTickInWordToInitialized() (gas: 25782)
[PASS] test_flipTick_gasCostOfFlippingSecondTickInWordToInitialized() (gas: 8465)
[PASS] test_flipTick_revertsOnlyItself() (gas: 55933)
[PASS] test_isInitialized_isFalseAtFirst() (gas: 6375)
[PASS] test_isInitialized_isFlippedBackByFlipTick() (gas: 6303)
[PASS] test_isInitialized_isFlippedByFlipTick() (gas: 9384)
[PASS] test_isInitialized_isNotChangedByAnotherFlipToADifferentTick() (gas: 9635)
[PASS] test_isInitialized_isNotChangedByAnotherFlipToADifferentTickOnAnotherWord() (gas: 29127)
[PASS] test_nextInitializedTickWithinOneWord_fuzz(int24,bool) (runs: 9, μ: 98867, ~: 70059)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_doesNotExceedBoundary() (gas: 6272)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_gasCostForEntireWord() (gas: 6034)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_gasCostJustBelowBoundary() (gas: 6140)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_gasCostOnBoundary() (gas: 5986)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTheNextInitializedTickFromTheNextWord() (gas: 26243)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTheNextWordsInitializedTickIfOnTheRightBoundary() (gas: 6087)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTheNextWordsInitializedTickIfOnTheRightBoundary2() (gas: 6979)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTheTickDirectlyToTheRight() (gas: 6437)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTheTickDirectlyToTheRight2() (gas: 6937)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTickToRightIfAtInitializedTick() (gas: 7042)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_returnsTickToRightIfAtInitializedTick2() (gas: 6258)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_skipsEntireWord() (gas: 6637)
[PASS] test_nextInitializedTickWithinOneWord_lteFalse_skipsHalfWord() (gas: 6470)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_atTheWordBoundary() (gas: 6065)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_boundaryIsInitialized() (gas: 26188)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_entireEmptyWord() (gas: 6167)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_gasCostForEntireWord() (gas: 5391)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_gasCostJustBelowBoundary() (gas: 5924)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_gasCostOnBoundary() (gas: 5904)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_halfwayThroughEmptyWord() (gas: 5931)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_returnsSameTickIfInitialized() (gas: 6408)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_returnsTickDirectlyToTheLeftOfInputTickIfNotInitialized() (gas: 6034)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_willNotExceedTheWordBoundary() (gas: 5774)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_wordBoundary() (gas: 6733)
[PASS] test_nextInitializedTickWithinOneWord_lteTrue_wordBoundaryLess1nextInitializedTickInNextWord() (gas: 6076)
Suite result: FAILED. 38 passed; 1 failed; 0 skipped; finished in 3.75ms (3.61ms CPU time)

Ran 18 tests for test/vault/VaultSync.t.sol:VaultSyncTest
[PASS] test_settleFor_ERC20TokenWithValue() (gas: 31496)
[PASS] test_settleFor_NativeERC20() (gas: 1433396)
[PASS] test_settleFor_nativeTokenWithFund() (gas: 64771)
[PASS] test_settleFor_nativeTokenWithoutFund() (gas: 20904)
[PASS] test_settleFor_startWithZeroBalance() (gas: 93914)
[PASS] test_settleFor_transferBeforeSync() (gas: 97310)
[PASS] test_settle_ERC20TokenWithValue() (gas: 31287)
[PASS] test_settle_NativeERC20() (gas: 1433012)
[PASS] test_settle_nativeTokenWithFund() (gas: 65596)
[PASS] test_settle_nativeTokenWithoutFund() (gas: 18693)
[PASS] test_settle_startWithZeroBalance() (gas: 94414)
[PASS] test_settle_transferBeforeSync() (gas: 97585)
[PASS] test_sync() (gas: 14709)
[PASS] test_sync_balanceIsNonZero() (gas: 53802)
[PASS] test_sync_balanceIsZero() (gas: 25523)
[PASS] test_sync_twiceWithSettle() (gas: 82563)
[PASS] test_sync_twiceWithSettleNative() (gas: 102780)
[PASS] test_sync_twiceWithoutSettle() (gas: 91042)
Suite result: ok. 18 passed; 0 failed; 0 skipped; finished in 1.61ms (1.24ms CPU time)

Ran 1 test for test/VaultToken.t.sol:VaultTokenTest
[FAIL: `testFail*` has been removed. Consider changing to test_Revert[If|When]_Condition and expecting a revert] Found 11 instances: testFailMintBalanceOverflow, testFailTransferBalanceOverflow, testFailTransferBalanceOverflow, testFailTransferBalanceUnderflow, testFailTransferBalanceUnderflow, testFailTransferFromBalanceOverflow, testFailTransferFromBalanceOverflow, testFailTransferFromBalanceUnderflow, testFailTransferFromBalanceUnderflow, testFailTransferFromNotAuthorized, testFailTransferFromNotAuthorized (gas: 0)
Suite result: FAILED. 0 passed; 1 failed; 0 skipped; finished in 157.04µs (0.00ns CPU time)

Ran 1 test for test/pool-cl/libraries/CLPoolParametersHelper.t.sol:CLPoolParametersHelperTest
[PASS] testGetTickSpacing() (gas: 4102)
Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 54.54µs (11.67µs CPU time)

Ran 8 tests for test/libraries/ProtocolFeeLibrary.t.sol:ProtocolFeeLibraryTest
[PASS] testFuzz_isValid(uint24) (runs: 9, μ: 3431, ~: 3435)
[PASS] test_calculateSwapFee() (gas: 5376)
[PASS] test_fuzz_calculateSwapFee(uint16,uint24) (runs: 9, μ: 8936, ~: 8743)
[PASS] test_fuzz_getOneForZeroFee(uint24) (runs: 9, μ: 3368, ~: 3368)
[PASS] test_fuzz_getZeroForOneFee(uint24) (runs: 9, μ: 3274, ~: 3274)
[PASS] test_getOneForZeroFee() (gas: 3072)
[PASS] test_getZeroForOneFee() (gas: 3361)
[PASS] test_isValidProtocolFee_fee() (gas: 5663)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 872.21µs (806.54µs CPU time)

Ran 4 tests for test/Extsload.t.sol:ExtsloadTest
[PASS] testExtsload() (gas: 15054)
[PASS] testExtsloadInBatch() (gas: 16644)
[PASS] testExtsload_10_sparse() (gas: 25662)
[PASS] testFuzz_extsload(uint256,uint256,bytes) (runs: 7, μ: 1039079, ~: 848018)
Suite result: ok. 4 passed; 0 failed; 0 skipped; finished in 22.88ms (22.50ms CPU time)

Ran 13 tests for test/ProtocolFees.t.sol:ProtocolFeesTest
[PASS] testFuzz_Init_WhenOutOfGasForProtocolFeeController(uint256) (runs: 9, μ: 95174, ~: 95914)
[PASS] testInitFuzz(uint24) (runs: 9, μ: 69623, ~: 74984)
[PASS] testInit_WhenFeeControllerInvalidReturnSize() (gas: 59203)
[PASS] testInit_WhenFeeControllerOutOfBound() (gas: 53732)
[PASS] testInit_WhenFeeControllerOverflow() (gas: 53978)
[PASS] testInit_WhenFeeControllerRevert() (gas: 53018)
[PASS] testSetProtocolFee() (gas: 85456)
[PASS] testSetProtocolFeeController() (gas: 39220)
[PASS] testSwap_NoProtocolFee() (gas: 27477)
[PASS] testSwap_OnlyProtocolFee() (gas: 146357)
[PASS] test_CollectProtocolFee() (gas: 290298)
[PASS] test_CollectProtocolFee_OnlyFeeController() (gas: 22958)
[PASS] test_Init_ProtocolFeeTooLarge() (gas: 76428)
Suite result: ok. 13 passed; 0 failed; 0 skipped; finished in 1.99ms (1.61ms CPU time)

Ran 5 tests for test/libraries/SafeCast.t.sol:SafeCastTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x719ecc09fffffffffffffffffffffffffffffff78501306d2e9ce83fdb4ca50b9c25ab61 args=[-2885747804346237136264930605832141952159 [-2.885e39]]] testToInt128(int256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x01dbaede000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testToInt128(uint256) (runs: 0, μ: 0, ~: 0)
[PASS] testToInt256(uint256) (runs: 9, μ: 3494, ~: 3494)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x16f2417dfe74f05b00000000000000000000000000000000000000000000000000000001 args=[115094076672142331675073204854499031525897280609611282276006762738443496718337 [1.15e77]]] testToUint160(uint256) (runs: 6, μ: 3202, ~: 3202)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xce6378e9fffffffffffffffffffffffffffffff78501306d2e9ce83fdb4ca50b9c25ab61 args=[-2885747804346237136264930605832141952159 [-2.885e39]]] testToUint256(int256) (runs: 0, μ: 0, ~: 0)
Suite result: FAILED. 1 passed; 4 failed; 0 skipped; finished in 672.92µs (621.25µs CPU time)

Ran 8 tests for test/pool-bin/libraries/math/BitMath.t.sol:BitMathTest
[PASS] testFuzz_ClosestBitLeft(uint256,uint8) (runs: 9, μ: 4665, ~: 4937)
[PASS] testFuzz_ClosestBitRight(uint256,uint8) (runs: 9, μ: 5034, ~: 5071)
[PASS] testFuzz_LeastSignificantBit(uint256) (runs: 9, μ: 4140, ~: 4146)
[PASS] testFuzz_MostSignificantBit(uint256) (runs: 9, μ: 3910, ~: 3896)
[PASS] test_ClosestBitLeft() (gas: 315738)
[PASS] test_ClosestBitRight() (gas: 304447)
[PASS] test_LeastSignificantBit() (gas: 307502)
[PASS] test_MostSignificantBit() (gas: 295938)
Suite result: ok. 8 passed; 0 failed; 0 skipped; finished in 4.17ms (4.11ms CPU time)

Ran 4 tests for test/pool-cl/CLProtocolFees.t.sol:CLProtocolFeesTest
[PASS] testCollectFees() (gas: 516586)
[PASS] testMaliciousProtocolFeeControllerReturnHugeData() (gas: 2653486)
[PASS] testNoProtocolFee(uint24) (runs: 9, μ: 541020, ~: 608512)
[PASS] testSetProtocolFeeControllerFuzz(uint24) (runs: 9, μ: 71196, ~: 72258)
Suite result: ok. 4 passed; 0 failed; 0 skipped; finished in 12.65ms (11.94ms CPU time)

Ran 2 tests for test/pool-bin/libraries/math/Uint128x128Math.t.sol:Uint128x128MathTest
[PASS] test_Pow() (gas: 3897)
[PASS] test_PowAndLog() (gas: 34170)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 175.17µs (116.42µs CPU time)

Ran 6 tests for test/pool-bin/libraries/math/Uint256x256Math.t.sol:Uint256x256MathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xccc03f290000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a200000000000000000000000000000000000000000000000000000000000563f8 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 353272 [3.532e5]]] testFuzz_MulDivRoundDown(uint256,uint256,uint256) (runs: 1, μ: 4224, ~: 4224)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3f06495c0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a200000000000000000000000000000000000000000000000000000000000563f8 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 353272 [3.532e5]]] testFuzz_MulDivRoundUp(uint256,uint256,uint256) (runs: 1, μ: 4331, ~: 4331)
[PASS] testFuzz_ShiftDivRoundDown(uint256,uint8,uint256) (runs: 10, μ: 4317, ~: 4317)
[PASS] testFuzz_ShiftDivRoundUp(uint256,uint8,uint256) (runs: 10, μ: 4639, ~: 4652)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3286bd8e0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a20000000000000000000000000000000000000000000000000000000000000003 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 3]] testFuzz_mulShiftRoundDown(uint256,uint256,uint8) (runs: 1, μ: 3942, ~: 3942)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf96370ea0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a20000000000000000000000000000000000000000000000000000000000000003 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 3]] testFuzz_mulShiftRoundUp(uint256,uint256,uint8) (runs: 1, μ: 4536, ~: 4536)
Suite result: FAILED. 2 passed; 4 failed; 0 skipped; finished in 2.81ms (2.73ms CPU time)

Ran 32 tests for test/pool-bin/libraries/math/SafeCast.t.sol:SafeCastTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xef32ecd9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast104(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3a557741000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast112(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x562fb6e9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast120(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe5772a25000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast128(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x1288c0e888b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast136(uint256) (runs: 4, μ: 3527, ~: 3527)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x22e84d8e88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast144(uint256) (runs: 4, μ: 3593, ~: 3593)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4bfe871788b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast152(uint256) (runs: 4, μ: 3747, ~: 3747)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x80afec19000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast16(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5e0011ea88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast160(uint256) (runs: 4, μ: 3901, ~: 3901)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x55140fa488b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast168(uint256) (runs: 4, μ: 3857, ~: 3857)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xd38cc93888b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast176(uint256) (runs: 4, μ: 4253, ~: 4253)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x521166a588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast184(uint256) (runs: 4, μ: 3813, ~: 3813)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x7855d71288b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast192(uint256) (runs: 4, μ: 3989, ~: 3989)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x84b9fa7588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast200(uint256) (runs: 4, μ: 4033, ~: 4033)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xc80b189b88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast208(uint256) (runs: 4, μ: 4209, ~: 4209)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0bf1b0a588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast216(uint256) (runs: 4, μ: 3483, ~: 3483)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe3a62e5288b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast224(uint256) (runs: 4, μ: 4319, ~: 4319)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4d33075488b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast232(uint256) (runs: 4, μ: 3769, ~: 3769)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe067bfb4000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast24(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x109bc00588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast240(uint256) (runs: 4, μ: 3505, ~: 3505)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x2d294d2188b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast248(uint256) (runs: 4, μ: 3659, ~: 3659)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xd15db81d000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast32(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5069a454000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast40(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5408d0d7000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast48(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x128ea09c000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast56(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf409d884000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast64(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xfa295576000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast72(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xc1c55029000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast8(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x89a1be22000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast80(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6fb9f1c9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast88(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6dbe8988000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast96(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x28d85c1100000000000000000000000000000000ffffffffffffffffffffffffffffffff args=[340282366920938463463374607431768211455 [3.402e38]]] testFuzz_SafeCastInt128(uint128) (runs: 4, μ: 3588, ~: 3588)
Suite result: FAILED. 0 passed; 32 failed; 0 skipped; finished in 5.75ms (5.65ms CPU time)

Ran 13 tests for test/ProtocolFeeController.t.sol:ProtocolFeeControllerTest
[PASS] testBinPoolInitWithProtolFeeControllerFuzz(uint24,uint256) (runs: 9, μ: 853553, ~: 853358)
[PASS] testBinPoolInitWithoutProtolFeeController(uint24) (runs: 9, μ: 140900, ~: 140900)
[PASS] testCLPoolInitWithProtolFeeControllerFuzz(uint24,uint256) (runs: 9, μ: 871619, ~: 871764)
[PASS] testCLPoolInitWithoutProtolFeeController(uint24) (runs: 10, μ: 141763, ~: 141676)
[PASS] testCollectProtocolFeeForBinPool() (gas: 1270019)
[PASS] testCollectProtocolFeeForCLPool() (gas: 3664836)
[PASS] testCollectProtocolFee_CollectAllFee() (gas: 3685909)
[PASS] testGetLPFeeFromTotalFee() (gas: 715739)
[PASS] testGetLPFeeFromTotalFee(uint24,uint24) (runs: 10, μ: 715654, ~: 719549)
[PASS] testOwnerTransfer() (gas: 732039)
[PASS] testProtocolFeeForPool(uint24,uint256) (runs: 10, μ: 719372, ~: 719542)
[PASS] testSetProcotolFeeSplitRatio(uint256) (runs: 10, μ: 712083, ~: 710273)
[PASS] testSetProtocolFeeForCLPool(uint24) (runs: 10, μ: 877091, ~: 877440)
Suite result: ok. 13 passed; 0 failed; 0 skipped; finished in 19.64ms (18.53ms CPU time)

Ran 2 tests for test/libraries/VaultReserves.t.sol:VaultReserveTest
[PASS] test_fuzz_get_set(address,uint256) (runs: 10, μ: 5211, ~: 5211)
[PASS] test_slot_correctness() (gas: 3785)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 268.46µs (206.58µs CPU time)

Ran 84 tests for test/pool-cl/CLPoolManager.t.sol:CLPoolManagerTest
[PASS] testCollectProtocolFees_ERC20_returnsAllFeesIf0IsProvidedAsParameter() (gas: 627934)
[PASS] testCollectProtocolFees_initializesWithProtocolFeeIfCalled() (gas: 201563)
[PASS] testCollectProtocolFees_nativeToken_allowsFeeControllerToAccumulateFees() (gas: 600052)
[PASS] testCollectProtocolFees_nativeToken_returnsAllFeesIf0IsProvidedAsParameter() (gas: 599873)
[PASS] testDonateFailsIfNoLiquidity(uint160) (runs: 7, μ: 162678, ~: 162757)
[PASS] testDonateFailsIfNotInitialized() (gas: 35614)
[PASS] testDonateFailsWithIncorrectSelectors() (gas: 2628706)
[PASS] testDonateSucceedsForNativeTokensWhenPoolHasLiquidity() (gas: 499293)
[PASS] testDonateSucceedsWhenPoolHasLiquidity() (gas: 543468)
[PASS] testDonateSucceedsWithCorrectSelectors() (gas: 2634205)
[PASS] testDonateSuccessWithEventEmitted() (gas: 510324)
[PASS] testDonate_WhenPaused() (gas: 179006)
[PASS] testFuzzUpdateDynamicLPFee(uint24) (runs: 9, μ: 179438, ~: 179438)
[PASS] testGasDonateOneToken() (gas: 505027)
[PASS] testGasUpdateDynamicLPFee() (gas: 180874)
[PASS] testInitialize_HookValidation() (gas: 2039341)
[PASS] testInitialize_feeRange() (gas: 520313)
[PASS] testInitialize_gasCheck_withoutHooks() (gas: 136681)
[PASS] testInitialize_stateCheck() (gas: 149581)
[PASS] testInitialize_tickSpacing() (gas: 400036)
[PASS] testInitialize_unusedBits() (gas: 34831)
[PASS] testModifyLiquidity_Add_WhenPaused() (gas: 201487)
[PASS] testModifyLiquidity_Remove_WhenPaused() (gas: 431880)
[PASS] testModifyPosition_Liquidity_aboveCurrentTick() (gas: 404061)
[PASS] testModifyPosition_addLiquidity() (gas: 558121)
[PASS] testModifyPosition_addLiquidity_belowCurrentTick() (gas: 397740)
[PASS] testModifyPosition_failsIfNotInitialized() (gas: 35922)
[PASS] testModifyPosition_failsWithIncorrectSelectors() (gas: 2392597)
[PASS] testModifyPosition_feeDelta() (gas: 887413)
[PASS] testModifyPosition_mixWithAndWithoutSalt() (gas: 653998)
[PASS] testModifyPosition_removeLiquidity_empty() (gas: 421312)
[PASS] testModifyPosition_removeLiquidity_fromEmpty() (gas: 182854)
[PASS] testModifyPosition_removeLiquidity_halfAndThenAll() (gas: 411956)
[PASS] testModifyPosition_removeLiquidity_updateEmptyPosition() (gas: 192592)
[PASS] testModifyPosition_succeedsForNativeTokensIfInitialized(uint160) (runs: 9, μ: 341633, ~: 345738)
[PASS] testModifyPosition_succeedsIfInitialized(uint160) (runs: 9, μ: 352328, ~: 352330)
[PASS] testModifyPosition_succeedsWithCorrectSelectors() (gas: 2446928)
[PASS] testModifyPosition_succeedsWithHooksIfFeesAccruedNonZero(uint160) (runs: 9, μ: 2759551, ~: 2759551)
[PASS] testModifyPosition_succeedsWithHooksIfInitialized(uint160) (runs: 9, μ: 2609134, ~: 2609413)
[PASS] testModifyPosition_succeedsWithHooksIfLiquidityDeltaIsZero(uint160) (runs: 10, μ: 2422401, ~: 2422595)
[PASS] testModifyPosition_withNative_gas() (gas: 324958)
[PASS] testModifyPosition_withSalt_addAndRemove() (gas: 591824)
[PASS] testSetProtocolFee_updatesProtocolFeeForInitializedPool() (gas: 206941)
[PASS] testSwap_WhenPaused() (gas: 202969)
[PASS] testSwap_againstLiqWithNative_gas() (gas: 557392)
[PASS] testSwap_againstLiq_gas() (gas: 573746)
[PASS] testSwap_failsIfNotInitialized(uint160) (runs: 10, μ: 39959, ~: 39959)
[PASS] testSwap_failsWithIncorrectSelectors() (gas: 2517147)
[PASS] testSwap_gas() (gas: 215498)
[PASS] testSwap_leaveSurplusTokenInVault() (gas: 557817)
[PASS] testSwap_leaveSurplusTokenInVault_gas() (gas: 549722)
[PASS] testSwap_runOutOfLiquidity() (gas: 515024)
[PASS] testSwap_succeedsIfInitialized() (gas: 531280)
[PASS] testSwap_succeedsIfInitialized_WithDynamicFee() (gas: 570529)
[PASS] testSwap_succeedsWithCorrectSelectors() (gas: 2488811)
[PASS] testSwap_succeedsWithHooksIfInitialized() (gas: 2286550)
[PASS] testSwap_succeedsWithNativeTokensIfInitialized() (gas: 167792)
[PASS] testSwap_succeeds_withBothFeeEnabled() (gas: 588745)
[PASS] testSwap_useSurplusTokenAsInput() (gas: 686459)
[PASS] testSwap_useSurplusTokenAsInput_gas() (gas: 678936)
[PASS] testSwap_withHooks_gas() (gas: 2255009)
[PASS] testSwap_withNative_gas() (gas: 214882)
[PASS] testTake_failsWithInvalidTokensThatDoNotReturnTrueOnTransfer() (gas: 948791)
[PASS] testTake_succeedsWithPoolWithLiquidity() (gas: 496269)
[PASS] testTake_succeedsWithPoolWithLiquidityWithNativeToken() (gas: 462558)
[PASS] testUpdateDynamicLPFee_FeeNotDynamic() (gas: 17783)
[PASS] testUpdateDynamicLPFee_FeeTooLarge() (gas: 26486)
[PASS] test_bytecodeSize() (gas: 10370)
[PASS] test_initcodeHash() (gas: 13197)
[PASS] test_initialize_failsDynamicFeeInvalid() (gas: 28369)
[PASS] test_initialize_failsIDynamicFeeTooLarge(uint24) (runs: 10, μ: 179968, ~: 180030)
[PASS] test_initialize_failsIfTickSpaceNeg(uint160) (runs: 10, μ: 19051, ~: 19213)
[PASS] test_initialize_failsIfTickSpaceTooLarge(uint160) (runs: 10, μ: 18845, ~: 19007)
[PASS] test_initialize_failsIfTickSpaceZero(uint160) (runs: 10, μ: 19406, ~: 19604)
[PASS] test_initialize_failsWithIncorrectSelectors() (gas: 2208156)
[PASS] test_initialize_forNativeTokens(uint160) (runs: 10, μ: 138159, ~: 138284)
[PASS] test_initialize_fuzz((address,address,address,address,uint24,bytes32),uint160) (runs: 10, μ: 15726, ~: 15816)
[PASS] test_initialize_revertsWhenPoolAlreadyInitialized(uint160) (runs: 10, μ: 143986, ~: 144159)
[PASS] test_initialize_revertsWithIdenticalTokens(uint160) (runs: 10, μ: 17682, ~: 17467)
[PASS] test_initialize_revertsWithSameTokenCombo(uint160) (runs: 10, μ: 142958, ~: 143185)
[PASS] test_initialize_succeedsWithCorrectSelectors() (gas: 2196413)
[PASS] test_initialize_succeedsWithEmptyHooks(uint160) (runs: 10, μ: 2172141, ~: 2171987)
[PASS] test_initialize_succeedsWithHooks(uint160) (runs: 10, μ: 2182148, ~: 2182274)
[PASS] test_initialize_succeedsWithMaxTickSpacing(uint160) (runs: 10, μ: 146573, ~: 146992)
Suite result: ok. 84 passed; 0 failed; 0 skipped; finished in 54.40ms (53.26ms CPU time)

Ran 4 tests for test/vault/VaultReentrancy.t.sol:VaultReentrancyTest
[PASS] testVault_functioningAsExpected() (gas: 62460)
[PASS] testVault_reentrance_byCurrentLocker() (gas: 21966)
[PASS] testVault_withArbitraryAmountOfCallers() (gas: 553314)
[PASS] testVault_withArbitraryAmountOfOperations() (gas: 776856)
Suite result: ok. 4 passed; 0 failed; 0 skipped; finished in 199.17ms (6.03ms CPU time)

Ran 9 tests for test/pool-bin/libraries/math/TreeMath.t.sol:TreeMathTest
[PASS] testFuzz_AddAndRemove(uint24) (runs: 9, μ: 57978, ~: 57978)
[PASS] testFuzz_AddToTree(uint24[]) (runs: 9, μ: 2385070, ~: 2057148)
[PASS] testFuzz_FindFirst(uint24[]) (runs: 10, μ: 2201503, ~: 2187555)
[PASS] testFuzz_RemoveFromTree(uint24[]) (runs: 10, μ: 1869152, ~: 1672993)
[PASS] testFuzz_RemoveLogicAndSearchLeft(uint24) (runs: 10, μ: 77425, ~: 77425)
[PASS] testFuzz_RemoveLogicAndSearchRight() (gas: 91710)
[PASS] testFuzz_RemoveLogicAndSearchRight(uint24) (runs: 10, μ: 74251, ~: 74251)
[PASS] test_FindFirst() (gas: 78501)
[PASS] test_FindFirstFar() (gas: 119123)
Suite result: ok. 9 passed; 0 failed; 0 skipped; finished in 212.41ms (49.15ms CPU time)

Ran 2 tests for test/pool-cl/CLPoolManagerBehaviorComparison.t.sol:CLPoolManagerBehaviorComparisonTest
[PASS] test_shouldSwapEqual(uint24,int24,int24,int24,int256,int256,int128,bool) (runs: 10, μ: 8277835, ~: 5423397)
[PASS] test_shouldSwapEqualMultipleLP(uint24,int24,(int24,int24,int256)[],int256,int128,bool) (runs: 10, μ: 9148155, ~: 8710594)
Suite result: ok. 2 passed; 0 failed; 0 skipped; finished in 184.96ms (183.87ms CPU time)

Ran 6 tests for test/vault/VaultInvariant.t.sol:VaultInvariant
[PASS] invariant_LockDataLengthZero() (runs: 5, calls: 2500, reverts: 2500)
[PASS] invariant_Locker() (runs: 5, calls: 2500, reverts: 2500)
[PASS] invariant_TokenBalanceInVaultGeMinted() (runs: 5, calls: 2500, reverts: 2498)
[PASS] invariant_TokenbalanceInVaultGeReserveOfPoolManagerPlusSurplusToken() (runs: 5, calls: 2500, reverts: 2500)
[PASS] invariant_TotalFeeCollected() (runs: 5, calls: 2500, reverts: 2498)
[PASS] invariant_TotalMintedCurrency() (runs: 5, calls: 2500, reverts: 2500)
Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 228.47ms (1.16s CPU time)

Ran 3 tests for test/pool-bin/BinPoolManagerBehaviorComparison.t.sol:BinPoolManagerBehaviorComparisonTest
[PASS] testMintFuzz(uint16,uint24,uint256,uint256,uint8) (runs: 7, μ: 2404080, ~: 1999281)
[PASS] testSwapFuzz(uint16,uint24,uint256,uint256,uint8,bool,uint128) (runs: 7, μ: 3308139, ~: 2400366)
[PASS] testSwapWithMutiplePositionsFuzz(uint16,uint24,(uint24,uint256,uint256,uint8)[],bool,uint128) (runs: 9, μ: 9153440, ~: 8669541)
Suite result: ok. 3 passed; 0 failed; 0 skipped; finished in 257.65ms (173.48ms CPU time)

Ran 53 tests for test/pool-bin/BinPoolManager.t.sol:BinPoolManagerTest
[PASS] testBurnNativeCurrency() (gas: 451951)
[PASS] testBurnPoolNotInitialized() (gas: 70458)
[PASS] testBurn_WhenPaused() (gas: 552717)
[PASS] testDonatePoolNotInitialized() (gas: 138123)
[PASS] testDonate_WhenPaused() (gas: 580439)
[PASS] testExtLoadPoolActiveId() (gas: 152108)
[PASS] testFuzzUpdateDynamicLPFee(uint24) (runs: 9, μ: 868502, ~: 868454)
[PASS] testFuzz_SetMaxBinStep(uint16) (runs: 8, μ: 21960, ~: 21960)
[PASS] testFuzz_SetMinBinSharesForDonate(uint256) (runs: 9, μ: 23498, ~: 23659)
[PASS] testGasBurnHalfBin() (gas: 609997)
[PASS] testGasBurnNineBins() (gas: 1072920)
[PASS] testGasBurnOneBin() (gas: 536864)
[PASS] testGasDonate() (gas: 563616)
[PASS] testGasGetBin() (gas: 512006)
[PASS] testGasMintNneBins() (gas: 1303137)
[PASS] testGasMintOneBin() (gas: 568252)
[PASS] testGasSwapMultipleBins() (gas: 1235688)
[PASS] testGasSwapOverBigBinIdGate() (gas: 1286510)
[PASS] testGasSwapSingleBin() (gas: 583856)
[PASS] testGasUpdateDynamicLPFee() (gas: 866394)
[PASS] testGas_SetMaxBinStep() (gas: 20845)
[PASS] testInitializeDynamicFeeTooLarge(uint24) (runs: 9, μ: 716307, ~: 716477)
[PASS] testInitializeHookValidation() (gas: 2056328)
[PASS] testInitializeInvalidBinStep() (gas: 45027)
[PASS] testInitializeInvalidFee() (gas: 715632)
[PASS] testInitializeInvalidId() (gas: 23861)
[PASS] testInitializeSamePool() (gas: 147363)
[PASS] testInitializeSwapFeeTooLarge() (gas: 40413)
[PASS] testInitialize_gasCheck_withoutHooks() (gas: 143668)
[PASS] testMinBinSharesForDonate_OnlyOwner() (gas: 13314)
[PASS] testMintAndBurnWithSalt() (gas: 1264915)
[PASS] testMintMixWithAndWithoutSalt() (gas: 2324599)
[PASS] testMintNativeCurrency() (gas: 443649)
[PASS] testMintPoolNotInitialized() (gas: 147865)
[PASS] testMint_WhenPaused() (gas: 296979)
[PASS] testSetMaxBinStep() (gas: 17832)
[PASS] testSetProtocolFee() (gas: 328565)
[PASS] testSetProtocolFeePoolNotInitialized() (gas: 201846)
[PASS] testSetProtocolFeePoolNotOwner() (gas: 198866)
[PASS] testSwapPoolNotInitialized() (gas: 88179)
[PASS] testSwapUseSurplusTokenAsInput() (gas: 681477)
[PASS] testSwap_WhenPaused() (gas: 567810)
[PASS] testUpdateDynamicLPFee_FeeNotDynamic() (gas: 27128)
[PASS] testUpdateDynamicLPFee_FeeTooLarge() (gas: 711701)
[PASS] test_FuzzInitializePool(uint16) (runs: 9, μ: 2199570, ~: 2199764)
[PASS] test_FuzzInitializePoolUnusedBits(uint256) (runs: 9, μ: 2048054, ~: 2048081)
[PASS] test_bytecodeSize() (gas: 9846)
[PASS] test_fuzz_InvalidPrice(uint24,bool) (runs: 9, μ: 27922, ~: 28010)
[PASS] test_fuzz_ValidPrice(uint24,bool) (runs: 9, μ: 144184, ~: 144214)
[PASS] test_getNextNonEmptyBin() (gas: 971014)
[PASS] test_getNextNonEmptyBin_AddRemoveAddLiquidity() (gas: 658111)
[PASS] test_getNextNonEmptyBin_NoBinWithLiqudiity() (gas: 155771)
[PASS] test_initcodeHash() (gas: 14394)
Suite result: ok. 53 passed; 0 failed; 0 skipped; finished in 259.36ms (24.35ms CPU time)
[2m2025-02-15T12:28:04.388305Z[0m [31mERROR[0m [2mcheatcodes[0m[2m:[0m non-empty stderr [3minput[0m[2m=[0m["npx", "ts-node", "test/js-scripts/getSqrtRatioAtTick.ts", "-50,50,-100,100,-200,200,-400,400,-800,800,-1600,1600,-3200,3200,-6400,6400,-12800,12800,-25600,25600,-51200,51200,-102400,102400,-204800,204800,-409600,409600,-819200,819200"] [3mstderr[0m[2m=[0m"TypeError: Unknown file extension \".ts\" for /Users/galargh/GitHub/galargh/solidity-testing-testing/repositories/pancakeswap/pancake-v4-core/test/js-scripts/getSqrtRatioAtTick.ts\n    at Object.getFileProtocolModuleFormat [as file:] (node:internal/modules/esm/get_format:218:9)\n    at defaultGetFormat (node:internal/modules/esm/get_format:244:36)\n    at defaultLoad (node:internal/modules/esm/load:122:22)\n    at async ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:32)\n    at async ModuleJob._link (node:internal/modules/esm/module_job:112:19) {\n  code: 'ERR_UNKNOWN_FILE_EXTENSION'\n}\n"
[2m2025-02-15T12:28:04.388305Z[0m [31mERROR[0m [2mcheatcodes[0m[2m:[0m non-empty stderr [3minput[0m[2m=[0m["npx", "ts-node", "test/js-scripts/getTickAtSqrtRatio.ts", "4295128739,68722059824,1099552957184,17592847314944,281485557039104,4503768912625664,72060302602010624,1152964841632169984,18447437466114719744,295158999457835515904,4722543991325368254464,75560703861205892071424,1208971261779294273142784,19343540188468708370284544,309496643015499333924552704,4951946288247989342792843264,79231140611967829484685492224,1267698249791485271754967875584,20283171996663764348079486009344,324530751946620229569271776149504,5192492031145923673108348418392064,83079872498334778769733574694273024,1329277959973356460315737195108368384,21268447359573703365051795121733894144,340295157753179253840828721947742306304,5444722524050868061453259551163876900864,87115560384813888983252152818622030413824,1393848966157022223732034445097952486621184,22301583458512355579712551121567239785938944,356825335336197689275400817945075836575023104,5709205365379163028406413087121213385200369664"] [3mstderr[0m[2m=[0m"TypeError: Unknown file extension \".ts\" for /Users/galargh/GitHub/galargh/solidity-testing-testing/repositories/pancakeswap/pancake-v4-core/test/js-scripts/getTickAtSqrtRatio.ts\n    at Object.getFileProtocolModuleFormat [as file:] (node:internal/modules/esm/get_format:218:9)\n    at defaultGetFormat (node:internal/modules/esm/get_format:244:36)\n    at defaultLoad (node:internal/modules/esm/load:122:22)\n    at async ModuleLoader.loadAndTranslate (node:internal/modules/esm/loader:479:32)\n    at async ModuleJob._link (node:internal/modules/esm/module_job:112:19) {\n  code: 'ERR_UNKNOWN_FILE_EXTENSION'\n}\n"

Ran 22 tests for test/pool-cl/libraries/TickMath.t.sol:TickMathTestTest
[PASS] testFuzz_getTickAtSqrtPrice_throwsForInvalid(uint160,bool) (runs: 9, μ: 13091, ~: 13147)
[PASS] test_MAX_TICK_equalsNegativeMIN_TICK() (gas: 9466)
[PASS] test_MIN_TICK_equalsNegativeMAX_TICK() (gas: 9831)
[PASS] test_fuzz_getSqrtRatioAtTick_throwsForTooLarge(int24) (runs: 9, μ: 14233, ~: 14345)
[PASS] test_fuzz_getTickAtSqrtPrice_getSqrtRatioAtTick_relation(int24) (runs: 9, μ: 19643, ~: 19989)
[PASS] test_getSqrtRatioAtTick_isGreaterThanJSImplMaxTick() (gas: 9915)
[PASS] test_getSqrtRatioAtTick_isLessThanJSImplMinTick() (gas: 9345)
[PASS] test_getSqrtRatioAtTick_isValidMaxTick() (gas: 12581)
[PASS] test_getSqrtRatioAtTick_isValidMaxTickSubOne() (gas: 9898)
[PASS] test_getSqrtRatioAtTick_isValidMinTick() (gas: 12741)
[PASS] test_getSqrtRatioAtTick_isValidMinTickAddOne() (gas: 9891)
[FAIL: EvmError: Revert] test_getSqrtRatioAtTick_matchesJavaScriptImplByOneHundrethOfABip() (gas: 797912)
[PASS] test_getSqrtRatioAtTick_throwsForInt24Min() (gas: 8740)
[PASS] test_getSqrtRatioAtTick_throwsForTooHigh() (gas: 9244)
[PASS] test_getSqrtRatioAtTick_throwsForTooLow() (gas: 8966)
[PASS] test_getTickAtSqrtRatio_isValidMaxSqrtRatioMinusOne() (gas: 10793)
[PASS] test_getTickAtSqrtRatio_isValidMinSqrtRatio() (gas: 10466)
[PASS] test_getTickAtSqrtRatio_isValidMinSqrtRatioPlusOne() (gas: 10658)
[PASS] test_getTickAtSqrtRatio_isValidRatioClosestToMaxTick() (gas: 10875)
[FAIL: EvmError: Revert] test_getTickAtSqrtRatio_matchesJavascriptImplWithin1() (gas: 268683)
[PASS] test_getTickAtSqrtRatio_throwsForTooHigh() (gas: 9094)
[PASS] test_getTickAtSqrtRatio_throwsForTooLow() (gas: 9387)
Suite result: FAILED. 20 passed; 2 failed; 0 skipped; finished in 801.42ms (1.59s CPU time)

Ran 49 tests for test/vault/Vault.t.sol:VaultTest
[PASS] testAccountPoolBalanceDeltaFromArbitraryAddr() (gas: 23159)
[PASS] testAccountPoolBalanceDeltaFromUnregistedPoolManager() (gas: 29735)
[PASS] testAccountPoolBalanceDeltaWithHookDeltaFromUnregistedPoolManager() (gas: 33767)
[PASS] testAccountPoolBalanceDeltaWithoutLock() (gas: 20990)
[PASS] testFuzzAccountBalanceDeltaWithHookDelta_AddLiquidityHookFee(uint256,uint256) (runs: 9, μ: 212060, ~: 211787)
[PASS] testFuzzAccountBalanceDeltaWithHookDelta_OverwriteCurve(uint256,uint256) (runs: 9, μ: 199609, ~: 199949)
[PASS] testFuzzAccountBalanceDeltaWithHookDelta_RemoveLiquidityHookFee(uint256,uint256) (runs: 10, μ: 226038, ~: 226038)
[PASS] testLockFlashloanCrossMoreThanOnePoolManagers() (gas: 292226)
[PASS] testLockInSufficientBalanceWhenMoreThanOnePoolManagers() (gas: 274151)
[PASS] testLockNotSettledAsPayTooMuch() (gas: 165393)
[PASS] testLockNotSettledAsPayTooMuch_HookDelta() (gas: 190810)
[PASS] testLockNotSettledWithoutFullyPayment() (gas: 142111)
[PASS] testLockNotSettledWithoutFullyPayment_HookDelta() (gas: 138239)
[PASS] testLockNotSettledWithoutPayment() (gas: 84717)
[PASS] testLockNotSettledWithoutPayment_HookDelta() (gas: 85290)
[PASS] testLockSettledWhenAddLiquidity() (gas: 182619)
[PASS] testLockSettledWhenAddLiquidity_HookDelta() (gas: 256426)
[PASS] testLockSettledWhenSwap() (gas: 200879)
[PASS] testLockWhenAlreadyLocked() (gas: 17825)
[PASS] testLockWhenMoreThanOnePoolManagers() (gas: 264941)
[PASS] testLock_NoOperation() (gas: 10824)
[PASS] testNotCorrectPoolManager() (gas: 143252)
[PASS] testRegisterPoolManager() (gas: 49923)
[PASS] testTake_failsWithNoLiquidity() (gas: 24493)
[PASS] testVaultFuzz_burn(uint256) (runs: 10, μ: 75953, ~: 75946)
[PASS] testVaultFuzz_burnFrom_withApprove(uint256) (runs: 10, μ: 340760, ~: 340632)
[PASS] testVaultFuzz_burnFrom_withoutApprove(uint256) (runs: 10, μ: 101305, ~: 101305)
[PASS] testVaultFuzz_burnHalf(uint256) (runs: 10, μ: 103214, ~: 103084)
[PASS] testVaultFuzz_mint(uint256) (runs: 10, μ: 88123, ~: 88061)
[PASS] testVaultFuzz_mint_toSomeoneElse(uint256) (runs: 10, μ: 96973, ~: 97120)
[PASS] testVaultOwner_2StepsTransferOwnership() (gas: 42291)
[PASS] testVaultOwner_get() (gas: 16058)
[PASS] testVaultOwner_registerApp() (gas: 46249)
[PASS] testVault_clear_existingDeltaGreaterThanInput() (gas: 139870)
[PASS] testVault_clear_existingDeltaLessThanInput() (gas: 140530)
[PASS] testVault_clear_existingDeltaNegative() (gas: 106793)
[PASS] testVault_clear_successWithNonZeroExistingDelta() (gas: 111247)
[PASS] testVault_clear_successWithZeroExistingDelta() (gas: 103129)
[PASS] testVault_clear_withAmountZero() (gas: 138044)
[PASS] testVault_ethSupport_SettleNonNativeCurrencyWithValue() (gas: 33440)
[PASS] testVault_ethSupport_flashloan() (gas: 267648)
[PASS] testVault_ethSupport_settleAndTake() (gas: 65302)
[PASS] testVault_ethSupport_transferInAndSettle() (gas: 124839)
[PASS] test_CollectFee() (gas: 165877)
[PASS] test_CollectFeeFromRandomUser() (gas: 16772)
[PASS] test_CollectFeeWhenCurrencyIsSynced() (gas: 35751)
[PASS] test_CollectFee_WhenVaultLocked() (gas: 162584)
[PASS] test_bytecodeSize() (gas: 10439)
[PASS] test_initcodeHash() (gas: 7767)
Suite result: ok. 49 passed; 0 failed; 0 skipped; finished in 803.46ms (25.06ms CPU time)

Ran 73 test suites in 829.53ms (3.20s CPU time): 707 tests passed, 95 failed, 0 skipped (802 total tests)

Failing tests:
Encountered 1 failing test in test/VaultToken.t.sol:VaultTokenTest
[FAIL: `testFail*` has been removed. Consider changing to test_Revert[If|When]_Condition and expecting a revert] Found 11 instances: testFailMintBalanceOverflow, testFailTransferBalanceOverflow, testFailTransferBalanceOverflow, testFailTransferBalanceUnderflow, testFailTransferBalanceUnderflow, testFailTransferFromBalanceOverflow, testFailTransferFromBalanceOverflow, testFailTransferFromBalanceUnderflow, testFailTransferFromBalanceUnderflow, testFailTransferFromNotAuthorized, testFailTransferFromNotAuthorized (gas: 0)

Encountered 3 failing tests in test/libraries/BalanceDelta.t.sol:TestBalanceDelta
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_add_revertsOnOverflow() (gas: 3417)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x77a06f20000000000000000000000000000000000000000000006df87afecf92d16317c0fffffffffffffffffffffffffffffffffffffffffffffffff9c1d05a13ffcbd8000000000000000000000000000000007ffffffffffffffffffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeca args=[519321601912417493915584 [5.193e23], -449849402459173928 [-4.498e17], 170141183460469231731687303715884105726 [1.701e38], -310]] test_fuzz_add(int128,int128,int128,int128) (runs: 3, μ: 4515, ~: 4515)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_sub_revertsOnUnderflow() (gas: 3593)

Encountered 2 failing tests in test/libraries/BipsLibrary.t.sol:BipsLibraryTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0e2270d70000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a2 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55]]] test_fuzz_calculatePortion(uint256,uint256) (runs: 1, μ: 6735, ~: 6735)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x9e6396d0000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] test_fuzz_gasLimit(uint256) (runs: 0, μ: 0, ~: 0)

Encountered 2 failing tests in test/libraries/LPFeeLibrary.t.sol:LPFeeLibraryTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xecc05dec0000000000000000000000000000000000000000000000000000000000003ff20000000000000000000000000000000000000000000000000000000000000000 args=[16370 [1.637e4], 0]] testFuzzRemoveOverrideAndValidate(uint24,uint24) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x75ae57240000000000000000000000000000000000000000000000000000000000003ff20000000000000000000000000000000000000000000000000000000000000000 args=[16370 [1.637e4], 0]] testFuzzValidate(uint24,uint24) (runs: 0, μ: 0, ~: 0)

Encountered 4 failing tests in test/libraries/SafeCast.t.sol:SafeCastTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x719ecc09fffffffffffffffffffffffffffffff78501306d2e9ce83fdb4ca50b9c25ab61 args=[-2885747804346237136264930605832141952159 [-2.885e39]]] testToInt128(int256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x01dbaede000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testToInt128(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x16f2417dfe74f05b00000000000000000000000000000000000000000000000000000001 args=[115094076672142331675073204854499031525897280609611282276006762738443496718337 [1.15e77]]] testToUint160(uint256) (runs: 6, μ: 3202, ~: 3202)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xce6378e9fffffffffffffffffffffffffffffff78501306d2e9ce83fdb4ca50b9c25ab61 args=[-2885747804346237136264930605832141952159 [-2.885e39]]] testToUint256(int256) (runs: 0, μ: 0, ~: 0)

Encountered 1 failing test in test/libraries/SettlementGuard.t.sol:SettlementGuardTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x25b784dd0000000000000000000000003c2d28ca5f197831f2009ff4c092f847f5922eec000000000000000000000000aa3033f9bda5208128a52717788e35c99b5e3dab args=[0x3C2d28cA5f197831F2009ff4c092f847F5922eec, 0xAA3033f9BDa5208128A52717788e35C99b5e3Dab]] testSetLocker(address,address) (runs: 0, μ: 0, ~: 0)

Encountered 3 failing tests in test/pool-bin/libraries/BinHelper.t.sol:BinHelperTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x07b8855a00000000000000000000000000000000000000000394c5756e51148d0295b83e000000000000000000000000000000000000000008f6afc75f22cfee5dfa2a170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005db385afb10e73b15000000000000000000000000000000000000000000000000e95bd5f3803a6d4b0207e594effe76d7d8118316d09771b0d4b3eb2391f99a2082ddc2bf6fa8ef1f000000000000000000000000000000000000000000000000000b798d14b6ada8000000000000000000000000000000000000000000000000000000000000343a args=[1108308523182339681307441214 [1.108e27], 2774105922087802388386294295 [2.774e27], 0, 108030196095916653333 [1.08e20], 16815268875522960715 [1.681e19], 918578141879821466194885358171871211715318759207994419305144017121752706847 [9.185e74], 3229871588683176 [3.229e15], 13370 [1.337e4]]] testFuzz_GetCompositionFees(uint128,uint128,uint16,uint128,uint128,uint256,uint256,uint24) (runs: 4, μ: 15718, ~: 15687)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x8378969f00000000000000000000000000000000000000000000000000000000000022480000000000000000000000000000000000000000000000000000000000000b7b16692de900000000000000000000000000000000000000000000000000000001 args=[8776, 2939, 10136718470886769920288884483190441267021582373733824082092025187547018690561 [1.013e76]]] testFuzz_GetLiquidity(uint128,uint128,uint256) (runs: 3, μ: 4432, ~: 4432)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6ba2eacd00000000000000000000000000000000000000000000edf87afecf92d16317c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000fa5000000000000000000000000000000000000000000000000000000000000000f args=[1123784511719732081268672 [1.123e24], 3, 4005, 15]] testFuzz_VerifyAmountsNeqIds(uint128,uint128,uint24,uint24) (runs: 0, μ: 0, ~: 0)

Encountered 1 failing test in test/pool-bin/libraries/PriceHelper.t.sol:PriceHelperTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf007f551000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_revert_ConvertDecimalPriceTo128x128(uint256) (runs: 0, μ: 0, ~: 0)

Encountered 2 failing tests in test/pool-bin/libraries/math/LiquidityConfigurations.t.sol:LiquidityConfigurationsTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0b5145eb3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717 args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717]] testFuzz_DecodeParams(bytes32) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x581007883c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_GetAmountsAndId(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)

Encountered 5 failing tests in test/pool-bin/libraries/math/PackedUint128Math.t.sol:PackedUint128MathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4b5eeccb3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_Add(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x7466b8ac3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea args=[0x3c2d28ca5f197831f2009ff4c092f847f5922eecaa3033f9bda5208128a52717, 0x788e35c99b5e3dabfc0f0ca3174cd91ce6375961364031d3c07b06e8949c95ea]] testFuzz_Sub(bytes32,bytes32) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_AddOverflow() (gas: 3716)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_SubUnderflow() (gas: 5706)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getProtocolFeeAmt_Overflow() (gas: 3672)

Encountered 32 failing tests in test/pool-bin/libraries/math/SafeCast.t.sol:SafeCastTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xef32ecd9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast104(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3a557741000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast112(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x562fb6e9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast120(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe5772a25000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast128(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x1288c0e888b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast136(uint256) (runs: 4, μ: 3527, ~: 3527)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x22e84d8e88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast144(uint256) (runs: 4, μ: 3593, ~: 3593)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4bfe871788b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast152(uint256) (runs: 4, μ: 3747, ~: 3747)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x80afec19000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast16(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5e0011ea88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast160(uint256) (runs: 4, μ: 3901, ~: 3901)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x55140fa488b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast168(uint256) (runs: 4, μ: 3857, ~: 3857)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xd38cc93888b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast176(uint256) (runs: 4, μ: 4253, ~: 4253)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x521166a588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast184(uint256) (runs: 4, μ: 3813, ~: 3813)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x7855d71288b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast192(uint256) (runs: 4, μ: 3989, ~: 3989)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x84b9fa7588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast200(uint256) (runs: 4, μ: 4033, ~: 4033)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xc80b189b88b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast208(uint256) (runs: 4, μ: 4209, ~: 4209)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x0bf1b0a588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast216(uint256) (runs: 4, μ: 3483, ~: 3483)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe3a62e5288b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast224(uint256) (runs: 4, μ: 4319, ~: 4319)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4d33075488b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast232(uint256) (runs: 4, μ: 3769, ~: 3769)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe067bfb4000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast24(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x109bc00588b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast240(uint256) (runs: 4, μ: 3505, ~: 3505)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x2d294d2188b44c84ffffffffffffffffffffffffffffffffffffffffffffffffffffffff args=[61833107997379600811980017068157716007443892333081254205698062959057693573119 [6.183e76]]] testFuzz_SafeCast248(uint256) (runs: 4, μ: 3659, ~: 3659)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xd15db81d000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast32(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5069a454000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast40(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5408d0d7000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast48(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x128ea09c000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast56(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf409d884000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast64(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xfa295576000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast72(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xc1c55029000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast8(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x89a1be22000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast80(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6fb9f1c9000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast88(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x6dbe8988000000000000000000000000000000187afecf92d16317c024b35af463da549f args=[8330265675081252551678924324740433335455 [8.33e39]]] testFuzz_SafeCast96(uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x28d85c1100000000000000000000000000000000ffffffffffffffffffffffffffffffff args=[340282366920938463463374607431768211455 [3.402e38]]] testFuzz_SafeCastInt128(uint128) (runs: 4, μ: 3588, ~: 3588)

Encountered 4 failing tests in test/pool-bin/libraries/math/Uint256x256Math.t.sol:Uint256x256MathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xccc03f290000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a200000000000000000000000000000000000000000000000000000000000563f8 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 353272 [3.532e5]]] testFuzz_MulDivRoundDown(uint256,uint256,uint256) (runs: 1, μ: 4224, ~: 4224)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3f06495c0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a200000000000000000000000000000000000000000000000000000000000563f8 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 353272 [3.532e5]]] testFuzz_MulDivRoundUp(uint256,uint256,uint256) (runs: 1, μ: 4331, ~: 4331)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x3286bd8e0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a20000000000000000000000000000000000000000000000000000000000000003 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 3]] testFuzz_mulShiftRoundDown(uint256,uint256,uint8) (runs: 1, μ: 3942, ~: 3942)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xf96370ea0000000000000000000000000000000000000027bf49fc619299a3b75600894b000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a20000000000000000000000000000000000000000000000000000000000000003 args=[3149099418353269454913612581195 [3.149e30], 19571390754848919532304869803863391086042999602957394338 [1.957e55], 3]] testFuzz_mulShiftRoundUp(uint256,uint256,uint8) (runs: 1, μ: 4536, ~: 4536)

Encountered 2 failing tests in test/pool-cl/libraries/BitMath.t.sol:BitMathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testLeastSignificantBitZero() (gas: 3475)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testMostSignificantBitZero() (gas: 3321)

Encountered 4 failing tests in test/pool-cl/libraries/CLPool.t.sol:PoolTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x34b35fcc000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae00000000000000000000000000007affae7463b1f0eb923ef954520dbae07ce20000000000000000000000000000000000000000000001be160d5f7114d96abd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000002f64 args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), 10714702777239348061190258498855904408009954 [1.071e43], 8228836888057277409981 [8.228e21], 0, 18, 12132 [1.213e4]]] testDonate(uint160,(address,int24,int24,int128,int24,bytes32),uint256,uint256,uint24,uint16,uint16) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x2a11f438000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae0000000000000000000000000000000000000000000000000000000000003ce2000000000000000000000000000000000000000000000000000000000000003d args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), 15586 [1.558e4], 61]] testModifyPosition(uint160,(address,int24,int24,int128,int24,bytes32),uint24,uint24) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x818fd36c00000000000000000000000000000000000000000000000000000000000001950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c args=[405, 0, 108]] testPoolInitialize(uint160,uint24,uint24) (runs: 1, μ: 32216, ~: 32216)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x4571e780000000000000000000000000000000000000000003da549f5645ba00aeac3ff2000000000000000000000000c092f847f5922eecaa3033f9bda5208128a5271700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff46288ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff24c911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae0000000000000000000000000000000000000000000000000000000000001ce200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000178ab981932dd6900000000000000000000000000000000013fd3d8e3b1f0375a4c2bc9d320434d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000660000000000000000000000000000000000000000000000000000000000000009 args=[1192400476173472509025075186 [1.192e27], ModifyLiquidityParams({ owner: 0xc092f847F5922eeCaa3033F9bda5208128a52717, tickLower: 0, tickUpper: 0, liquidityDelta: -761208 [-7.612e5], tickSpacing: -220, salt: 0xc911aae64c71a32f42c3273cb04d3e560e361afca4080ce75a68f7aa421213ae }), SwapParams({ tickSpacing: 7394, zeroForOne: false, amountSpecified: 106023260989349225 [1.06e17], sqrtPriceLimitX96: 1660639470050295085608157845334803277 [1.66e36], lpFeeOverride: 0 }), 0, 102, 9]] testSwap(uint160,(address,int24,int24,int128,int24,bytes32),(int24,bool,int256,uint160,uint24),uint24,uint16,uint16) (runs: 0, μ: 0, ~: 0)

Encountered 1 failing test in test/pool-cl/libraries/CLPosition.t.sol:CLPositionTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xbc48a988ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffebffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000cc55b8f82f10155cdfd292c710d46c9ab9ec6334ba21a2 args=[-21, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77], 19571390754848919532304869803863391086042999602957394338 [1.957e55]]] test_set_updateEmptyPositionFuzz(int128,uint256,uint256) (runs: 1, μ: 72529, ~: 72529)

Encountered 7 failing tests in test/pool-cl/libraries/FullMath.t.sol:FullMathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDivRoundingUp_revertsIfMulDivOverflows256BitsAfterRoundingUp() (gas: 3953)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDivRoundingUp_revertsIfMulDivOverflows256BitsAfterRoundingUpCase2() (gas: 4019)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xe82f688c000000000000000000000000000000187afecf92d16317c024b35af463da549f0000000000000000000000000000000000000000000000000000000000000003 args=[8330265675081252551678924324740433335455 [8.33e39], 3]] test_mulDivRoundingUp_revertsWith0Denominator(uint256,uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsIfOutputOverflows() (gas: 3289)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsOverflowWithAllMaxInputs() (gas: 3179)
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x85d092b9000000000000000000000000000000187afecf92d16317c024b35af463da549f0000000000000000000000000000000000000000000000000000000000000003 args=[8330265675081252551678924324740433335455 [8.33e39], 3]] test_mulDiv_revertsWith0Denominator(uint256,uint256) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_mulDiv_revertsWithOverflowingNumeratorAndZeroDenominator() (gas: 3509)

Encountered 2 failing tests in test/pool-cl/libraries/LiquidityMath.t.sol:LiquidityMathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testAddDeltaOverflow() (gas: 3287)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testAddDeltaUnderflow() (gas: 3059)

Encountered 12 failing tests in test/pool-cl/libraries/SqrtPriceMath.t.sol:SqrtPriceMathTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfInputAmountOverflowsThePrice() (gas: 3782)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfLiquidityIsZero() (gas: 3299)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromInput_revertsIfPriceIsZero() (gas: 3629)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_puzzlingEchidnaTest() (gas: 3363)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfAmountOutIsImpossibleInOneForZeroDirection() (gas: 3760)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfAmountOutIsImpossibleInZeroForOneDirection() (gas: 3644)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfLiquidityIsZero() (gas: 3321)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsExactlyTheVirtualReservesOfCurrency0() (gas: 3803)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsExactlyTheVirtualReservesOfCurrency1() (gas: 4157)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsGreaterThanTheVirtualReservesOfCurrency0() (gas: 4222)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfOutputAmountIsGreaterThanTheVirtualReservesOfCurrency1() (gas: 3937)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] test_getNextSqrtPriceFromOutput_revertsIfPriceIsZero() (gas: 3761)

Encountered 4 failing tests in test/pool-cl/libraries/Tick.t.sol:TickTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0x5053df700000000000000000000000000000000000000000000000000000000000001ff200000000000000000000000000000000000000000000000000000000007fffff args=[8178, 8388607 [8.388e6]]] testTickFuzz_checkTicks(int24,int24) (runs: 0, μ: 0, ~: 0)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnOverflowLiquidityNet() (gas: 38699)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnTickLiquidityOverflow() (gas: 12508)
[FAIL: call didn't revert at a lower depth than cheatcode call depth] testTick_update_revertsOnTickLiquidityOverflow2() (gas: 13430)

Encountered 1 failing test in test/pool-cl/libraries/TickBitmap.t.sol:TickBitmapTest
[FAIL: call didn't revert at a lower depth than cheatcode call depth; counterexample: calldata=0xac8fef420000000000000000000000000000000000000000000000000000000000001ff200000000000000000000000000000000000000000000000000000000007fffff args=[8178, 8388607 [8.388e6]]] testFuzz_flipTick(int24,int24) (runs: 0, μ: 0, ~: 0)

Encountered 2 failing tests in test/pool-cl/libraries/TickMath.t.sol:TickMathTestTest
[FAIL: EvmError: Revert] test_getSqrtRatioAtTick_matchesJavaScriptImplByOneHundrethOfABip() (gas: 797912)
[FAIL: EvmError: Revert] test_getTickAtSqrtRatio_matchesJavascriptImplWithin1() (gas: 268683)

Encountered a total of 95 failing tests, 707 tests succeeded
