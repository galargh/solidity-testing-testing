Running Solidity tests

Ran 1 tests for src/test/ERC20.t.sol:BalanceSum (v0.8.15)
✘ Failed(1): setUp() (duration: 0 ms, consumedGas: 0)
✘ Suite Failed: 1 tests, 0 passed, 1 failed, 0 skipped (duration: 1 ms)

Ran 2 tests for src/test/Bytes32AddressLib.t.sol:Bytes32AddressLibTest (v0.8.15)
✔ Passed: testFromLast20Bytes() (duration: 14 ms, consumedGas: 246)
✔ Passed: testFillLast12Bytes() (duration: 0 ms, consumedGas: 287)
✔ Suite Passed: 2 tests, 2 passed, 0 failed, 0 skipped (duration: 2459 ms)

Ran 39 tests for src/test/FixedPointMathLib.t.sol:FixedPointMathLibTest (v0.8.15)
✔ Passed: testSqrtBackHashedSingle() (duration: 0 ms, consumedGas: 71675)
✔ Passed: testSqrtBackHashed(uint256) (duration: 72 ms, runs: 256, meanGas: 71986, medianGas: 72529)
✔ Passed: testSqrtBack(uint256) (duration: 20 ms, runs: 256, meanGas: 15748, medianGas: 559)
✔ Passed: testSqrt(uint256) (duration: 16 ms, runs: 256, meanGas: 1695, medianGas: 1700)
✔ Passed: testSqrt() (duration: 0 ms, consumedGas: 3045)
✔ Passed: testRPow() (duration: 0 ms, consumedGas: 2242)
✔ Passed: testMulWadUpEdgeCases() (duration: 0 ms, consumedGas: 945)
✔ Passed: testMulWadUp(uint256,uint256) (duration: 20 ms, runs: 256, meanGas: 1667, medianGas: 2052)
✔ Passed: testMulWadUp() (duration: 0 ms, consumedGas: 967)
✔ Passed: testMulWadDownEdgeCases() (duration: 0 ms, consumedGas: 862)
✔ Passed: testMulWadDown(uint256,uint256) (duration: 21 ms, runs: 256, meanGas: 1231, medianGas: 1441)
✔ Passed: testMulWadDown() (duration: 0 ms, consumedGas: 863)
✔ Passed: testMulDivUpEdgeCases() (duration: 0 ms, consumedGas: 867)
✔ Passed: testMulDivUp(uint256,uint256,uint256) (duration: 8 ms, runs: 256, meanGas: 1853, medianGas: 2201)
✔ Passed: testMulDivUp() (duration: 0 ms, consumedGas: 2272)
✔ Passed: testMulDivDownEdgeCases() (duration: 9 ms, consumedGas: 717)
✔ Passed: testMulDivDown(uint256,uint256,uint256) (duration: 8 ms, runs: 256, meanGas: 1313, medianGas: 1503)
✔ Passed: testMulDivDown() (duration: 0 ms, consumedGas: 2015)
✘ Failed(2): testFailMulWadUpOverflow(uint256,uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(3): testFailMulWadDownOverflow(uint256,uint256) (duration: 6 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(4): testFailMulDivUpZeroDenominator(uint256,uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(5): testFailMulDivUpZeroDenominator() (duration: 0 ms, consumedGas: 351)
✘ Failed(6): testFailMulDivUpOverflow(uint256,uint256,uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(7): testFailMulDivDownZeroDenominator(uint256,uint256) (duration: 0 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(8): testFailMulDivDownZeroDenominator() (duration: 0 ms, consumedGas: 350)
✘ Failed(9): testFailMulDivDownOverflow(uint256,uint256,uint256) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(10): testFailDivWadUpZeroDenominator(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(11): testFailDivWadUpZeroDenominator() (duration: 0 ms, consumedGas: 309)
✘ Failed(12): testFailDivWadUpOverflow(uint256,uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(13): testFailDivWadDownZeroDenominator(uint256) (duration: 0 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(14): testFailDivWadDownZeroDenominator() (duration: 0 ms, consumedGas: 309)
✘ Failed(15): testFailDivWadDownOverflow(uint256,uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✔ Passed: testDivWadUpEdgeCases() (duration: 0 ms, consumedGas: 442)
✔ Passed: testDivWadUp(uint256,uint256) (duration: 12 ms, runs: 256, meanGas: 1620, medianGas: 1803)
✔ Passed: testDivWadUp() (duration: 0 ms, consumedGas: 1034)
✔ Passed: testDivWadDownEdgeCases() (duration: 0 ms, consumedGas: 437)
✔ Passed: testDivWadDown(uint256,uint256) (duration: 11 ms, runs: 256, meanGas: 1355, medianGas: 1450)
✔ Passed: testDivWadDown() (duration: 0 ms, consumedGas: 905)
✔ Passed: testDifferentiallyFuzzSqrt(uint256) (duration: 49 ms, runs: 256, meanGas: 28003, medianGas: 13997)
✘ Suite Failed: 39 tests, 25 passed, 14 failed, 0 skipped (duration: 96 ms)

Ran 7 tests for src/test/LibString.t.sol:LibStringTest (v0.8.15)
✔ Passed: testToStringOverwrite() (duration: 0 ms, consumedGas: 547)
✔ Passed: testToStringIntPositive() (duration: 0 ms, consumedGas: 14150)
✔ Passed: testToStringIntNegative() (duration: 0 ms, consumedGas: 12888)
✔ Passed: testToStringDirty() (duration: 0 ms, consumedGas: 9278)
✔ Passed: testToString() (duration: 0 ms, consumedGas: 13656)
✔ Passed: testDifferentiallyFuzzToStringInt(int256,bytes) (duration: 40 ms, runs: 256, meanGas: 39370, medianGas: 21762)
✔ Passed: testDifferentiallyFuzzToString(uint256,bytes) (duration: 44 ms, runs: 256, meanGas: 42293, medianGas: 30682)
✔ Suite Passed: 7 tests, 7 passed, 0 failed, 0 skipped (duration: 44 ms)

Ran 4 tests for src/test/MerkleProofLib.t.sol:MerkleProofLibTest (v0.8.15)
✔ Passed: testVerifyInvalidProofSupplied() (duration: 0 ms, consumedGas: 3753)
✔ Passed: testVerifyEmptyMerkleProofSuppliedLeafAndRootSame() (duration: 0 ms, consumedGas: 2718)
✔ Passed: testVerifyEmptyMerkleProofSuppliedLeafAndRootDifferent() (duration: 0 ms, consumedGas: 2616)
✔ Passed: testValidProofSupplied() (duration: 0 ms, consumedGas: 3712)
✔ Suite Passed: 4 tests, 4 passed, 0 failed, 0 skipped (duration: 0 ms)

Ran 18 tests for src/test/MultiRolesAuthority.t.sol:MultiRolesAuthorityTest (v0.8.15)
✔ Passed: testSetTargetCustomAuthority(address,address) (duration: 47 ms, runs: 256, meanGas: 32398, medianGas: 32365)
✔ Passed: testSetTargetCustomAuthority() (duration: 0 ms, consumedGas: 32067)
✔ Passed: testSetRoles(address,uint8) (duration: 20 ms, runs: 256, meanGas: 32853, medianGas: 32839)
✔ Passed: testSetRoles() (duration: 0 ms, consumedGas: 33080)
✔ Passed: testSetRoleCapabilities(uint8,bytes4) (duration: 29 ms, runs: 256, meanGas: 32511, medianGas: 32508)
✔ Passed: testSetRoleCapabilities() (duration: 0 ms, consumedGas: 33304)
✔ Passed: testSetPublicCapabilities(bytes4) (duration: 18 ms, runs: 256, meanGas: 30554, medianGas: 30551)
✔ Passed: testSetPublicCapabilities() (duration: 0 ms, consumedGas: 30928)
✔ Passed: testCanCallWithCustomAuthorityOverridesUserWithRole(address,uint8,address,bytes4) (duration: 91 ms, runs: 256, meanGas: 365897, medianGas: 365897)
✔ Passed: testCanCallWithCustomAuthorityOverridesUserWithRole() (duration: 0 ms, consumedGas: 367401)
✔ Passed: testCanCallWithCustomAuthorityOverridesPublicCapability(address,address,bytes4) (duration: 66 ms, runs: 256, meanGas: 359398, medianGas: 359398)
✔ Passed: testCanCallWithCustomAuthorityOverridesPublicCapability() (duration: 4 ms, consumedGas: 360061)
✔ Passed: testCanCallWithCustomAuthority(address,address,bytes4) (duration: 70 ms, runs: 256, meanGas: 628468, medianGas: 628468)
✔ Passed: testCanCallWithCustomAuthority() (duration: 0 ms, consumedGas: 628634)
✔ Passed: testCanCallWithAuthorizedRole(address,uint8,address,bytes4) (duration: 41 ms, runs: 256, meanGas: 90732, medianGas: 90698)
✔ Passed: testCanCallWithAuthorizedRole() (duration: 0 ms, consumedGas: 91663)
✔ Passed: testCanCallPublicCapability(address,address,bytes4) (duration: 32 ms, runs: 256, meanGas: 38851, medianGas: 38814)
✔ Passed: testCanCallPublicCapability() (duration: 0 ms, consumedGas: 38933)
✔ Suite Passed: 18 tests, 18 passed, 0 failed, 0 skipped (duration: 98 ms)

Ran 5 tests for src/test/Owned.t.sol:OwnedTest (v0.8.15)
✔ Passed: testTransferOwnership(address) (duration: 10 ms, runs: 256, meanGas: 14174, medianGas: 14212)
✔ Passed: testTransferOwnership() (duration: 0 ms, consumedGas: 13974)
✔ Passed: testCallFunctionAsOwner() (duration: 0 ms, consumedGas: 10570)
✔ Passed: testCallFunctionAsNonOwner(address) (duration: 10 ms, runs: 256, meanGas: 17592, medianGas: 17611)
✔ Passed: testCallFunctionAsNonOwner() (duration: 0 ms, consumedGas: 12507)
✔ Suite Passed: 5 tests, 5 passed, 0 failed, 0 skipped (duration: 11 ms)

Ran 4 tests for src/test/ReentrancyGuard.t.sol:ReentrancyGuardTest (v0.8.15)
✔ Passed: testProtectedCall() (duration: 0 ms, consumedGas: 33731)
✔ Passed: testNoReentrancy() (duration: 0 ms, consumedGas: 7637)
✘ Failed(16): testFailUnprotectedCall() (duration: 0 ms, consumedGas: 48390)
✔ Passed: invariantReentrancyStatusAlways1() (duration: 7886 ms, runs: 256, calls: 128000, reverts: 240)
✘ Suite Failed: 4 tests, 3 passed, 1 failed, 0 skipped (duration: 7888 ms)

Ran 10 tests for src/test/RolesAuthority.t.sol:RolesAuthorityTest (v0.8.15)
✔ Passed: testSetRoles(address,uint8) (duration: 29 ms, runs: 256, meanGas: 32886, medianGas: 32873)
✔ Passed: testSetRoles() (duration: 0 ms, consumedGas: 33114)
✔ Passed: testSetRoleCapabilities(uint8,address,bytes4) (duration: 37 ms, runs: 256, meanGas: 35228, medianGas: 35212)
✔ Passed: testSetRoleCapabilities() (duration: 0 ms, consumedGas: 35852)
✔ Passed: testSetPublicCapabilities(address,bytes4) (duration: 39 ms, runs: 256, meanGas: 33005, medianGas: 32986)
✔ Passed: testSetPublicCapabilities() (duration: 0 ms, consumedGas: 33277)
✔ Passed: testCanCallWithAuthorizedRole(address,uint8,address,bytes4) (duration: 46 ms, runs: 256, meanGas: 90904, medianGas: 90868)
✔ Passed: testCanCallWithAuthorizedRole() (duration: 0 ms, consumedGas: 91833)
✔ Passed: testCanCallPublicCapability(address,address,bytes4) (duration: 29 ms, runs: 256, meanGas: 38367, medianGas: 38329)
✔ Passed: testCanCallPublicCapability() (duration: 0 ms, consumedGas: 38502)
✔ Suite Passed: 10 tests, 10 passed, 0 failed, 0 skipped (duration: 46 ms)

Ran 20 tests for src/test/SSTORE2.t.sol:SSTORE2Test (v0.8.15)
✔ Passed: testWriteReadFullStartBound() (duration: 0 ms, consumedGas: 35626)
✔ Passed: testWriteReadFullBoundedRead() (duration: 0 ms, consumedGas: 54886)
✔ Passed: testWriteReadEmptyBound() (duration: 0 ms, consumedGas: 35733)
✔ Passed: testWriteReadCustomStartBound(bytes,uint256,bytes) (duration: 25 ms, runs: 256, meanGas: 48236, medianGas: 46037)
✔ Passed: testWriteReadCustomStartBound() (duration: 0 ms, consumedGas: 35647)
✔ Passed: testWriteReadCustomBounds(bytes,uint256,uint256,bytes) (duration: 13 ms, runs: 256, meanGas: 32136, medianGas: 46681)
✔ Passed: testWriteReadCustomBounds() (duration: 0 ms, consumedGas: 35858)
✔ Passed: testWriteRead(bytes,bytes) (duration: 17 ms, runs: 256, meanGas: 44662, medianGas: 42495)
✔ Passed: testWriteRead() (duration: 0 ms, consumedGas: 54457)
✘ Failed(17): testFailWriteReadOutOfStartBound() (duration: 0 ms, consumedGas: 35194)
✘ Failed(18): testFailWriteReadOutOfBounds() (duration: 0 ms, consumedGas: 35465)
✘ Failed(19): testFailWriteReadEmptyOutOfBounds() (duration: 0 ms, consumedGas: 35554)
✘ Failed(20): testFailWriteReadCustomStartBoundOutOfRange(bytes,uint256,bytes) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(21): testFailWriteReadCustomBoundsOutOfRange(bytes,uint256,uint256,bytes) (duration: 18 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(22): testFailReadInvalidPointerCustomStartBound(address,uint256,bytes) (duration: 19 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(23): testFailReadInvalidPointerCustomStartBound() (duration: 0 ms, consumedGas: 3283)
✘ Failed(24): testFailReadInvalidPointerCustomBounds(address,uint256,uint256,bytes) (duration: 15 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(25): testFailReadInvalidPointerCustomBounds() (duration: 0 ms, consumedGas: 3518)
✘ Failed(26): testFailReadInvalidPointer(address,bytes) (duration: 3 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(27): testFailReadInvalidPointer() (duration: 0 ms, consumedGas: 3012)
✘ Suite Failed: 20 tests, 9 passed, 11 failed, 0 skipped (duration: 29 ms)

Ran 121 tests for src/test/SafeCastLib.t.sol:SafeCastLibTest (v0.8.15)
✔ Passed: testSafeCastTo96(uint256) (duration: 8 ms, runs: 256, meanGas: 3717, medianGas: 3717)
✔ Passed: testSafeCastTo96() (duration: 0 ms, consumedGas: 558)
✔ Passed: testSafeCastTo88(uint256) (duration: 11 ms, runs: 256, meanGas: 3672, medianGas: 3672)
✔ Passed: testSafeCastTo80(uint256) (duration: 13 ms, runs: 256, meanGas: 3653, medianGas: 3653)
✔ Passed: testSafeCastTo8(uint256) (duration: 20 ms, runs: 256, meanGas: 3672, medianGas: 3672)
✔ Passed: testSafeCastTo8() (duration: 0 ms, consumedGas: 535)
✔ Passed: testSafeCastTo72(uint256) (duration: 19 ms, runs: 256, meanGas: 3715, medianGas: 3715)
✔ Passed: testSafeCastTo64(uint256) (duration: 13 ms, runs: 256, meanGas: 3716, medianGas: 3716)
✔ Passed: testSafeCastTo64() (duration: 0 ms, consumedGas: 559)
✔ Passed: testSafeCastTo56(uint256) (duration: 8 ms, runs: 256, meanGas: 3718, medianGas: 3718)
✔ Passed: testSafeCastTo56() (duration: 0 ms, consumedGas: 492)
✔ Passed: testSafeCastTo48(uint256) (duration: 8 ms, runs: 256, meanGas: 3695, medianGas: 3695)
✔ Passed: testSafeCastTo48() (duration: 0 ms, consumedGas: 491)
✔ Passed: testSafeCastTo40(uint256) (duration: 15 ms, runs: 256, meanGas: 3673, medianGas: 3673)
✔ Passed: testSafeCastTo40() (duration: 0 ms, consumedGas: 539)
✔ Passed: testSafeCastTo32(uint256) (duration: 18 ms, runs: 256, meanGas: 3694, medianGas: 3694)
✔ Passed: testSafeCastTo32() (duration: 0 ms, consumedGas: 538)
✔ Passed: testSafeCastTo248(uint256) (duration: 8 ms, runs: 256, meanGas: 3694, medianGas: 3694)
✔ Passed: testSafeCastTo248() (duration: 0 ms, consumedGas: 494)
✔ Passed: testSafeCastTo240(uint256) (duration: 15 ms, runs: 256, meanGas: 3717, medianGas: 3717)
✔ Passed: testSafeCastTo240() (duration: 0 ms, consumedGas: 535)
✔ Passed: testSafeCastTo24(uint256) (duration: 40 ms, runs: 256, meanGas: 3650, medianGas: 3650)
✔ Passed: testSafeCastTo24() (duration: 0 ms, consumedGas: 537)
✔ Passed: testSafeCastTo232(uint256) (duration: 14 ms, runs: 256, meanGas: 3652, medianGas: 3652)
✔ Passed: testSafeCastTo232() (duration: 0 ms, consumedGas: 514)
✔ Passed: testSafeCastTo224(uint256) (duration: 24 ms, runs: 256, meanGas: 3650, medianGas: 3650)
✔ Passed: testSafeCastTo224() (duration: 0 ms, consumedGas: 491)
✔ Passed: testSafeCastTo216(uint256) (duration: 29 ms, runs: 256, meanGas: 3694, medianGas: 3694)
✔ Passed: testSafeCastTo216() (duration: 0 ms, consumedGas: 515)
✔ Passed: testSafeCastTo208(uint256) (duration: 8 ms, runs: 256, meanGas: 3673, medianGas: 3673)
✔ Passed: testSafeCastTo208() (duration: 0 ms, consumedGas: 494)
✔ Passed: testSafeCastTo200(uint256) (duration: 8 ms, runs: 256, meanGas: 3651, medianGas: 3651)
✔ Passed: testSafeCastTo200() (duration: 0 ms, consumedGas: 492)
✔ Passed: testSafeCastTo192(uint256) (duration: 8 ms, runs: 256, meanGas: 3651, medianGas: 3651)
✔ Passed: testSafeCastTo192() (duration: 0 ms, consumedGas: 516)
✔ Passed: testSafeCastTo184(uint256) (duration: 8 ms, runs: 256, meanGas: 3718, medianGas: 3718)
✔ Passed: testSafeCastTo184() (duration: 0 ms, consumedGas: 535)
✔ Passed: testSafeCastTo176(uint256) (duration: 12 ms, runs: 256, meanGas: 3651, medianGas: 3651)
✔ Passed: testSafeCastTo176() (duration: 0 ms, consumedGas: 515)
✔ Passed: testSafeCastTo168(uint256) (duration: 8 ms, runs: 256, meanGas: 3716, medianGas: 3716)
✔ Passed: testSafeCastTo168() (duration: 0 ms, consumedGas: 516)
✔ Passed: testSafeCastTo160(uint256) (duration: 8 ms, runs: 256, meanGas: 3692, medianGas: 3692)
✔ Passed: testSafeCastTo160() (duration: 0 ms, consumedGas: 513)
✔ Passed: testSafeCastTo16(uint256) (duration: 8 ms, runs: 256, meanGas: 3696, medianGas: 3696)
✔ Passed: testSafeCastTo16() (duration: 0 ms, consumedGas: 491)
✔ Passed: testSafeCastTo152(uint256) (duration: 8 ms, runs: 256, meanGas: 3651, medianGas: 3651)
✔ Passed: testSafeCastTo152() (duration: 0 ms, consumedGas: 516)
✔ Passed: testSafeCastTo144(uint256) (duration: 22 ms, runs: 256, meanGas: 3715, medianGas: 3715)
✔ Passed: testSafeCastTo144() (duration: 0 ms, consumedGas: 536)
✔ Passed: testSafeCastTo136(uint256) (duration: 8 ms, runs: 256, meanGas: 3674, medianGas: 3674)
✔ Passed: testSafeCastTo136() (duration: 0 ms, consumedGas: 492)
✔ Passed: testSafeCastTo128(uint256) (duration: 8 ms, runs: 256, meanGas: 3652, medianGas: 3652)
✔ Passed: testSafeCastTo128() (duration: 0 ms, consumedGas: 538)
✔ Passed: testSafeCastTo120(uint256) (duration: 8 ms, runs: 256, meanGas: 3652, medianGas: 3652)
✔ Passed: testSafeCastTo120() (duration: 0 ms, consumedGas: 513)
✔ Passed: testSafeCastTo112(uint256) (duration: 8 ms, runs: 256, meanGas: 3672, medianGas: 3672)
✔ Passed: testSafeCastTo112() (duration: 0 ms, consumedGas: 491)
✔ Passed: testSafeCastTo104(uint256) (duration: 15 ms, runs: 256, meanGas: 3696, medianGas: 3696)
✔ Passed: testSafeCastTo104() (duration: 0 ms, consumedGas: 537)
✘ Failed(28): testFailSafeCastTo96(uint256) (duration: 6 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(29): testFailSafeCastTo96() (duration: 0 ms, consumedGas: 465)
✘ Failed(30): testFailSafeCastTo88(uint256) (duration: 0 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(31): testFailSafeCastTo88() (duration: 0 ms, consumedGas: 443)
✘ Failed(32): testFailSafeCastTo80(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(33): testFailSafeCastTo80() (duration: 0 ms, consumedGas: 442)
✘ Failed(34): testFailSafeCastTo8(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(35): testFailSafeCastTo8() (duration: 0 ms, consumedGas: 443)
✘ Failed(36): testFailSafeCastTo72(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(37): testFailSafeCastTo72() (duration: 0 ms, consumedGas: 509)
✘ Failed(38): testFailSafeCastTo64(uint256) (duration: 0 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(39): testFailSafeCastTo64() (duration: 0 ms, consumedGas: 509)
✘ Failed(40): testFailSafeCastTo56(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(41): testFailSafeCastTo56() (duration: 0 ms, consumedGas: 487)
✘ Failed(42): testFailSafeCastTo48(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(43): testFailSafeCastTo48() (duration: 0 ms, consumedGas: 465)
✘ Failed(44): testFailSafeCastTo40(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(45): testFailSafeCastTo40() (duration: 0 ms, consumedGas: 465)
✘ Failed(46): testFailSafeCastTo32(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(47): testFailSafeCastTo32() (duration: 0 ms, consumedGas: 463)
✘ Failed(48): testFailSafeCastTo248(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(49): testFailSafeCastTo248() (duration: 0 ms, consumedGas: 464)
✘ Failed(50): testFailSafeCastTo240(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(51): testFailSafeCastTo240() (duration: 0 ms, consumedGas: 463)
✘ Failed(52): testFailSafeCastTo24(uint256) (duration: 12 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(53): testFailSafeCastTo24() (duration: 0 ms, consumedGas: 486)
✘ Failed(54): testFailSafeCastTo232(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(55): testFailSafeCastTo232() (duration: 0 ms, consumedGas: 509)
✘ Failed(56): testFailSafeCastTo224(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(57): testFailSafeCastTo224() (duration: 0 ms, consumedGas: 508)
✘ Failed(58): testFailSafeCastTo216(uint256) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(59): testFailSafeCastTo216() (duration: 0 ms, consumedGas: 464)
✘ Failed(60): testFailSafeCastTo208(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(61): testFailSafeCastTo208() (duration: 0 ms, consumedGas: 485)
✘ Failed(62): testFailSafeCastTo200(uint256) (duration: 19 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(63): testFailSafeCastTo200() (duration: 0 ms, consumedGas: 442)
✘ Failed(64): testFailSafeCastTo192(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(65): testFailSafeCastTo192() (duration: 0 ms, consumedGas: 466)
✘ Failed(66): testFailSafeCastTo184(uint256) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(67): testFailSafeCastTo184() (duration: 0 ms, consumedGas: 442)
✘ Failed(68): testFailSafeCastTo176(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(69): testFailSafeCastTo176() (duration: 0 ms, consumedGas: 462)
✘ Failed(70): testFailSafeCastTo168(uint256) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(71): testFailSafeCastTo168() (duration: 0 ms, consumedGas: 440)
✘ Failed(72): testFailSafeCastTo160(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(73): testFailSafeCastTo160() (duration: 0 ms, consumedGas: 508)
✘ Failed(74): testFailSafeCastTo16(uint256) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(75): testFailSafeCastTo16() (duration: 0 ms, consumedGas: 487)
✘ Failed(76): testFailSafeCastTo152(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(77): testFailSafeCastTo152() (duration: 0 ms, consumedGas: 467)
✘ Failed(78): testFailSafeCastTo144(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(79): testFailSafeCastTo144() (duration: 0 ms, consumedGas: 464)
✘ Failed(80): testFailSafeCastTo136(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(81): testFailSafeCastTo136() (duration: 0 ms, consumedGas: 508)
✘ Failed(82): testFailSafeCastTo128(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(83): testFailSafeCastTo128() (duration: 0 ms, consumedGas: 464)
✘ Failed(84): testFailSafeCastTo120(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(85): testFailSafeCastTo120() (duration: 0 ms, consumedGas: 508)
✘ Failed(86): testFailSafeCastTo112(uint256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(87): testFailSafeCastTo112() (duration: 0 ms, consumedGas: 487)
✘ Failed(88): testFailSafeCastTo104(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(89): testFailSafeCastTo104() (duration: 0 ms, consumedGas: 486)
✘ Suite Failed: 121 tests, 59 passed, 62 failed, 0 skipped (duration: 88 ms)

Ran 55 tests for src/test/SafeTransferLib.t.sol:SafeTransferLibTest (v0.8.15)
✔ Passed: testTransferWithStandardERC20(address,uint256,bytes) (duration: 43 ms, runs: 256, meanGas: 39841, medianGas: 40139)
✔ Passed: testTransferWithStandardERC20() (duration: 0 ms, consumedGas: 38907)
✔ Passed: testTransferWithReturnsTooMuch(address,uint256,bytes) (duration: 37 ms, runs: 256, meanGas: 40114, medianGas: 40343)
✔ Passed: testTransferWithReturnsTooMuch() (duration: 0 ms, consumedGas: 39155)
✔ Passed: testTransferWithMissingReturn(address,uint256,bytes) (duration: 32 ms, runs: 256, meanGas: 39808, medianGas: 40125)
✔ Passed: testTransferWithMissingReturn() (duration: 0 ms, consumedGas: 38915)
✔ Passed: testTransferWithGarbage(address,uint256,bytes,bytes) (duration: 10 ms, runs: 256, meanGas: 4153, medianGas: 2876)
✔ Passed: testTransferFromWithStandardERC20(address,address,uint256,bytes) (duration: 43 ms, runs: 256, meanGas: 51939, medianGas: 52677)
✔ Passed: testTransferFromWithStandardERC20() (duration: 0 ms, consumedGas: 51857)
✔ Passed: testTransferFromWithReturnsTooMuch(address,address,uint256,bytes) (duration: 25 ms, runs: 256, meanGas: 54525, medianGas: 54700)
✔ Passed: testTransferFromWithReturnsTooMuch() (duration: 0 ms, consumedGas: 53845)
✔ Passed: testTransferFromWithMissingReturn(address,address,uint256,bytes) (duration: 21 ms, runs: 256, meanGas: 53826, medianGas: 54090)
✔ Passed: testTransferFromWithMissingReturn() (duration: 0 ms, consumedGas: 53334)
✔ Passed: testTransferFromWithGarbage(address,address,uint256,bytes,bytes) (duration: 11 ms, runs: 256, meanGas: 3942, medianGas: 3117)
✔ Passed: testTransferETH(address,uint256,bytes) (duration: 10 ms, runs: 256, meanGas: 38763, medianGas: 39028)
✔ Passed: testTransferETH() (duration: 0 ms, consumedGas: 34592)
✘ Failed(90): testFailTransferWithReverting(address,uint256,bytes) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(91): testFailTransferWithReverting() (duration: 0 ms, consumedGas: 9703)
✘ Failed(92): testFailTransferWithReturnsTwo(address,uint256,bytes) (duration: 11 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(93): testFailTransferWithReturnsTooLittle(address,uint256,bytes) (duration: 6 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(94): testFailTransferWithReturnsTooLittle() (duration: 0 ms, consumedGas: 9832)
✘ Failed(95): testFailTransferWithReturnsFalse(address,uint256,bytes) (duration: 22 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(96): testFailTransferWithReturnsFalse() (duration: 0 ms, consumedGas: 9982)
✘ Failed(97): testFailTransferWithNonContract(address,address,uint256,bytes) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(98): testFailTransferWithNonContract() (duration: 0 ms, consumedGas: 3413)
✘ Failed(99): testFailTransferWithGarbage(address,uint256,bytes,bytes) (duration: 28 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(100): testFailTransferFromWithReverting(address,address,uint256,bytes) (duration: 22 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(101): testFailTransferFromWithReverting() (duration: 0 ms, consumedGas: 12201)
✘ Failed(102): testFailTransferFromWithReturnsTwo(address,address,uint256,bytes) (duration: 24 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(103): testFailTransferFromWithReturnsTooLittle(address,address,uint256,bytes) (duration: 32 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(104): testFailTransferFromWithReturnsTooLittle() (duration: 0 ms, consumedGas: 17380)
✘ Failed(105): testFailTransferFromWithReturnsFalse(address,address,uint256,bytes) (duration: 24 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(106): testFailTransferFromWithReturnsFalse() (duration: 0 ms, consumedGas: 17745)
✘ Failed(107): testFailTransferFromWithNonContract(address,address,address,uint256,bytes) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(108): testFailTransferFromWithNonContract() (duration: 0 ms, consumedGas: 3458)
✘ Failed(109): testFailTransferFromWithGarbage(address,address,uint256,bytes,bytes) (duration: 37 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(110): testFailTransferETHToContractWithoutFallback(uint256,bytes) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(111): testFailTransferETHToContractWithoutFallback() (duration: 0 ms, consumedGas: 7432)
✘ Failed(112): testFailApproveWithReverting(address,uint256,bytes) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(113): testFailApproveWithReverting() (duration: 0 ms, consumedGas: 6074)
✘ Failed(114): testFailApproveWithReturnsTwo(address,uint256,bytes) (duration: 17 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(115): testFailApproveWithReturnsTooLittle(address,uint256,bytes) (duration: 5 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(116): testFailApproveWithReturnsTooLittle() (duration: 0 ms, consumedGas: 6225)
✘ Failed(117): testFailApproveWithReturnsFalse(address,uint256,bytes) (duration: 23 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(118): testFailApproveWithReturnsFalse() (duration: 0 ms, consumedGas: 6418)
✘ Failed(119): testFailApproveWithNonContract(address,address,uint256,bytes) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(120): testFailApproveWithNonContract() (duration: 0 ms, consumedGas: 3435)
✘ Failed(121): testFailApproveWithGarbage(address,uint256,bytes,bytes) (duration: 51 ms, runs: 0, meanGas: 0, medianGas: 0)
✔ Passed: testApproveWithStandardERC20(address,uint256,bytes) (duration: 14 ms, runs: 256, meanGas: 33360, medianGas: 33665)
✔ Passed: testApproveWithStandardERC20() (duration: 0 ms, consumedGas: 32436)
✔ Passed: testApproveWithReturnsTooMuch(address,uint256,bytes) (duration: 39 ms, runs: 256, meanGas: 33213, medianGas: 33828)
✔ Passed: testApproveWithReturnsTooMuch() (duration: 0 ms, consumedGas: 32577)
✔ Passed: testApproveWithMissingReturn(address,uint256,bytes) (duration: 34 ms, runs: 256, meanGas: 33429, medianGas: 33501)
✔ Passed: testApproveWithMissingReturn() (duration: 0 ms, consumedGas: 32313)
✔ Passed: testApproveWithGarbage(address,uint256,bytes,bytes) (duration: 11 ms, runs: 256, meanGas: 3688, medianGas: 2876)
✘ Suite Failed: 55 tests, 23 passed, 32 failed, 0 skipped (duration: 113 ms)

Ran 7 tests for src/test/SignedWadMath.t.sol:SignedWadMathTest (v0.8.15)
✔ Passed: testWadMul(uint256,uint256,bool,bool) (duration: 11 ms, runs: 256, meanGas: 8011, medianGas: 8020)
✔ Passed: testWadDiv(uint256,uint256,bool,bool) (duration: 12 ms, runs: 256, meanGas: 7973, medianGas: 7974)
✘ Failed(122): testFailWadMulOverflow(int256,int256) (duration: 3 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(123): testFailWadMulEdgeCase2() (duration: 0 ms, consumedGas: 336)
✘ Failed(124): testFailWadMulEdgeCase() (duration: 0 ms, consumedGas: 335)
✘ Failed(125): testFailWadDivZeroDenominator(int256) (duration: 2 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(126): testFailWadDivOverflow(int256,int256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Suite Failed: 7 tests, 2 passed, 5 failed, 0 skipped (duration: 14 ms)

Ran 17 tests for src/test/ERC4626.t.sol:ERC4626Test (v0.8.15)
✔ Passed: testWithdrawZero() (duration: 0 ms, consumedGas: 58476)
✔ Passed: testVaultInteractionsForSomeoneElse() (duration: 0 ms, consumedGas: 307526)
✔ Passed: testSingleMintRedeem(uint128) (duration: 131 ms, runs: 256, meanGas: 219115, medianGas: 219120)
✔ Passed: testSingleDepositWithdraw(uint128) (duration: 104 ms, runs: 256, meanGas: 219155, medianGas: 219164)
✔ Passed: testMultipleMintDepositRedeemWithdraw() (duration: 15 ms, consumedGas: 499708)
✔ Passed: testMintZero() (duration: 0 ms, consumedGas: 60701)
✔ Passed: testMetadata(string,string) (duration: 73 ms, runs: 256, meanGas: 2342420, medianGas: 2341109)
✘ Failed(127): testFailWithdrawWithNotEnoughUnderlyingAmount() (duration: 0 ms, consumedGas: 210484)
✘ Failed(128): testFailWithdrawWithNoUnderlyingAmount() (duration: 0 ms, consumedGas: 33502)
✘ Failed(129): testFailRedeemZero() (duration: 0 ms, consumedGas: 9186)
✘ Failed(130): testFailRedeemWithNotEnoughShareAmount() (duration: 0 ms, consumedGas: 210479)
✘ Failed(131): testFailRedeemWithNoShareAmount() (duration: 0 ms, consumedGas: 33524)
✘ Failed(132): testFailMintWithNoApproval() (duration: 0 ms, consumedGas: 14884)
✘ Failed(133): testFailDepositZero() (duration: 0 ms, consumedGas: 8696)
✘ Failed(134): testFailDepositWithNotEnoughApproval() (duration: 0 ms, consumedGas: 91746)
✘ Failed(135): testFailDepositWithNoApproval() (duration: 0 ms, consumedGas: 14903)
✔ Passed: invariantMetadata() (duration: 9639 ms, runs: 256, calls: 128000, reverts: 98834)
✘ Suite Failed: 17 tests, 8 passed, 9 failed, 0 skipped (duration: 11290 ms)

Ran 27 tests for src/test/ERC6909.t.sol:ERC6909Test (v0.8.15)
✔ Passed: testTransferFromWithInfiniteApproval(address,address,uint256,uint256,uint256) (duration: 25 ms, runs: 256, meanGas: 102342, medianGas: 103599)
✔ Passed: testTransferFromWithInfiniteApproval() (duration: 0 ms, consumedGas: 100332)
✔ Passed: testTransferFromWithApproval(address,address,uint256,uint256,uint256) (duration: 39 ms, runs: 256, meanGas: 102713, medianGas: 104325)
✔ Passed: testTransferFromWithApproval() (duration: 0 ms, consumedGas: 100998)
✔ Passed: testTransferFromAsOperator(address,address,uint256,uint256,uint256) (duration: 37 ms, runs: 256, meanGas: 96620, medianGas: 97950)
✔ Passed: testTransferFromAsOperator() (duration: 0 ms, consumedGas: 94469)
✔ Passed: testTransfer(address,address,uint256,uint256,uint256) (duration: 36 ms, runs: 256, meanGas: 69611, medianGas: 71014)
✔ Passed: testTransfer() (duration: 0 ms, consumedGas: 67586)
✔ Passed: testSetOperator(address,bool) (duration: 26 ms, runs: 256, meanGas: 22824, medianGas: 13749)
✔ Passed: testSetOperator() (duration: 0 ms, consumedGas: 33045)
✔ Passed: testMint(address,uint256,uint256) (duration: 11 ms, runs: 256, meanGas: 34345, medianGas: 34423)
✔ Passed: testMint() (duration: 0 ms, consumedGas: 34135)
✘ Failed(136): testFailTransferFromNotAuthorized(address,address,uint256,uint256) (duration: 9 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(137): testFailTransferFromNotAuthorized() (duration: 0 ms, consumedGas: 39235)
✘ Failed(138): testFailTransferFromBalanceUnderflow(address,address,uint256,uint256) (duration: 20 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(139): testFailTransferFromBalanceUnderflow() (duration: 0 ms, consumedGas: 12609)
✘ Failed(140): testFailTransferFromBalanceOverflow(address,address,uint256,uint256) (duration: 56 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(141): testFailTransferFromBalanceOverflow() (duration: 0 ms, consumedGas: 92612)
✘ Failed(142): testFailTransferBalanceUnderflow(address,address,uint256,uint256) (duration: 12 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(143): testFailTransferBalanceUnderflow() (duration: 0 ms, consumedGas: 12588)
✘ Failed(144): testFailTransferBalanceOverflow(address,address,uint256,uint256) (duration: 21 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(145): testFailTransferBalanceOverflow() (duration: 0 ms, consumedGas: 92656)
✘ Failed(146): testFailMintBalanceOverflow() (duration: 0 ms, consumedGas: 34392)
✔ Passed: testBurn(address,uint256,uint256) (duration: 14 ms, runs: 256, meanGas: 27101, medianGas: 27268)
✔ Passed: testBurn() (duration: 0 ms, consumedGas: 39491)
✔ Passed: testApprove(address,uint256,uint256) (duration: 12 ms, runs: 256, meanGas: 34213, medianGas: 34680)
✔ Passed: testApprove() (duration: 0 ms, consumedGas: 34414)
✘ Suite Failed: 27 tests, 16 passed, 11 failed, 0 skipped (duration: 11274 ms)

Ran 1 tests for src/test/WETH.t.sol:WETHTester (v0.8.15)
✘ Failed(147): setUp() (duration: 0 ms, consumedGas: 0)
✘ Suite Failed: 1 tests, 0 passed, 1 failed, 0 skipped (duration: 0 ms)

Ran 30 tests for src/test/ERC20.t.sol:ERC20Test (v0.8.15)
✔ Passed: testTransferFrom(address,uint256,uint256) (duration: 43 ms, runs: 256, meanGas: 99388, medianGas: 100524)
✔ Passed: testTransferFrom() (duration: 0 ms, consumedGas: 89228)
✔ Passed: testTransfer(address,uint256) (duration: 31 ms, runs: 256, meanGas: 63776, medianGas: 64554)
✔ Passed: testTransfer() (duration: 0 ms, consumedGas: 64292)
✔ Passed: testPermit(uint248,address,uint256,uint256) (duration: 219 ms, runs: 256, meanGas: 71363, medianGas: 71519)
✔ Passed: testPermit() (duration: 0 ms, consumedGas: 70868)
✔ Passed: testMint(address,uint256) (duration: 27 ms, runs: 256, meanGas: 55644, medianGas: 56111)
✔ Passed: testMint() (duration: 0 ms, consumedGas: 55780)
✔ Passed: testMetadata(string,string,uint8) (duration: 63 ms, runs: 256, meanGas: 1325877, medianGas: 1327704)
✔ Passed: testInfiniteApproveTransferFrom() (duration: 0 ms, consumedGas: 96335)
✘ Failed(148): testFailTransferInsufficientBalance(address,uint256,uint256) (duration: 17 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(149): testFailTransferInsufficientBalance() (duration: 0 ms, consumedGas: 54728)
✘ Failed(150): testFailTransferFromInsufficientBalance(address,uint256,uint256) (duration: 24 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(151): testFailTransferFromInsufficientBalance() (duration: 0 ms, consumedGas: 85129)
✘ Failed(152): testFailTransferFromInsufficientAllowance(address,uint256,uint256) (duration: 68 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(153): testFailTransferFromInsufficientAllowance() (duration: 0 ms, consumedGas: 84471)
✘ Failed(154): testFailPermitReplay(uint256,address,uint256,uint256) (duration: 679 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(155): testFailPermitReplay() (duration: 0 ms, consumedGas: 75919)
✘ Failed(156): testFailPermitPastDeadline(uint256,address,uint256,uint256) (duration: 348 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(157): testFailPermitPastDeadline() (duration: 0 ms, consumedGas: 16096)
✘ Failed(158): testFailPermitBadNonce(uint256,address,uint256,uint256,uint256) (duration: 646 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(159): testFailPermitBadNonce() (duration: 6 ms, consumedGas: 42979)
✘ Failed(160): testFailPermitBadDeadline(uint256,address,uint256,uint256) (duration: 467 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(161): testFailPermitBadDeadline() (duration: 0 ms, consumedGas: 43107)
✘ Failed(162): testFailBurnInsufficientBalance(address,uint256,uint256) (duration: 11 ms, runs: 0, meanGas: 0, medianGas: 0)
✔ Passed: testBurn(address,uint256,uint256) (duration: 36 ms, runs: 256, meanGas: 63476, medianGas: 63862)
✔ Passed: testBurn() (duration: 0 ms, consumedGas: 60037)
✔ Passed: testApprove(address,uint256) (duration: 11 ms, runs: 256, meanGas: 33421, medianGas: 33577)
✔ Passed: testApprove() (duration: 0 ms, consumedGas: 33158)
✔ Passed: invariantMetadata() (duration: 9760 ms, runs: 256, calls: 128000, reverts: 86369)
✘ Suite Failed: 30 tests, 15 passed, 15 failed, 0 skipped (duration: 11290 ms)

Ran 76 tests for src/test/ERC1155.t.sol:ERC1155Test (v0.8.15)
✔ Passed: testSafeTransferFromToERC1155Recipient(uint256,uint256,bytes,uint256,bytes) (duration: 71 ms, runs: 256, meanGas: 1055882, medianGas: 1048008)
✔ Passed: testSafeTransferFromToERC1155Recipient() (duration: 0 ms, consumedGas: 1020962)
✔ Passed: testSafeTransferFromToEOA(uint256,uint256,bytes,uint256,address,bytes) (duration: 50 ms, runs: 256, meanGas: 104239, medianGas: 105858)
✔ Passed: testSafeTransferFromToEOA() (duration: 0 ms, consumedGas: 100372)
✔ Passed: testSafeTransferFromSelf(uint256,uint256,bytes,uint256,address,bytes) (duration: 26 ms, runs: 256, meanGas: 76016, medianGas: 77333)
✔ Passed: testSafeTransferFromSelf() (duration: 0 ms, consumedGas: 71757)
✔ Passed: testSafeBatchTransferFromToERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes) (duration: 1432 ms, runs: 256, meanGas: 10363577, medianGas: 8846837)
✔ Passed: testSafeBatchTransferFromToERC1155Recipient() (duration: 0 ms, consumedGas: 1477971)
✔ Passed: testSafeBatchTransferFromToEOA(address,uint256[],uint256[],uint256[],bytes,bytes) (duration: 1488 ms, runs: 256, meanGas: 6590934, medianGas: 5706942)
✔ Passed: testSafeBatchTransferFromToEOA() (duration: 0 ms, consumedGas: 321718)
✔ Passed: testMintToERC1155Recipient(uint256,uint256,bytes) (duration: 76 ms, runs: 256, meanGas: 971347, medianGas: 961752)
✔ Passed: testMintToERC1155Recipient() (duration: 0 ms, consumedGas: 938687)
✔ Passed: testMintToEOA(address,uint256,uint256,bytes) (duration: 25 ms, runs: 256, meanGas: 39080, medianGas: 39255)
✔ Passed: testMintToEOA() (duration: 0 ms, consumedGas: 37807)
✘ Failed(163): testFailSafeTransferFromToZero(uint256,uint256,uint256,bytes,bytes) (duration: 31 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(164): testFailSafeTransferFromToZero() (duration: 0 ms, consumedGas: 65207)
✘ Failed(165): testFailSafeTransferFromToWrongReturnDataERC1155Recipient(uint256,uint256,uint256,bytes,bytes) (duration: 89 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(166): testFailSafeTransferFromToWrongReturnDataERC1155Recipient() (duration: 0 ms, consumedGas: 312696)
✘ Failed(167): testFailSafeTransferFromToRevertingERC1155Recipient(uint256,uint256,uint256,bytes,bytes) (duration: 62 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(168): testFailSafeTransferFromToRevertingERC1155Recipient() (duration: 0 ms, consumedGas: 393492)
✘ Failed(169): testFailSafeTransferFromToNonERC155Recipient(uint256,uint256,uint256,bytes,bytes) (duration: 27 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(170): testFailSafeTransferFromToNonERC155Recipient() (duration: 0 ms, consumedGas: 110811)
✘ Failed(171): testFailSafeTransferFromSelfInsufficientBalance(address,uint256,uint256,uint256,bytes,bytes) (duration: 57 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(172): testFailSafeTransferFromSelfInsufficientBalance() (duration: 0 ms, consumedGas: 39466)
✘ Failed(173): testFailSafeTransferFromInsufficientBalance(address,uint256,uint256,uint256,bytes,bytes) (duration: 49 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(174): testFailSafeTransferFromInsufficientBalance() (duration: 0 ms, consumedGas: 67945)
✘ Failed(175): testFailSafeBatchTransferInsufficientBalance(address,uint256[],uint256[],uint256[],bytes,bytes) (duration: 229 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(176): testFailSafeBatchTransferInsufficientBalance() (duration: 0 ms, consumedGas: 175547)
✘ Failed(177): testFailSafeBatchTransferFromWithArrayLengthMismatch(address,uint256[],uint256[],uint256[],bytes,bytes) (duration: 514 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(178): testFailSafeBatchTransferFromWithArrayLengthMismatch() (duration: 0 ms, consumedGas: 174537)
✘ Failed(179): testFailSafeBatchTransferFromToZero(uint256[],uint256[],uint256[],bytes,bytes) (duration: 766 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(180): testFailSafeBatchTransferFromToZero() (duration: 0 ms, consumedGas: 297891)
✘ Failed(181): testFailSafeBatchTransferFromToWrongReturnDataERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes) (duration: 847 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(182): testFailSafeBatchTransferFromToWrongReturnDataERC1155Recipient() (duration: 0 ms, consumedGas: 545772)
✘ Failed(183): testFailSafeBatchTransferFromToRevertingERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes) (duration: 269 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(184): testFailSafeBatchTransferFromToRevertingERC1155Recipient() (duration: 0 ms, consumedGas: 626544)
✘ Failed(185): testFailSafeBatchTransferFromToNonERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes) (duration: 248 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(186): testFailSafeBatchTransferFromToNonERC1155Recipient() (duration: 0 ms, consumedGas: 343828)
✘ Failed(187): testFailMintToZero(uint256,uint256,bytes) (duration: 25 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(188): testFailMintToZero() (duration: 0 ms, consumedGas: 33382)
✘ Failed(189): testFailMintToWrongReturnDataERC155Recipient(uint256,uint256,bytes) (duration: 37 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(190): testFailMintToWrongReturnDataERC155Recipient() (duration: 0 ms, consumedGas: 361696)
✘ Failed(191): testFailMintToRevertingERC155Recipient(uint256,uint256,bytes) (duration: 23 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(192): testFailMintToRevertingERC155Recipient() (duration: 0 ms, consumedGas: 361720)
✘ Failed(193): testFailMintToNonERC155Recipient(uint256,uint256,bytes) (duration: 14 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(194): testFailMintToNonERC155Recipient() (duration: 0 ms, consumedGas: 78994)
✘ Failed(195): testFailBurnInsufficientBalance(address,uint256,uint256,uint256,bytes) (duration: 14 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(196): testFailBurnInsufficientBalance() (duration: 0 ms, consumedGas: 38074)
✘ Failed(197): testFailBatchMintWithArrayMismatch(address,uint256[],uint256[],bytes) (duration: 170 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(198): testFailBatchMintWithArrayMismatch() (duration: 0 ms, consumedGas: 14489)
✘ Failed(199): testFailBatchMintToZero(uint256[],uint256[],bytes) (duration: 288 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(200): testFailBatchMintToZero() (duration: 0 ms, consumedGas: 137315)
✘ Failed(201): testFailBatchMintToWrongReturnDataERC1155Recipient(uint256[],uint256[],bytes) (duration: 15 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(202): testFailBatchMintToWrongReturnDataERC1155Recipient() (duration: 0 ms, consumedGas: 387946)
✘ Failed(203): testFailBatchMintToRevertingERC1155Recipient(uint256[],uint256[],bytes) (duration: 942 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(204): testFailBatchMintToRevertingERC1155Recipient() (duration: 0 ms, consumedGas: 468651)
✘ Failed(205): testFailBatchMintToNonERC1155Recipient(uint256[],uint256[],bytes) (duration: 792 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(206): testFailBatchMintToNonERC1155Recipient() (duration: 0 ms, consumedGas: 185951)
✘ Failed(207): testFailBatchBurnWithArrayLengthMismatch(address,uint256[],uint256[],uint256[],bytes) (duration: 193 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(208): testFailBatchBurnWithArrayLengthMismatch() (duration: 0 ms, consumedGas: 147858)
✘ Failed(209): testFailBatchBurnInsufficientBalance(address,uint256[],uint256[],uint256[],bytes) (duration: 705 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(210): testFailBatchBurnInsufficientBalance() (duration: 0 ms, consumedGas: 148678)
✘ Failed(211): testFailBalanceOfBatchWithArrayMismatch(address[],uint256[]) (duration: 114 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(212): testFailBalanceOfBatchWithArrayMismatch() (duration: 0 ms, consumedGas: 10635)
✔ Passed: testBurn(address,uint256,uint256,bytes,uint256) (duration: 35 ms, runs: 256, meanGas: 47400, medianGas: 47698)
✔ Passed: testBurn() (duration: 0 ms, consumedGas: 43141)
✔ Passed: testBatchMintToERC1155Recipient(uint256[],uint256[],bytes) (duration: 1390 ms, runs: 256, meanGas: 9118852, medianGas: 8090025)
✔ Passed: testBatchMintToERC1155Recipient() (duration: 0 ms, consumedGas: 1289501)
✔ Passed: testBatchMintToEOA(address,uint256[],uint256[],bytes) (duration: 1011 ms, runs: 256, meanGas: 4263605, medianGas: 3732282)
✔ Passed: testBatchMintToEOA() (duration: 0 ms, consumedGas: 150386)
✔ Passed: testBatchBurn(address,uint256[],uint256[],uint256[],bytes) (duration: 1374 ms, runs: 256, meanGas: 5396585, medianGas: 4485713)
✔ Passed: testBatchBurn() (duration: 0 ms, consumedGas: 171511)
✔ Passed: testBatchBalanceOf(address[],uint256[],uint256[],bytes) (duration: 1352 ms, runs: 256, meanGas: 3981606, medianGas: 2932993)
✔ Passed: testBatchBalanceOf() (duration: 0 ms, consumedGas: 173147)
✔ Passed: testApproveAll(address,bool) (duration: 23 ms, runs: 256, meanGas: 22952, medianGas: 13334)
✔ Passed: testApproveAll() (duration: 0 ms, consumedGas: 32697)
✘ Suite Failed: 76 tests, 26 passed, 50 failed, 0 skipped (duration: 11290 ms)

Ran 7 tests for src/test/WETH.t.sol:WETHTest (v0.8.15)
✔ Passed: testWithdraw(uint256,uint256) (duration: 16 ms, runs: 256, meanGas: 81506, medianGas: 82429)
✔ Passed: testWithdraw() (duration: 0 ms, consumedGas: 56270)
✔ Passed: testPartialWithdraw() (duration: 0 ms, consumedGas: 75798)
✔ Passed: testFallbackDeposit(uint256) (duration: 17 ms, runs: 256, meanGas: 68247, medianGas: 68974)
✔ Passed: testFallbackDeposit() (duration: 0 ms, consumedGas: 65683)
✔ Passed: testDeposit(uint256) (duration: 18 ms, runs: 256, meanGas: 68467, medianGas: 69194)
✔ Passed: testDeposit() (duration: 0 ms, consumedGas: 65992)
✔ Suite Passed: 7 tests, 7 passed, 0 failed, 0 skipped (duration: 18 ms)

Ran 1 tests for src/test/ERC20.t.sol:ERC20Invariants (v0.8.15)
✔ Passed: invariantBalanceSum() (duration: 12116 ms, runs: 256, calls: 128000, reverts: 77580)
✔ Suite Passed: 1 tests, 1 passed, 0 failed, 0 skipped (duration: 12139 ms)

Ran 77 tests for src/test/ERC721.t.sol:ERC721Test (v0.8.15)
✔ Passed: testTransferFromSelf(uint256,address) (duration: 40 ms, runs: 256, meanGas: 70131, medianGas: 70132)
✔ Passed: testTransferFromSelf() (duration: 0 ms, consumedGas: 70063)
✔ Passed: testTransferFromApproveAll(uint256,address) (duration: 39 ms, runs: 256, meanGas: 99284, medianGas: 99284)
✔ Passed: testTransferFromApproveAll() (duration: 0 ms, consumedGas: 99172)
✔ Passed: testTransferFrom(uint256,address) (duration: 29 ms, runs: 256, meanGas: 91372, medianGas: 91375)
✔ Passed: testTransferFrom() (duration: 0 ms, consumedGas: 91526)
✔ Passed: testSafeTransferFromToERC721RecipientWithData(uint256,bytes) (duration: 66 ms, runs: 256, meanGas: 712000, medianGas: 703915)
✔ Passed: testSafeTransferFromToERC721RecipientWithData() (duration: 0 ms, consumedGas: 681524)
✔ Passed: testSafeTransferFromToERC721Recipient(uint256) (duration: 42 ms, runs: 256, meanGas: 659925, medianGas: 660470)
✔ Passed: testSafeTransferFromToERC721Recipient() (duration: 0 ms, consumedGas: 660681)
✔ Passed: testSafeTransferFromToEOA(uint256,address) (duration: 22 ms, runs: 256, meanGas: 101810, medianGas: 102206)
✔ Passed: testSafeTransferFromToEOA() (duration: 0 ms, consumedGas: 101989)
✔ Passed: testSafeMintToERC721RecipientWithData(uint256,bytes) (duration: 48 ms, runs: 256, meanGas: 651956, medianGas: 642540)
✔ Passed: testSafeMintToERC721RecipientWithData() (duration: 0 ms, consumedGas: 619888)
✔ Passed: testSafeMintToERC721Recipient(uint256) (duration: 40 ms, runs: 256, meanGas: 598075, medianGas: 598309)
✔ Passed: testSafeMintToERC721Recipient() (duration: 0 ms, consumedGas: 598283)
✔ Passed: testSafeMintToEOA(uint256,address) (duration: 13 ms, runs: 256, meanGas: 59936, medianGas: 59936)
✔ Passed: testSafeMintToEOA() (duration: 0 ms, consumedGas: 59421)
✔ Passed: testMint(address,uint256) (duration: 16 ms, runs: 256, meanGas: 57024, medianGas: 57024)
✔ Passed: testMint() (duration: 0 ms, consumedGas: 56829)
✔ Passed: testMetadata(string,string) (duration: 77 ms, runs: 256, meanGas: 1913719, medianGas: 1914038)
✘ Failed(213): testFailTransferFromWrongFrom(address,address,address,uint256) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(214): testFailTransferFromWrongFrom() (duration: 0 ms, consumedGas: 55494)
✘ Failed(215): testFailTransferFromUnOwned(address,address,uint256) (duration: 18 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(216): testFailTransferFromUnOwned() (duration: 0 ms, consumedGas: 9209)
✘ Failed(217): testFailTransferFromToZero(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(218): testFailTransferFromToZero() (duration: 0 ms, consumedGas: 55572)
✘ Failed(219): testFailTransferFromNotOwner(address,address,uint256) (duration: 36 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(220): testFailTransferFromNotOwner() (duration: 0 ms, consumedGas: 60174)
✘ Failed(221): testFailSafeTransferFromToRevertingERC721RecipientWithData(uint256,bytes) (duration: 6 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(222): testFailSafeTransferFromToRevertingERC721RecipientWithData() (duration: 0 ms, consumedGas: 314350)
✘ Failed(223): testFailSafeTransferFromToRevertingERC721Recipient(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(224): testFailSafeTransferFromToRevertingERC721Recipient() (duration: 0 ms, consumedGas: 313877)
✘ Failed(225): testFailSafeTransferFromToNonERC721RecipientWithData(uint256,bytes) (duration: 9 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(226): testFailSafeTransferFromToNonERC721RecipientWithData() (duration: 0 ms, consumedGas: 128941)
✘ Failed(227): testFailSafeTransferFromToNonERC721Recipient(uint256) (duration: 6 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(228): testFailSafeTransferFromToNonERC721Recipient() (duration: 0 ms, consumedGas: 128306)
✘ Failed(229): testFailSafeTransferFromToERC721RecipientWithWrongReturnDataWithData(uint256,bytes) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(230): testFailSafeTransferFromToERC721RecipientWithWrongReturnDataWithData() (duration: 0 ms, consumedGas: 248882)
✘ Failed(231): testFailSafeTransferFromToERC721RecipientWithWrongReturnData(uint256) (duration: 3 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(232): testFailSafeTransferFromToERC721RecipientWithWrongReturnData() (duration: 0 ms, consumedGas: 248299)
✘ Failed(233): testFailSafeMintToRevertingERC721RecipientWithData(uint256,bytes) (duration: 23 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(234): testFailSafeMintToRevertingERC721RecipientWithData() (duration: 0 ms, consumedGas: 285567)
✘ Failed(235): testFailSafeMintToRevertingERC721Recipient(uint256) (duration: 9 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(236): testFailSafeMintToRevertingERC721Recipient() (duration: 0 ms, consumedGas: 284338)
✘ Failed(237): testFailSafeMintToNonERC721RecipientWithData(uint256,bytes) (duration: 25 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(238): testFailSafeMintToNonERC721RecipientWithData() (duration: 4 ms, consumedGas: 100070)
✘ Failed(239): testFailSafeMintToNonERC721Recipient(uint256) (duration: 3 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(240): testFailSafeMintToNonERC721Recipient() (duration: 0 ms, consumedGas: 98830)
✘ Failed(241): testFailSafeMintToERC721RecipientWithWrongReturnDataWithData(uint256,bytes) (duration: 4 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(242): testFailSafeMintToERC721RecipientWithWrongReturnDataWithData() (duration: 0 ms, consumedGas: 220036)
✘ Failed(243): testFailSafeMintToERC721RecipientWithWrongReturnData(uint256) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(244): testFailSafeMintToERC721RecipientWithWrongReturnData() (duration: 0 ms, consumedGas: 218826)
✘ Failed(245): testFailOwnerOfUnminted(uint256) (duration: 0 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(246): testFailOwnerOfUnminted() (duration: 0 ms, consumedGas: 8371)
✘ Failed(247): testFailMintToZero(uint256) (duration: 1 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(248): testFailMintToZero() (duration: 0 ms, consumedGas: 6712)
✘ Failed(249): testFailDoubleMint(uint256,address) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(250): testFailDoubleMint() (duration: 0 ms, consumedGas: 55182)
✘ Failed(251): testFailDoubleBurn(uint256,address) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(252): testFailDoubleBurn() (duration: 0 ms, consumedGas: 61302)
✘ Failed(253): testFailBurnUnMinted(uint256) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(254): testFailBurnUnMinted() (duration: 0 ms, consumedGas: 8608)
✘ Failed(255): testFailBalanceOfZeroAddress() (duration: 0 ms, consumedGas: 6117)
✘ Failed(256): testFailApproveUnMinted(uint256,address) (duration: 13 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(257): testFailApproveUnMinted() (duration: 0 ms, consumedGas: 11319)
✘ Failed(258): testFailApproveUnAuthorized(address,uint256,address) (duration: 25 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(259): testFailApproveUnAuthorized() (duration: 0 ms, consumedGas: 57606)
✔ Passed: testBurn(address,uint256) (duration: 37 ms, runs: 256, meanGas: 48847, medianGas: 48847)
✔ Passed: testBurn() (duration: 0 ms, consumedGas: 48814)
✔ Passed: testApproveBurn(address,uint256) (duration: 39 ms, runs: 256, meanGas: 69382, medianGas: 69439)
✔ Passed: testApproveBurn() (duration: 0 ms, consumedGas: 69612)
✔ Passed: testApproveAll(address,bool) (duration: 29 ms, runs: 256, meanGas: 23151, medianGas: 13533)
✔ Passed: testApproveAll() (duration: 0 ms, consumedGas: 32807)
✔ Passed: testApprove(address,uint256) (duration: 13 ms, runs: 256, meanGas: 81200, medianGas: 81200)
✔ Passed: testApprove() (duration: 0 ms, consumedGas: 81027)
✔ Passed: invariantMetadata() (duration: 13079 ms, runs: 256, calls: 128000, reverts: 72079)
✘ Suite Failed: 77 tests, 30 passed, 47 failed, 0 skipped (duration: 14823 ms)

Ran 27 tests for src/test/Auth.t.sol:AuthTest (v0.8.15)
✔ Passed: testTransferOwnershipWithPermissiveAuthority(address,address) (duration: 29 ms, runs: 256, meanGas: 182461, medianGas: 182480)
✔ Passed: testTransferOwnershipWithPermissiveAuthority() (duration: 0 ms, consumedGas: 179113)
✔ Passed: testTransferOwnershipAsOwner(address) (duration: 15 ms, runs: 256, meanGas: 16592, medianGas: 16592)
✔ Passed: testTransferOwnershipAsOwner() (duration: 0 ms, consumedGas: 16258)
✔ Passed: testSetAuthorityWithPermissiveAuthority(address,address) (duration: 21 ms, runs: 256, meanGas: 182749, medianGas: 182749)
✔ Passed: testSetAuthorityWithPermissiveAuthority() (duration: 0 ms, consumedGas: 177341)
✔ Passed: testSetAuthorityAsOwnerWithOutOfOrderAuthority() (duration: 0 ms, consumedGas: 336290)
✔ Passed: testSetAuthorityAsOwner(address) (duration: 10 ms, runs: 256, meanGas: 33884, medianGas: 33884)
✔ Passed: testSetAuthorityAsOwner() (duration: 0 ms, consumedGas: 33508)
✘ Failed(260): testFailTransferOwnershipWithRestrictiveAuthority(address,address) (duration: 34 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(261): testFailTransferOwnershipWithRestrictiveAuthority() (duration: 0 ms, consumedGas: 180721)
✘ Failed(262): testFailTransferOwnershipAsOwnerWithOutOfOrderAuthority(address) (duration: 8 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(263): testFailTransferOwnershipAsOwnerWithOutOfOrderAuthority() (duration: 0 ms, consumedGas: 199653)
✘ Failed(264): testFailTransferOwnershipAsNonOwner(address,address) (duration: 18 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(265): testFailTransferOwnershipAsNonOwner() (duration: 0 ms, consumedGas: 16905)
✘ Failed(266): testFailSetAuthorityWithRestrictiveAuthority(address,address) (duration: 15 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(267): testFailSetAuthorityWithRestrictiveAuthority() (duration: 0 ms, consumedGas: 180434)
✘ Failed(268): testFailSetAuthorityAsNonOwner(address,address) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(269): testFailSetAuthorityAsNonOwner() (duration: 0 ms, consumedGas: 17472)
✘ Failed(270): testFailCallFunctionWithRestrictiveAuthority(address) (duration: 31 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(271): testFailCallFunctionWithRestrictiveAuthority() (duration: 0 ms, consumedGas: 180080)
✘ Failed(272): testFailCallFunctionAsOwnerWithOutOfOrderAuthority() (duration: 0 ms, consumedGas: 199057)
✘ Failed(273): testFailCallFunctionAsNonOwner(address) (duration: 3 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(274): testFailCallFunctionAsNonOwner() (duration: 0 ms, consumedGas: 16351)
✔ Passed: testCallFunctionWithPermissiveAuthority(address) (duration: 17 ms, runs: 256, meanGas: 180188, medianGas: 180188)
✔ Passed: testCallFunctionWithPermissiveAuthority() (duration: 0 ms, consumedGas: 175065)
✔ Passed: testCallFunctionAsOwner() (duration: 0 ms, consumedGas: 29940)
✘ Suite Failed: 27 tests, 12 passed, 15 failed, 0 skipped (duration: 14856 ms)

Ran 7 tests for src/test/CREATE3.t.sol:CREATE3Test (v0.8.15)
✔ Passed: testPredictDeployERC20() (duration: 0 ms, consumedGas: 3519007)
✘ Failed(275): testFailDoubleDeploySameBytecode(bytes32,bytes) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(276): testFailDoubleDeploySameBytecode() (duration: 0 ms, consumedGas: 9079256848778909100)
✘ Failed(277): testFailDoubleDeployDifferentBytecode(bytes32,bytes,bytes) (duration: 7 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(278): testFailDoubleDeployDifferentBytecode() (duration: 0 ms, consumedGas: 9079256848778922637)
✔ Passed: testDeployERC20(bytes32,string,string,uint8) (duration: 111 ms, runs: 256, meanGas: 1411717, medianGas: 1411467)
✔ Passed: testDeployERC20() (duration: 0 ms, consumedGas: 1364646)
✘ Suite Failed: 7 tests, 3 passed, 4 failed, 0 skipped (duration: 14855 ms)

Ran 6 tests for src/test/DSTestPlus.t.sol:DSTestPlusTest (v0.8.15)
✔ Passed: testRelApproxEqBothZeroesPasses() (duration: 0 ms, consumedGas: 449)
✘ Failed(279): testFailBoundMinBiggerThanMax(uint256,uint256,uint256) (duration: 18 ms, runs: 0, meanGas: 0, medianGas: 0)
✘ Failed(280): testFailBoundMinBiggerThanMax() (duration: 0 ms, consumedGas: 509)
✔ Passed: testBrutalizeMemory() (duration: 0 ms, consumedGas: 858)
✔ Passed: testBound(uint256,uint256,uint256) (duration: 29 ms, runs: 256, meanGas: 3996, medianGas: 3986)
✔ Passed: testBound() (duration: 0 ms, consumedGas: 18571)
✘ Suite Failed: 6 tests, 4 passed, 2 failed, 0 skipped (duration: 14855 ms)

Ran 1 tests for src/test/WETH.t.sol:WETHInvariants (v0.8.15)
✔ Passed: invariantTotalSupplyEqualsBalance() (duration: 12656 ms, runs: 256, calls: 128000, reverts: 54121)
✔ Suite Passed: 1 tests, 1 passed, 0 failed, 0 skipped (duration: 12658 ms)

✘ Run Failed: 570 tests, 290 passed, 280 failed, 0 skipped (duration: 140235 ms)

Failure (1): setUp()
Reason: EvmError: Revert

Failure (2): testFailMulWadUpOverflow(uint256,uint256)
Reason: panic: division or modulo by zero (0x12)
Counterexample: {
  calldata: 0x7548499000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (3): testFailMulWadDownOverflow(uint256,uint256)
Reason: panic: division or modulo by zero (0x12)
Counterexample: {
  calldata: 0x2d82ec9b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (4): testFailMulDivUpZeroDenominator(uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x5934d2dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (5): testFailMulDivUpZeroDenominator()
Reason: EvmError: Revert

Failure (6): testFailMulDivUpOverflow(uint256,uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x4e98a496000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0
}

Failure (7): testFailMulDivDownZeroDenominator(uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x24f82bb600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (8): testFailMulDivDownZeroDenominator()
Reason: EvmError: Revert

Failure (9): testFailMulDivDownOverflow(uint256,uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xbd4d3b25000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0
}

Failure (10): testFailDivWadUpZeroDenominator(uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x35e7cf560000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (11): testFailDivWadUpZeroDenominator()
Reason: EvmError: Revert

Failure (12): testFailDivWadUpOverflow(uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x4eddffaf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (13): testFailDivWadDownZeroDenominator(uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x07f08fe10000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (14): testFailDivWadDownZeroDenominator()
Reason: EvmError: Revert

Failure (15): testFailDivWadDownOverflow(uint256,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x9763f52d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (16): testFailUnprotectedCall()
Decoded Logs: Error: a == b not satisfied [uint]
      Left: 2
     Right: 1

Failure (17): testFailWriteReadOutOfStartBound()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (18): testFailWriteReadOutOfBounds()
Reason: revert: OUT_OF_BOUNDS

Failure (19): testFailWriteReadEmptyOutOfBounds()
Reason: revert: OUT_OF_BOUNDS

Failure (20): testFailWriteReadCustomStartBoundOutOfRange(bytes,uint256,bytes)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x0e72ebc400000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x, 0, 0x
}

Failure (21): testFailWriteReadCustomBoundsOutOfRange(bytes,uint256,uint256,bytes)
Decoded Logs: Bound Result: 1
Reason: revert: OUT_OF_BOUNDS
Counterexample: {
  calldata: 0xfaaa1ad000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x, 0, 0, 0x
}

Failure (22): testFailReadInvalidPointerCustomStartBound(address,uint256,bytes)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x1f8c2f110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (23): testFailReadInvalidPointerCustomStartBound()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (24): testFailReadInvalidPointerCustomBounds(address,uint256,uint256,bytes)
Reason: revert: OUT_OF_BOUNDS
Counterexample: {
  calldata: 0xd0b0ecbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0, 0x
}

Failure (25): testFailReadInvalidPointerCustomBounds()
Reason: revert: OUT_OF_BOUNDS

Failure (26): testFailReadInvalidPointer(address,bytes)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xa7edd37c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x
}

Failure (27): testFailReadInvalidPointer()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (28): testFailSafeCastTo96(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x24674b710000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (29): testFailSafeCastTo96()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (30): testFailSafeCastTo88(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xe0ad495a0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (31): testFailSafeCastTo88()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (32): testFailSafeCastTo80(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x63e401580000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (33): testFailSafeCastTo80()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (34): testFailSafeCastTo8(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x1b8b198d0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (35): testFailSafeCastTo8()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (36): testFailSafeCastTo72(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xecd52dfe0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (37): testFailSafeCastTo72()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (38): testFailSafeCastTo64(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x515751630000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (39): testFailSafeCastTo64()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (40): testFailSafeCastTo56(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xb87be1a00000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (41): testFailSafeCastTo56()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (42): testFailSafeCastTo48(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xf3fdd32b0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (43): testFailSafeCastTo48()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (44): testFailSafeCastTo40(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xbdd0f9140000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (45): testFailSafeCastTo40()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (46): testFailSafeCastTo32(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x28dc9f040000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (47): testFailSafeCastTo32()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (48): testFailSafeCastTo248(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xc58207860000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (49): testFailSafeCastTo248()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (50): testFailSafeCastTo240(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x71a508ae0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (51): testFailSafeCastTo240()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (52): testFailSafeCastTo24(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x8482ed130000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (53): testFailSafeCastTo24()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (54): testFailSafeCastTo232(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xce2cf8510000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (55): testFailSafeCastTo232()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (56): testFailSafeCastTo224(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x6ba3c7d60000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (57): testFailSafeCastTo224()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (58): testFailSafeCastTo216(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xa172b45f0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (59): testFailSafeCastTo216()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (60): testFailSafeCastTo208(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xa493f3a50000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (61): testFailSafeCastTo208()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (62): testFailSafeCastTo200(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x3b57338f0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (63): testFailSafeCastTo200()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (64): testFailSafeCastTo192(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x333483850000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (65): testFailSafeCastTo192()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (66): testFailSafeCastTo184(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x1f70e7c40000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (67): testFailSafeCastTo184()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (68): testFailSafeCastTo176(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xdc16f0390000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (69): testFailSafeCastTo176()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (70): testFailSafeCastTo168(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xc7d873ea0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (71): testFailSafeCastTo168()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (72): testFailSafeCastTo160(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xf6c752400000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (73): testFailSafeCastTo160()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (74): testFailSafeCastTo16(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x8e4234410000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (75): testFailSafeCastTo16()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (76): testFailSafeCastTo152(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x89f479e60000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (77): testFailSafeCastTo152()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (78): testFailSafeCastTo144(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x3d998bd10000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (79): testFailSafeCastTo144()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (80): testFailSafeCastTo136(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x61654dd10000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (81): testFailSafeCastTo136()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (82): testFailSafeCastTo128(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xff8e91410000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (83): testFailSafeCastTo128()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (84): testFailSafeCastTo120(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x68c0b87f0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (85): testFailSafeCastTo120()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (86): testFailSafeCastTo112(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x40b093810000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (87): testFailSafeCastTo112()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (88): testFailSafeCastTo104(uint256)
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xcd182d400000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (89): testFailSafeCastTo104()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (90): testFailTransferWithReverting(address,uint256,bytes)
Reason: revert: TRANSFER_FAILED
Counterexample: {
  calldata: 0x1e231e4a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (91): testFailTransferWithReverting()
Reason: revert: TRANSFER_FAILED

Failure (92): testFailTransferWithReturnsTwo(address,uint256,bytes)
Reason: revert: TRANSFER_FAILED
Counterexample: {
  calldata: 0x3f50681d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (93): testFailTransferWithReturnsTooLittle(address,uint256,bytes)
Reason: revert: TRANSFER_FAILED
Counterexample: {
  calldata: 0xd98fee9d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (94): testFailTransferWithReturnsTooLittle()
Reason: revert: TRANSFER_FAILED

Failure (95): testFailTransferWithReturnsFalse(address,uint256,bytes)
Reason: revert: TRANSFER_FAILED
Counterexample: {
  calldata: 0x15e5029d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (96): testFailTransferWithReturnsFalse()
Reason: revert: TRANSFER_FAILED

Failure (97): testFailTransferWithNonContract(address,address,uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x6867a31f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (98): testFailTransferWithNonContract()
Reason: revert: TRANSFER_FAILED

Failure (99): testFailTransferWithGarbage(address,uint256,bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xf31e3f8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x, 0x
}

Failure (100): testFailTransferFromWithReverting(address,address,uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xbcababa400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (101): testFailTransferFromWithReverting()
Reason: EvmError: Revert

Failure (102): testFailTransferFromWithReturnsTwo(address,address,uint256,bytes)
Reason: revert: TRANSFER_FROM_FAILED
Counterexample: {
  calldata: 0x7ced2c2e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (103): testFailTransferFromWithReturnsTooLittle(address,address,uint256,bytes)
Reason: revert: TRANSFER_FROM_FAILED
Counterexample: {
  calldata: 0x630301d700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (104): testFailTransferFromWithReturnsTooLittle()
Reason: revert: TRANSFER_FROM_FAILED

Failure (105): testFailTransferFromWithReturnsFalse(address,address,uint256,bytes)
Reason: revert: TRANSFER_FROM_FAILED
Counterexample: {
  calldata: 0x0b3a0f3100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (106): testFailTransferFromWithReturnsFalse()
Reason: revert: TRANSFER_FROM_FAILED

Failure (107): testFailTransferFromWithNonContract(address,address,address,uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x0e7c0e54000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (108): testFailTransferFromWithNonContract()
Reason: revert: TRANSFER_FROM_FAILED

Failure (109): testFailTransferFromWithGarbage(address,address,uint256,bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xb3d71f7700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x, 0x
}

Failure (110): testFailTransferETHToContractWithoutFallback(uint256,bytes)
Reason: revert: ETH_TRANSFER_FAILED
Counterexample: {
  calldata: 0xf7efe834000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (111): testFailTransferETHToContractWithoutFallback()
Reason: revert: ETH_TRANSFER_FAILED

Failure (112): testFailApproveWithReverting(address,uint256,bytes)
Reason: revert: APPROVE_FAILED
Counterexample: {
  calldata: 0x091535590000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (113): testFailApproveWithReverting()
Reason: revert: APPROVE_FAILED

Failure (114): testFailApproveWithReturnsTwo(address,uint256,bytes)
Reason: revert: APPROVE_FAILED
Counterexample: {
  calldata: 0xb7de9c0e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (115): testFailApproveWithReturnsTooLittle(address,uint256,bytes)
Reason: revert: APPROVE_FAILED
Counterexample: {
  calldata: 0x2d2233900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (116): testFailApproveWithReturnsTooLittle()
Reason: revert: APPROVE_FAILED

Failure (117): testFailApproveWithReturnsFalse(address,uint256,bytes)
Reason: revert: APPROVE_FAILED
Counterexample: {
  calldata: 0x63bb88150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (118): testFailApproveWithReturnsFalse()
Reason: revert: APPROVE_FAILED

Failure (119): testFailApproveWithNonContract(address,address,uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x8833e0cb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0x
}

Failure (120): testFailApproveWithNonContract()
Reason: revert: APPROVE_FAILED

Failure (121): testFailApproveWithGarbage(address,uint256,bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xd996670500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x, 0x
}

Failure (122): testFailWadMulOverflow(int256,int256)
Reason: panic: division or modulo by zero (0x12)
Counterexample: {
  calldata: 0xb6bd6d0900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (123): testFailWadMulEdgeCase2()
Reason: EvmError: Revert

Failure (124): testFailWadMulEdgeCase()
Reason: EvmError: Revert

Failure (125): testFailWadDivZeroDenominator(int256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x0851889e0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (126): testFailWadDivOverflow(int256,int256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xbd171b4600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0
}

Failure (127): testFailWithdrawWithNotEnoughUnderlyingAmount()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (128): testFailWithdrawWithNoUnderlyingAmount()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (129): testFailRedeemZero()
Reason: revert: ZERO_ASSETS

Failure (130): testFailRedeemWithNotEnoughShareAmount()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (131): testFailRedeemWithNoShareAmount()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (132): testFailMintWithNoApproval()
Reason: revert: TRANSFER_FROM_FAILED

Failure (133): testFailDepositZero()
Reason: revert: ZERO_SHARES

Failure (134): testFailDepositWithNotEnoughApproval()
Reason: revert: TRANSFER_FROM_FAILED

Failure (135): testFailDepositWithNoApproval()
Reason: revert: TRANSFER_FROM_FAILED

Failure (136): testFailTransferFromNotAuthorized(address,address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xc5b21e8f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (137): testFailTransferFromNotAuthorized()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (138): testFailTransferFromBalanceUnderflow(address,address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xeeb068f90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (139): testFailTransferFromBalanceUnderflow()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (140): testFailTransferFromBalanceOverflow(address,address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x339f5f650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (141): testFailTransferFromBalanceOverflow()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (142): testFailTransferBalanceUnderflow(address,address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x21f0e4c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (143): testFailTransferBalanceUnderflow()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (144): testFailTransferBalanceOverflow(address,address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x939092050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (145): testFailTransferBalanceOverflow()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (146): testFailMintBalanceOverflow()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (147): setUp()
Reason: EvmError: Revert

Failure (148): testFailTransferInsufficientBalance(address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x6ba96baf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (149): testFailTransferInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (150): testFailTransferFromInsufficientBalance(address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x75e990ae000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (151): testFailTransferFromInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (152): testFailTransferFromInsufficientAllowance(address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xce90007c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (153): testFailTransferFromInsufficientAllowance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (154): testFailPermitReplay(uint256,address,uint256,uint256)
Reason: revert: INVALID_SIGNER
Counterexample: {
  calldata: 0x4b870ef30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (155): testFailPermitReplay()
Reason: revert: INVALID_SIGNER

Failure (156): testFailPermitPastDeadline(uint256,address,uint256,uint256)
Decoded Logs: Bound Result: 0
Reason: revert: PERMIT_DEADLINE_EXPIRED
Counterexample: {
  calldata: 0x0d438c460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (157): testFailPermitPastDeadline()
Reason: revert: PERMIT_DEADLINE_EXPIRED

Failure (158): testFailPermitBadNonce(uint256,address,uint256,uint256,uint256)
Reason: revert: INVALID_SIGNER
Counterexample: {
  calldata: 0xd9e7fb9e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000, 0, 0, 0
}

Failure (159): testFailPermitBadNonce()
Reason: revert: INVALID_SIGNER

Failure (160): testFailPermitBadDeadline(uint256,address,uint256,uint256)
Reason: revert: INVALID_SIGNER
Counterexample: {
  calldata: 0x6a6b21810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (161): testFailPermitBadDeadline()
Reason: revert: INVALID_SIGNER

Failure (162): testFailBurnInsufficientBalance(address,uint256,uint256)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x4ef2a28d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0
}

Failure (163): testFailSafeTransferFromToZero(uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 0
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0xbeee230800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0, 0x, 0x
}

Failure (164): testFailSafeTransferFromToZero()
Reason: revert: UNSAFE_RECIPIENT

Failure (165): testFailSafeTransferFromToWrongReturnDataERC1155Recipient(uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 0
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x681b454a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0, 0x, 0x
}

Failure (166): testFailSafeTransferFromToWrongReturnDataERC1155Recipient()
Reason: revert: UNSAFE_RECIPIENT

Failure (167): testFailSafeTransferFromToRevertingERC1155Recipient(uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 0
Reason: revert: �:na
Counterexample: {
  calldata: 0xa38e766700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0, 0x, 0x
}

Failure (168): testFailSafeTransferFromToRevertingERC1155Recipient()
Reason: revert: �:na

Failure (169): testFailSafeTransferFromToNonERC155Recipient(uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 0
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x1044a24000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0, 0x, 0x
}

Failure (170): testFailSafeTransferFromToNonERC155Recipient()
Reason: EvmError: Revert

Failure (171): testFailSafeTransferFromSelfInsufficientBalance(address,uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0xc49719d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0, 0, 0x, 0x
}

Failure (172): testFailSafeTransferFromSelfInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (173): testFailSafeTransferFromInsufficientBalance(address,uint256,uint256,uint256,bytes,bytes)
Decoded Logs: Bound Result: 1
Reason: panic: arithmetic underflow or overflow (0x11)
Counterexample: {
  calldata: 0x4c10d58e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0, 0, 0x, 0x
}

Failure (174): testFailSafeTransferFromInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (175): testFailSafeBatchTransferInsufficientBalance(address,uint256[],uint256[],uint256[],bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xc640f1f5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e
  args: 0x0000000000000000000000000000000000000000, [], [], [], 0x, 0x
}

Failure (176): testFailSafeBatchTransferInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (177): testFailSafeBatchTransferFromWithArrayLengthMismatch(address,uint256[],uint256[],uint256[],bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x810a2be6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e
  args: 0x0000000000000000000000000000000000000000, [], [], [], 0x, 0x
}

Failure (178): testFailSafeBatchTransferFromWithArrayLengthMismatch()
Reason: revert: LENGTH_MISMATCH

Failure (179): testFailSafeBatchTransferFromToZero(uint256[],uint256[],uint256[],bytes,bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x24a0012f00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], [], 0x, 0x
}

Failure (180): testFailSafeBatchTransferFromToZero()
Reason: revert: UNSAFE_RECIPIENT

Failure (181): testFailSafeBatchTransferFromToWrongReturnDataERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x7048aa5400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], [], 0x, 0x
}

Failure (182): testFailSafeBatchTransferFromToWrongReturnDataERC1155Recipient()
Reason: revert: UNSAFE_RECIPIENT

Failure (183): testFailSafeBatchTransferFromToRevertingERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes)
Reason: revert: �|�
Counterexample: {
  calldata: 0xf7b7676600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], [], 0x, 0x
}

Failure (184): testFailSafeBatchTransferFromToRevertingERC1155Recipient()
Reason: revert: �|�

Failure (185): testFailSafeBatchTransferFromToNonERC1155Recipient(uint256[],uint256[],uint256[],bytes,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x0e8f385e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], [], 0x, 0x
}

Failure (186): testFailSafeBatchTransferFromToNonERC1155Recipient()
Reason: EvmError: Revert

Failure (187): testFailMintToZero(uint256,uint256,bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x716f7ed50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0x
}

Failure (188): testFailMintToZero()
Reason: revert: UNSAFE_RECIPIENT

Failure (189): testFailMintToWrongReturnDataERC155Recipient(uint256,uint256,bytes)
Reason: revert: �:na
Counterexample: {
  calldata: 0x5d11fa6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0x
}

Failure (190): testFailMintToWrongReturnDataERC155Recipient()
Reason: revert: �:na

Failure (191): testFailMintToRevertingERC155Recipient(uint256,uint256,bytes)
Reason: revert: �:na
Counterexample: {
  calldata: 0x89b8fc7f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0x
}

Failure (192): testFailMintToRevertingERC155Recipient()
Reason: revert: �:na

Failure (193): testFailMintToNonERC155Recipient(uint256,uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xf393bfc20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0x
}

Failure (194): testFailMintToNonERC155Recipient()
Reason: EvmError: Revert

Failure (195): testFailBurnInsufficientBalance(address,uint256,uint256,uint256,bytes)
Decoded Logs: Bound Result: 1
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x89bc5824000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0, 0, 0x
}

Failure (196): testFailBurnInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (197): testFailBatchMintWithArrayMismatch(address,uint256[],uint256[],bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x54ecd58f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, [], [], 0x
}

Failure (198): testFailBatchMintWithArrayMismatch()
Reason: revert: LENGTH_MISMATCH

Failure (199): testFailBatchMintToZero(uint256[],uint256[],bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x8dac12c60000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], 0x
}

Failure (200): testFailBatchMintToZero()
Reason: revert: UNSAFE_RECIPIENT

Failure (201): testFailBatchMintToWrongReturnDataERC1155Recipient(uint256[],uint256[],bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0xb8b966e70000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], 0x
}

Failure (202): testFailBatchMintToWrongReturnDataERC1155Recipient()
Reason: revert: UNSAFE_RECIPIENT

Failure (203): testFailBatchMintToRevertingERC1155Recipient(uint256[],uint256[],bytes)
Reason: revert: �|�
Counterexample: {
  calldata: 0x004c3b7e0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], 0x
}

Failure (204): testFailBatchMintToRevertingERC1155Recipient()
Reason: revert: �|�

Failure (205): testFailBatchMintToNonERC1155Recipient(uint256[],uint256[],bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x8b01f4ae0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], [], 0x
}

Failure (206): testFailBatchMintToNonERC1155Recipient()
Reason: EvmError: Revert

Failure (207): testFailBatchBurnWithArrayLengthMismatch(address,uint256[],uint256[],uint256[],bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x8c9ad796000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, [], [], [], 0x
}

Failure (208): testFailBatchBurnWithArrayLengthMismatch()
Reason: revert: LENGTH_MISMATCH

Failure (209): testFailBatchBurnInsufficientBalance(address,uint256[],uint256[],uint256[],bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x9705a6c3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, [], [], [], 0x
}

Failure (210): testFailBatchBurnInsufficientBalance()
Reason: panic: arithmetic underflow or overflow (0x11)

Failure (211): testFailBalanceOfBatchWithArrayMismatch(address[],uint256[])
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xd8419c680000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: [], []
}

Failure (212): testFailBalanceOfBatchWithArrayMismatch()
Reason: revert: LENGTH_MISMATCH

Failure (213): testFailTransferFromWrongFrom(address,address,address,uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xbe4d293d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0
}

Failure (214): testFailTransferFromWrongFrom()
Reason: revert: WRONG_FROM

Failure (215): testFailTransferFromUnOwned(address,address,uint256)
Reason: revert: INVALID_RECIPIENT
Counterexample: {
  calldata: 0x279c4775000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0
}

Failure (216): testFailTransferFromUnOwned()
Reason: revert: WRONG_FROM

Failure (217): testFailTransferFromToZero(uint256)
Reason: revert: INVALID_RECIPIENT
Counterexample: {
  calldata: 0x896945110000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (218): testFailTransferFromToZero()
Reason: revert: INVALID_RECIPIENT

Failure (219): testFailTransferFromNotOwner(address,address,uint256)
Reason: revert: INVALID_RECIPIENT
Counterexample: {
  calldata: 0x40d82510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000, 0
}

Failure (220): testFailTransferFromNotOwner()
Reason: revert: NOT_AUTHORIZED

Failure (221): testFailSafeTransferFromToRevertingERC721RecipientWithData(uint256,bytes)
Reason: revert: z
Counterexample: {
  calldata: 0xc4e2f202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (222): testFailSafeTransferFromToRevertingERC721RecipientWithData()
Reason: revert: z

Failure (223): testFailSafeTransferFromToRevertingERC721Recipient(uint256)
Reason: revert: z
Counterexample: {
  calldata: 0x658b6eb80000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (224): testFailSafeTransferFromToRevertingERC721Recipient()
Reason: revert: z

Failure (225): testFailSafeTransferFromToNonERC721RecipientWithData(uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xfeae4252000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (226): testFailSafeTransferFromToNonERC721RecipientWithData()
Reason: EvmError: Revert

Failure (227): testFailSafeTransferFromToNonERC721Recipient(uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x8de397040000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (228): testFailSafeTransferFromToNonERC721Recipient()
Reason: EvmError: Revert

Failure (229): testFailSafeTransferFromToERC721RecipientWithWrongReturnDataWithData(uint256,bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0xcfa5bda9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (230): testFailSafeTransferFromToERC721RecipientWithWrongReturnDataWithData()
Reason: revert: UNSAFE_RECIPIENT

Failure (231): testFailSafeTransferFromToERC721RecipientWithWrongReturnData(uint256)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0xe3c4d3aa0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (232): testFailSafeTransferFromToERC721RecipientWithWrongReturnData()
Reason: revert: UNSAFE_RECIPIENT

Failure (233): testFailSafeMintToRevertingERC721RecipientWithData(uint256,bytes)
Reason: revert: z
Counterexample: {
  calldata: 0xf2fa5409000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (234): testFailSafeMintToRevertingERC721RecipientWithData()
Reason: revert: z

Failure (235): testFailSafeMintToRevertingERC721Recipient(uint256)
Reason: revert: z
Counterexample: {
  calldata: 0x00e1030c0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (236): testFailSafeMintToRevertingERC721Recipient()
Reason: revert: z

Failure (237): testFailSafeMintToNonERC721RecipientWithData(uint256,bytes)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x453805a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (238): testFailSafeMintToNonERC721RecipientWithData()
Reason: EvmError: Revert

Failure (239): testFailSafeMintToNonERC721Recipient(uint256)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0x2ed3fc9f0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (240): testFailSafeMintToNonERC721Recipient()
Reason: EvmError: Revert

Failure (241): testFailSafeMintToERC721RecipientWithWrongReturnDataWithData(uint256,bytes)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x44b7601d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x
}

Failure (242): testFailSafeMintToERC721RecipientWithWrongReturnDataWithData()
Reason: revert: UNSAFE_RECIPIENT

Failure (243): testFailSafeMintToERC721RecipientWithWrongReturnData(uint256)
Reason: revert: UNSAFE_RECIPIENT
Counterexample: {
  calldata: 0x2a6231200000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (244): testFailSafeMintToERC721RecipientWithWrongReturnData()
Reason: revert: UNSAFE_RECIPIENT

Failure (245): testFailOwnerOfUnminted(uint256)
Reason: revert: NOT_MINTED
Counterexample: {
  calldata: 0x99c3de010000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (246): testFailOwnerOfUnminted()
Reason: revert: NOT_MINTED

Failure (247): testFailMintToZero(uint256)
Reason: revert: INVALID_RECIPIENT
Counterexample: {
  calldata: 0x4486127f0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (248): testFailMintToZero()
Reason: revert: INVALID_RECIPIENT

Failure (249): testFailDoubleMint(uint256,address)
Reason: revert: ALREADY_MINTED
Counterexample: {
  calldata: 0xdc5a278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000
}

Failure (250): testFailDoubleMint()
Reason: revert: ALREADY_MINTED

Failure (251): testFailDoubleBurn(uint256,address)
Reason: revert: NOT_MINTED
Counterexample: {
  calldata: 0xcdaf676600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000
}

Failure (252): testFailDoubleBurn()
Reason: revert: NOT_MINTED

Failure (253): testFailBurnUnMinted(uint256)
Reason: revert: NOT_MINTED
Counterexample: {
  calldata: 0x9e2b66df0000000000000000000000000000000000000000000000000000000000000000,
  args: 0
}

Failure (254): testFailBurnUnMinted()
Reason: revert: NOT_MINTED

Failure (255): testFailBalanceOfZeroAddress()
Reason: revert: ZERO_ADDRESS

Failure (256): testFailApproveUnMinted(uint256,address)
Reason: revert: NOT_AUTHORIZED
Counterexample: {
  calldata: 0xa482897f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0x0000000000000000000000000000000000000000
}

Failure (257): testFailApproveUnMinted()
Reason: revert: NOT_AUTHORIZED

Failure (258): testFailApproveUnAuthorized(address,uint256,address)
Reason: revert: NOT_AUTHORIZED
Counterexample: {
  calldata: 0x148d33b3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0, 0x0000000000000000000000000000000000000000
}

Failure (259): testFailApproveUnAuthorized()
Reason: revert: NOT_AUTHORIZED

Failure (260): testFailTransferOwnershipWithRestrictiveAuthority(address,address)
Reason: revert: UNAUTHORIZED
Counterexample: {
  calldata: 0x2ae50a0300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000
}

Failure (261): testFailTransferOwnershipWithRestrictiveAuthority()
Reason: revert: UNAUTHORIZED

Failure (262): testFailTransferOwnershipAsOwnerWithOutOfOrderAuthority(address)
Reason: revert: OUT_OF_ORDER
Counterexample: {
  calldata: 0xb1194be30000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000
}

Failure (263): testFailTransferOwnershipAsOwnerWithOutOfOrderAuthority()
Reason: revert: OUT_OF_ORDER

Failure (264): testFailTransferOwnershipAsNonOwner(address,address)
Reason: revert: UNAUTHORIZED
Counterexample: {
  calldata: 0x19a94bd400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000
}

Failure (265): testFailTransferOwnershipAsNonOwner()
Reason: revert: UNAUTHORIZED

Failure (266): testFailSetAuthorityWithRestrictiveAuthority(address,address)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xed16e90b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000
}

Failure (267): testFailSetAuthorityWithRestrictiveAuthority()
Reason: EvmError: Revert

Failure (268): testFailSetAuthorityAsNonOwner(address,address)
Reason: EvmError: Revert
Counterexample: {
  calldata: 0xb505d12700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000
}

Failure (269): testFailSetAuthorityAsNonOwner()
Reason: EvmError: Revert

Failure (270): testFailCallFunctionWithRestrictiveAuthority(address)
Reason: revert: UNAUTHORIZED
Counterexample: {
  calldata: 0xada307d40000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000
}

Failure (271): testFailCallFunctionWithRestrictiveAuthority()
Reason: revert: UNAUTHORIZED

Failure (272): testFailCallFunctionAsOwnerWithOutOfOrderAuthority()
Reason: revert: OUT_OF_ORDER

Failure (273): testFailCallFunctionAsNonOwner(address)
Reason: revert: UNAUTHORIZED
Counterexample: {
  calldata: 0x7215c6990000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000
}

Failure (274): testFailCallFunctionAsNonOwner()
Reason: revert: UNAUTHORIZED

Failure (275): testFailDoubleDeploySameBytecode(bytes32,bytes)
Reason: revert: INITIALIZATION_FAILED
Counterexample: {
  calldata: 0x7d942637000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000000000000000000000000000, 0x
}

Failure (276): testFailDoubleDeploySameBytecode()
Reason: revert: DEPLOYMENT_FAILED

Failure (277): testFailDoubleDeployDifferentBytecode(bytes32,bytes,bytes)
Reason: revert: INITIALIZATION_FAILED
Counterexample: {
  calldata: 0x2f5ba3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0x0000000000000000000000000000000000000000000000000000000000000000, 0x, 0x
}

Failure (278): testFailDoubleDeployDifferentBytecode()
Reason: revert: DEPLOYMENT_FAILED

Failure (279): testFailBoundMinBiggerThanMax(uint256,uint256,uint256)
Reason: revert: MAX_LESS_THAN_MIN
Counterexample: {
  calldata: 0x0fefe06b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  args: 0, 0, 0
}

Failure (280): testFailBoundMinBiggerThanMax()
Reason: revert: MAX_LESS_THAN_MIN
